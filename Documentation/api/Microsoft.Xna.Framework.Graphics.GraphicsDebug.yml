### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDebug
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDebug
  id: GraphicsDebug
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.GraphicsDebug.TryDequeueMessage(Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage@)
  langs:
  - csharp
  - vb
  name: GraphicsDebug
  nameWithType: GraphicsDebug
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDebug
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsDebug.Default.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GraphicsDebug
    path: ../MonoGame.Framework/Graphics/GraphicsDebug.Default.cs
    startLine: 6
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public class GraphicsDebug
    content.vb: Public Class GraphicsDebug
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDebug.TryDequeueMessage(Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage@)
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsDebug.TryDequeueMessage(Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage@)
  id: TryDequeueMessage(Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage@)
  parent: Microsoft.Xna.Framework.Graphics.GraphicsDebug
  langs:
  - csharp
  - vb
  name: TryDequeueMessage(out GraphicsDebugMessage)
  nameWithType: GraphicsDebug.TryDequeueMessage(out GraphicsDebugMessage)
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDebug.TryDequeueMessage(out Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsDebug.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TryDequeueMessage
    path: ../MonoGame.Framework/Graphics/GraphicsDebug.cs
    startLine: 18
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nAttempt to dequeue a debugging message from the graphics subsystem.\n"
  remarks: "\nWhen running on a graphics device with debugging enabled, this allows you to retrieve\nsubsystem-specific (e.g. DirectX, OpenGL, etc.) debugging messages including information\nabout improper usage of shaders and APIs.\n"
  example: []
  syntax:
    content: public bool TryDequeueMessage(out GraphicsDebugMessage message)
    parameters:
    - id: message
      type: Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage
      description: The graphics debugging message if retrieved, null otherwise.
    return:
      type: System.Boolean
      description: True if a graphics debugging message was retrieved, false otherwise.
    content.vb: Public Function TryDequeueMessage(ByRef message As GraphicsDebugMessage) As Boolean
  overload: Microsoft.Xna.Framework.Graphics.GraphicsDebug.TryDequeueMessage*
  nameWithType.vb: GraphicsDebug.TryDequeueMessage(ByRef GraphicsDebugMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.GraphicsDebug.TryDequeueMessage(ByRef Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage)
  name.vb: TryDequeueMessage(ByRef GraphicsDebugMessage)
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDebug.TryDequeueMessage*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsDebug.TryDequeueMessage
  isExternal: false
  name: TryDequeueMessage
  nameWithType: GraphicsDebug.TryDequeueMessage
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDebug.TryDequeueMessage
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsDebugMessage
  nameWithType: GraphicsDebugMessage
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDebugMessage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
