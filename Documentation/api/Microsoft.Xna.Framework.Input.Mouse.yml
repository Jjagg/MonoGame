### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Input.Mouse
  commentId: T:Microsoft.Xna.Framework.Input.Mouse
  id: Mouse
  parent: Microsoft.Xna.Framework.Input
  children:
  - Microsoft.Xna.Framework.Input.Mouse.GetState
  - Microsoft.Xna.Framework.Input.Mouse.GetState(Microsoft.Xna.Framework.GameWindow)
  - Microsoft.Xna.Framework.Input.Mouse.SetCursor(Microsoft.Xna.Framework.Input.MouseCursor)
  - Microsoft.Xna.Framework.Input.Mouse.SetPosition(System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Input.Mouse.WindowHandle
  langs:
  - csharp
  - vb
  name: Mouse
  nameWithType: Mouse
  fullName: Microsoft.Xna.Framework.Input.Mouse
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Input/Mouse.SDL.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Mouse
    path: ../MonoGame.Framework/Input/Mouse.SDL.cs
    startLine: 8
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nAllows reading position and button click information from mouse.\n"
  example: []
  syntax:
    content: public static class Mouse
    content.vb: Public Module Mouse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Xna.Framework.Input.Mouse.WindowHandle
  commentId: P:Microsoft.Xna.Framework.Input.Mouse.WindowHandle
  id: WindowHandle
  parent: Microsoft.Xna.Framework.Input.Mouse
  langs:
  - csharp
  - vb
  name: WindowHandle
  nameWithType: Mouse.WindowHandle
  fullName: Microsoft.Xna.Framework.Input.Mouse.WindowHandle
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Mouse.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: WindowHandle
    path: ../MonoGame.Framework/Input/Mouse.cs
    startLine: 20
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets or sets the window handle for current mouse processing.\n"
  example: []
  syntax:
    content: public static IntPtr WindowHandle { get; set; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public Shared Property WindowHandle As IntPtr
  overload: Microsoft.Xna.Framework.Input.Mouse.WindowHandle*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Input.Mouse.GetState(Microsoft.Xna.Framework.GameWindow)
  commentId: M:Microsoft.Xna.Framework.Input.Mouse.GetState(Microsoft.Xna.Framework.GameWindow)
  id: GetState(Microsoft.Xna.Framework.GameWindow)
  parent: Microsoft.Xna.Framework.Input.Mouse
  langs:
  - csharp
  - vb
  name: GetState(GameWindow)
  nameWithType: Mouse.GetState(GameWindow)
  fullName: Microsoft.Xna.Framework.Input.Mouse.GetState(Microsoft.Xna.Framework.GameWindow)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Input/Mouse.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetState
    path: ../MonoGame.Framework/Input/Mouse.cs
    startLine: 32
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nThis API is an extension to XNA.\nGets mouse state information that includes position and button\npresses for the provided window\n"
  example: []
  syntax:
    content: public static MouseState GetState(GameWindow window)
    parameters:
    - id: window
      type: Microsoft.Xna.Framework.GameWindow
    return:
      type: Microsoft.Xna.Framework.Input.MouseState
      description: Current state of the mouse.
    content.vb: Public Shared Function GetState(window As GameWindow) As MouseState
  overload: Microsoft.Xna.Framework.Input.Mouse.GetState*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Input.Mouse.GetState
  commentId: M:Microsoft.Xna.Framework.Input.Mouse.GetState
  id: GetState
  parent: Microsoft.Xna.Framework.Input.Mouse
  langs:
  - csharp
  - vb
  name: GetState()
  nameWithType: Mouse.GetState()
  fullName: Microsoft.Xna.Framework.Input.Mouse.GetState()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Input/Mouse.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetState
    path: ../MonoGame.Framework/Input/Mouse.cs
    startLine: 42
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets mouse state information that includes position and button presses\nfor the primary window\n"
  example: []
  syntax:
    content: public static MouseState GetState()
    return:
      type: Microsoft.Xna.Framework.Input.MouseState
      description: Current state of the mouse.
    content.vb: Public Shared Function GetState As MouseState
  overload: Microsoft.Xna.Framework.Input.Mouse.GetState*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Input.Mouse.SetPosition(System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Input.Mouse.SetPosition(System.Int32,System.Int32)
  id: SetPosition(System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Input.Mouse
  langs:
  - csharp
  - vb
  name: SetPosition(Int32, Int32)
  nameWithType: Mouse.SetPosition(Int32, Int32)
  fullName: Microsoft.Xna.Framework.Input.Mouse.SetPosition(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Input/Mouse.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetPosition
    path: ../MonoGame.Framework/Input/Mouse.cs
    startLine: 55
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nSets mouse cursor&apos;s relative position to game-window.\n"
  example: []
  syntax:
    content: public static void SetPosition(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: Relative horizontal position of the cursor.
    - id: y
      type: System.Int32
      description: Relative vertical position of the cursor.
    content.vb: Public Shared Sub SetPosition(x As Integer, y As Integer)
  overload: Microsoft.Xna.Framework.Input.Mouse.SetPosition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Input.Mouse.SetCursor(Microsoft.Xna.Framework.Input.MouseCursor)
  commentId: M:Microsoft.Xna.Framework.Input.Mouse.SetCursor(Microsoft.Xna.Framework.Input.MouseCursor)
  id: SetCursor(Microsoft.Xna.Framework.Input.MouseCursor)
  parent: Microsoft.Xna.Framework.Input.Mouse
  langs:
  - csharp
  - vb
  name: SetCursor(MouseCursor)
  nameWithType: Mouse.SetCursor(MouseCursor)
  fullName: Microsoft.Xna.Framework.Input.Mouse.SetCursor(Microsoft.Xna.Framework.Input.MouseCursor)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Input/Mouse.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetCursor
    path: ../MonoGame.Framework/Input/Mouse.cs
    startLine: 64
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nSets the cursor image to the specified MouseCursor.\n"
  example: []
  syntax:
    content: public static void SetCursor(MouseCursor cursor)
    parameters:
    - id: cursor
      type: Microsoft.Xna.Framework.Input.MouseCursor
      description: Mouse cursor to use for the cursor image.
    content.vb: Public Shared Sub SetCursor(cursor As MouseCursor)
  overload: Microsoft.Xna.Framework.Input.Mouse.SetCursor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Xna.Framework.Input
  commentId: N:Microsoft.Xna.Framework.Input
  isExternal: false
  name: Microsoft.Xna.Framework.Input
  nameWithType: Microsoft.Xna.Framework.Input
  fullName: Microsoft.Xna.Framework.Input
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Input.Mouse.WindowHandle*
  commentId: Overload:Microsoft.Xna.Framework.Input.Mouse.WindowHandle
  isExternal: false
  name: WindowHandle
  nameWithType: Mouse.WindowHandle
  fullName: Microsoft.Xna.Framework.Input.Mouse.WindowHandle
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Xna.Framework.Input.Mouse.GetState*
  commentId: Overload:Microsoft.Xna.Framework.Input.Mouse.GetState
  isExternal: false
  name: GetState
  nameWithType: Mouse.GetState
  fullName: Microsoft.Xna.Framework.Input.Mouse.GetState
- uid: Microsoft.Xna.Framework.GameWindow
  commentId: T:Microsoft.Xna.Framework.GameWindow
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: GameWindow
  nameWithType: GameWindow
  fullName: Microsoft.Xna.Framework.GameWindow
- uid: Microsoft.Xna.Framework.Input.MouseState
  commentId: T:Microsoft.Xna.Framework.Input.MouseState
  parent: Microsoft.Xna.Framework.Input
  isExternal: false
  name: MouseState
  nameWithType: MouseState
  fullName: Microsoft.Xna.Framework.Input.MouseState
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Input.Mouse.SetPosition*
  commentId: Overload:Microsoft.Xna.Framework.Input.Mouse.SetPosition
  isExternal: false
  name: SetPosition
  nameWithType: Mouse.SetPosition
  fullName: Microsoft.Xna.Framework.Input.Mouse.SetPosition
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Input.Mouse.SetCursor*
  commentId: Overload:Microsoft.Xna.Framework.Input.Mouse.SetCursor
  isExternal: false
  name: SetCursor
  nameWithType: Mouse.SetCursor
  fullName: Microsoft.Xna.Framework.Input.Mouse.SetCursor
- uid: Microsoft.Xna.Framework.Input.MouseCursor
  commentId: T:Microsoft.Xna.Framework.Input.MouseCursor
  parent: Microsoft.Xna.Framework.Input
  isExternal: false
  name: MouseCursor
  nameWithType: MouseCursor
  fullName: Microsoft.Xna.Framework.Input.MouseCursor
