### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType
  commentId: T:Microsoft.Xna.Framework.Input.Touch.GestureType
  id: GestureType
  parent: Microsoft.Xna.Framework.Input.Touch
  children:
  - Microsoft.Xna.Framework.Input.Touch.GestureType.DoubleTap
  - Microsoft.Xna.Framework.Input.Touch.GestureType.DragComplete
  - Microsoft.Xna.Framework.Input.Touch.GestureType.Flick
  - Microsoft.Xna.Framework.Input.Touch.GestureType.FreeDrag
  - Microsoft.Xna.Framework.Input.Touch.GestureType.Hold
  - Microsoft.Xna.Framework.Input.Touch.GestureType.HorizontalDrag
  - Microsoft.Xna.Framework.Input.Touch.GestureType.None
  - Microsoft.Xna.Framework.Input.Touch.GestureType.Pinch
  - Microsoft.Xna.Framework.Input.Touch.GestureType.PinchComplete
  - Microsoft.Xna.Framework.Input.Touch.GestureType.Tap
  - Microsoft.Xna.Framework.Input.Touch.GestureType.VerticalDrag
  langs:
  - csharp
  - vb
  name: GestureType
  nameWithType: GestureType
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType
  type: Enum
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GestureType
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 47
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nEnumuration of values that represent different gestures that can be processed by <xref href=\"Microsoft.Xna.Framework.Input.Touch.TouchPanel.ReadGesture\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum GestureType
    content.vb: >-
      <Flags>

      Public Enum GestureType
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.None
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.None
  id: None
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: GestureType.None
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.None
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: None
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 53
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nNo gestures.\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.Tap
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.Tap
  id: Tap
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: Tap
  nameWithType: GestureType.Tap
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.Tap
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Tap
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 57
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nThe user touched a single point.\n"
  example: []
  syntax:
    content: Tap = 1
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.DragComplete
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.DragComplete
  id: DragComplete
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: DragComplete
  nameWithType: GestureType.DragComplete
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.DragComplete
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DragComplete
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 62
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nStates completion of a drag gesture(VerticalDrag, HorizontalDrag, or FreeDrag).\n"
  remarks: No position or delta information is available for this sample.
  example: []
  syntax:
    content: DragComplete = 2
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.Flick
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.Flick
  id: Flick
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: Flick
  nameWithType: GestureType.Flick
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.Flick
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Flick
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 67
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nStates that a touch was combined with a quick swipe.\n"
  remarks: Flicks does not contain position information. The velocity of it can be read from <xref href="Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Flick = 4
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.FreeDrag
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.FreeDrag
  id: FreeDrag
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: FreeDrag
  nameWithType: GestureType.FreeDrag
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.FreeDrag
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FreeDrag
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 71
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nThe use touched a point and then performed a free-form drag.\n"
  example: []
  syntax:
    content: FreeDrag = 8
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.Hold
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.Hold
  id: Hold
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: Hold
  nameWithType: GestureType.Hold
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.Hold
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Hold
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 76
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nThe use touched a single point for approximately one second.\n"
  remarks: As this is a single event, it will not be contionusly fired while the user is holding the touch-point.
  example: []
  syntax:
    content: Hold = 16
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.HorizontalDrag
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.HorizontalDrag
  id: HorizontalDrag
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: HorizontalDrag
  nameWithType: GestureType.HorizontalDrag
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.HorizontalDrag
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: HorizontalDrag
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 80
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nThe user touched the screen and performed either left to right or right to left drag gesture.\n"
  example: []
  syntax:
    content: HorizontalDrag = 32
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.Pinch
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.Pinch
  id: Pinch
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: Pinch
  nameWithType: GestureType.Pinch
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.Pinch
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Pinch
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 85
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nThe user either converged or diverged two touch-points on the screen which is like a two-finger drag.\n"
  remarks: When this gesture-type is enabled and two fingers are down, it takes precedence over drag gestures.
  example: []
  syntax:
    content: Pinch = 64
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.PinchComplete
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.PinchComplete
  id: PinchComplete
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: PinchComplete
  nameWithType: GestureType.PinchComplete
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.PinchComplete
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PinchComplete
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 90
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nAn in-progress pinch operation was completed.\n"
  remarks: No position or delta information is available for this sample.
  example: []
  syntax:
    content: PinchComplete = 128
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.DoubleTap
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.DoubleTap
  id: DoubleTap
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: DoubleTap
  nameWithType: GestureType.DoubleTap
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.DoubleTap
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DoubleTap
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 95
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nThe user tapped the device twice which is always preceded by a Tap gesture.\n"
  remarks: If the time between two touchs are long enough, insted two seperate single Tap gestures will be generated.
  example: []
  syntax:
    content: DoubleTap = 256
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType.VerticalDrag
  commentId: F:Microsoft.Xna.Framework.Input.Touch.GestureType.VerticalDrag
  id: VerticalDrag
  parent: Microsoft.Xna.Framework.Input.Touch.GestureType
  langs:
  - csharp
  - vb
  name: VerticalDrag
  nameWithType: GestureType.VerticalDrag
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType.VerticalDrag
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: VerticalDrag
    path: ../MonoGame.Framework/Input/Touch/GestureType.cs
    startLine: 99
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nThe user touched the screen and performed either top to bottom or bottom to top drag gesture.\n"
  example: []
  syntax:
    content: VerticalDrag = 512
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanel.ReadGesture
  commentId: M:Microsoft.Xna.Framework.Input.Touch.TouchPanel.ReadGesture
- uid: Microsoft.Xna.Framework.Input.Touch
  commentId: N:Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: Microsoft.Xna.Framework.Input.Touch
  nameWithType: Microsoft.Xna.Framework.Input.Touch
  fullName: Microsoft.Xna.Framework.Input.Touch
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType
  commentId: T:Microsoft.Xna.Framework.Input.Touch.GestureType
  parent: Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: GestureType
  nameWithType: GestureType
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta
  commentId: P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta
