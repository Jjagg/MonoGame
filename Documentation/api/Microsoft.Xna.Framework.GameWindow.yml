### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.GameWindow
  commentId: T:Microsoft.Xna.Framework.GameWindow
  id: GameWindow
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.GameWindow.#ctor
  - Microsoft.Xna.Framework.GameWindow.AllowAltF4
  - Microsoft.Xna.Framework.GameWindow.AllowUserResizing
  - Microsoft.Xna.Framework.GameWindow.BeginScreenDeviceChange(System.Boolean)
  - Microsoft.Xna.Framework.GameWindow.ClientBounds
  - Microsoft.Xna.Framework.GameWindow.ClientSizeChanged
  - Microsoft.Xna.Framework.GameWindow.CurrentOrientation
  - Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange(System.String)
  - Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange(System.String,System.Int32,System.Int32)
  - Microsoft.Xna.Framework.GameWindow.Handle
  - Microsoft.Xna.Framework.GameWindow.IsBorderless
  - Microsoft.Xna.Framework.GameWindow.OnActivated
  - Microsoft.Xna.Framework.GameWindow.OnDeactivated
  - Microsoft.Xna.Framework.GameWindow.OnOrientationChanged
  - Microsoft.Xna.Framework.GameWindow.OnPaint
  - Microsoft.Xna.Framework.GameWindow.OnScreenDeviceNameChanged
  - Microsoft.Xna.Framework.GameWindow.OnTextInput(System.Object,Microsoft.Xna.Framework.TextInputEventArgs)
  - Microsoft.Xna.Framework.GameWindow.OrientationChanged
  - Microsoft.Xna.Framework.GameWindow.Position
  - Microsoft.Xna.Framework.GameWindow.ScreenDeviceName
  - Microsoft.Xna.Framework.GameWindow.ScreenDeviceNameChanged
  - Microsoft.Xna.Framework.GameWindow.SetSupportedOrientations(Microsoft.Xna.Framework.DisplayOrientation)
  - Microsoft.Xna.Framework.GameWindow.SetTitle(System.String)
  - Microsoft.Xna.Framework.GameWindow.TextInput
  - Microsoft.Xna.Framework.GameWindow.Title
  langs:
  - csharp
  - vb
  name: GameWindow
  nameWithType: GameWindow
  fullName: Microsoft.Xna.Framework.GameWindow
  type: Class
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GameWindow
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 10
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public abstract class GameWindow
    content.vb: Public MustInherit Class GameWindow
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Xna.Framework.GameWindow.AllowUserResizing
  commentId: P:Microsoft.Xna.Framework.GameWindow.AllowUserResizing
  id: AllowUserResizing
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: AllowUserResizing
  nameWithType: GameWindow.AllowUserResizing
  fullName: Microsoft.Xna.Framework.GameWindow.AllowUserResizing
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AllowUserResizing
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 13
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public abstract bool AllowUserResizing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride Property AllowUserResizing As Boolean
  overload: Microsoft.Xna.Framework.GameWindow.AllowUserResizing*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.Xna.Framework.GameWindow.ClientBounds
  commentId: P:Microsoft.Xna.Framework.GameWindow.ClientBounds
  id: ClientBounds
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: ClientBounds
  nameWithType: GameWindow.ClientBounds
  fullName: Microsoft.Xna.Framework.GameWindow.ClientBounds
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ClientBounds
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 16
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public abstract Rectangle ClientBounds { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Public MustOverride ReadOnly Property ClientBounds As Rectangle
  overload: Microsoft.Xna.Framework.GameWindow.ClientBounds*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.Xna.Framework.GameWindow.AllowAltF4
  commentId: P:Microsoft.Xna.Framework.GameWindow.AllowAltF4
  id: AllowAltF4
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: AllowAltF4
  nameWithType: GameWindow.AllowAltF4
  fullName: Microsoft.Xna.Framework.GameWindow.AllowAltF4
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AllowAltF4
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 23
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets or sets a bool that enables usage of Alt+F4 for window closing on desktop platforms. Value is true by default.\n"
  example: []
  syntax:
    content: public virtual bool AllowAltF4 { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property AllowAltF4 As Boolean
  overload: Microsoft.Xna.Framework.GameWindow.AllowAltF4*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Xna.Framework.GameWindow.Position
  commentId: P:Microsoft.Xna.Framework.GameWindow.Position
  id: Position
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: GameWindow.Position
  fullName: Microsoft.Xna.Framework.GameWindow.Position
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Position
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 30
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe location of this window on the desktop, eg: global coordinate space\nwhich stretches across all screens.\n"
  example: []
  syntax:
    content: public abstract Point Position { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public MustOverride Property Position As Point
  overload: Microsoft.Xna.Framework.GameWindow.Position*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.Xna.Framework.GameWindow.CurrentOrientation
  commentId: P:Microsoft.Xna.Framework.GameWindow.CurrentOrientation
  id: CurrentOrientation
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: CurrentOrientation
  nameWithType: GameWindow.CurrentOrientation
  fullName: Microsoft.Xna.Framework.GameWindow.CurrentOrientation
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CurrentOrientation
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 33
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public abstract DisplayOrientation CurrentOrientation { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.DisplayOrientation
    content.vb: Public MustOverride ReadOnly Property CurrentOrientation As DisplayOrientation
  overload: Microsoft.Xna.Framework.GameWindow.CurrentOrientation*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.Xna.Framework.GameWindow.Handle
  commentId: P:Microsoft.Xna.Framework.GameWindow.Handle
  id: Handle
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: GameWindow.Handle
  fullName: Microsoft.Xna.Framework.GameWindow.Handle
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Handle
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 35
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public abstract IntPtr Handle { get; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public MustOverride ReadOnly Property Handle As IntPtr
  overload: Microsoft.Xna.Framework.GameWindow.Handle*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.Xna.Framework.GameWindow.ScreenDeviceName
  commentId: P:Microsoft.Xna.Framework.GameWindow.ScreenDeviceName
  id: ScreenDeviceName
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: ScreenDeviceName
  nameWithType: GameWindow.ScreenDeviceName
  fullName: Microsoft.Xna.Framework.GameWindow.ScreenDeviceName
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ScreenDeviceName
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 37
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public abstract string ScreenDeviceName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property ScreenDeviceName As String
  overload: Microsoft.Xna.Framework.GameWindow.ScreenDeviceName*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Microsoft.Xna.Framework.GameWindow.Title
  commentId: P:Microsoft.Xna.Framework.GameWindow.Title
  id: Title
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: GameWindow.Title
  fullName: Microsoft.Xna.Framework.GameWindow.Title
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Title
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 47
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets or sets the title of the game window.\n"
  remarks: "\nFor Windows 8 and Windows 10 UWP this has no effect. For these platforms the title should be\nset by using the DisplayName property found in the app manifest file.\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Microsoft.Xna.Framework.GameWindow.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameWindow.IsBorderless
  commentId: P:Microsoft.Xna.Framework.GameWindow.IsBorderless
  id: IsBorderless
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: IsBorderless
  nameWithType: GameWindow.IsBorderless
  fullName: Microsoft.Xna.Framework.GameWindow.IsBorderless
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsBorderless
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 63
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDetermines whether the border of the window is visible. Currently only supported on the WinDX and WinGL/Linux platforms.\n"
  example: []
  syntax:
    content: public virtual bool IsBorderless { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsBorderless As Boolean
  overload: Microsoft.Xna.Framework.GameWindow.IsBorderless*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nThrown when trying to use this property on a platform other than the WinDX and WinGL/Linux platforms.\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Xna.Framework.GameWindow.#ctor
  commentId: M:Microsoft.Xna.Framework.GameWindow.#ctor
  id: '#ctor'
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: GameWindow()
  nameWithType: GameWindow.GameWindow()
  fullName: Microsoft.Xna.Framework.GameWindow.GameWindow()
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 78
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected GameWindow()
    content.vb: Protected Sub New
  overload: Microsoft.Xna.Framework.GameWindow.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.GameWindow.ClientSizeChanged
  commentId: E:Microsoft.Xna.Framework.GameWindow.ClientSizeChanged
  id: ClientSizeChanged
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: ClientSizeChanged
  nameWithType: GameWindow.ClientSizeChanged
  fullName: Microsoft.Xna.Framework.GameWindow.ClientSizeChanged
  type: Event
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ClientSizeChanged
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 87
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public event EventHandler<EventArgs> ClientSizeChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event ClientSizeChanged As EventHandler(Of EventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameWindow.OrientationChanged
  commentId: E:Microsoft.Xna.Framework.GameWindow.OrientationChanged
  id: OrientationChanged
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: OrientationChanged
  nameWithType: GameWindow.OrientationChanged
  fullName: Microsoft.Xna.Framework.GameWindow.OrientationChanged
  type: Event
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OrientationChanged
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 88
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public event EventHandler<EventArgs> OrientationChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event OrientationChanged As EventHandler(Of EventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameWindow.ScreenDeviceNameChanged
  commentId: E:Microsoft.Xna.Framework.GameWindow.ScreenDeviceNameChanged
  id: ScreenDeviceNameChanged
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: ScreenDeviceNameChanged
  nameWithType: GameWindow.ScreenDeviceNameChanged
  fullName: Microsoft.Xna.Framework.GameWindow.ScreenDeviceNameChanged
  type: Event
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ScreenDeviceNameChanged
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 89
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public event EventHandler<EventArgs> ScreenDeviceNameChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event ScreenDeviceNameChanged As EventHandler(Of EventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameWindow.TextInput
  commentId: E:Microsoft.Xna.Framework.GameWindow.TextInput
  id: TextInput
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: TextInput
  nameWithType: GameWindow.TextInput
  fullName: Microsoft.Xna.Framework.GameWindow.TextInput
  type: Event
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TextInput
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 103
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nUse this event to retrieve text for objects like textbox&apos;s.\nThis event is not raised by noncharacter keys.\nThis event also supports key repeat.\nFor more information this event is based off:\nhttp://msdn.microsoft.com/en-AU/library/system.windows.forms.control.keypress.aspx\n"
  remarks: "\nThis event is only supported on the Windows DirectX, Windows OpenGL and Linux platforms.\n"
  example: []
  syntax:
    content: public event EventHandler<TextInputEventArgs> TextInput
    return:
      type: System.EventHandler{Microsoft.Xna.Framework.TextInputEventArgs}
    content.vb: Public Event TextInput As EventHandler(Of TextInputEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameWindow.BeginScreenDeviceChange(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.GameWindow.BeginScreenDeviceChange(System.Boolean)
  id: BeginScreenDeviceChange(System.Boolean)
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: BeginScreenDeviceChange(Boolean)
  nameWithType: GameWindow.BeginScreenDeviceChange(Boolean)
  fullName: Microsoft.Xna.Framework.GameWindow.BeginScreenDeviceChange(System.Boolean)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: BeginScreenDeviceChange
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 108
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public abstract void BeginScreenDeviceChange(bool willBeFullScreen)
    parameters:
    - id: willBeFullScreen
      type: System.Boolean
    content.vb: Public MustOverride Sub BeginScreenDeviceChange(willBeFullScreen As Boolean)
  overload: Microsoft.Xna.Framework.GameWindow.BeginScreenDeviceChange*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange(System.String,System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange(System.String,System.Int32,System.Int32)
  id: EndScreenDeviceChange(System.String,System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: EndScreenDeviceChange(String, Int32, Int32)
  nameWithType: GameWindow.EndScreenDeviceChange(String, Int32, Int32)
  fullName: Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EndScreenDeviceChange
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 110
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public abstract void EndScreenDeviceChange(string screenDeviceName, int clientWidth, int clientHeight)
    parameters:
    - id: screenDeviceName
      type: System.String
    - id: clientWidth
      type: System.Int32
    - id: clientHeight
      type: System.Int32
    content.vb: Public MustOverride Sub EndScreenDeviceChange(screenDeviceName As String, clientWidth As Integer, clientHeight As Integer)
  overload: Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange(System.String)
  commentId: M:Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange(System.String)
  id: EndScreenDeviceChange(System.String)
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: EndScreenDeviceChange(String)
  nameWithType: GameWindow.EndScreenDeviceChange(String)
  fullName: Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange(System.String)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EndScreenDeviceChange
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 113
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public void EndScreenDeviceChange(string screenDeviceName)
    parameters:
    - id: screenDeviceName
      type: System.String
    content.vb: Public Sub EndScreenDeviceChange(screenDeviceName As String)
  overload: Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameWindow.OnActivated
  commentId: M:Microsoft.Xna.Framework.GameWindow.OnActivated
  id: OnActivated
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: OnActivated()
  nameWithType: GameWindow.OnActivated()
  fullName: Microsoft.Xna.Framework.GameWindow.OnActivated()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnActivated
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 118
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected void OnActivated()
    content.vb: Protected Sub OnActivated
  overload: Microsoft.Xna.Framework.GameWindow.OnActivated*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.GameWindow.OnDeactivated
  commentId: M:Microsoft.Xna.Framework.GameWindow.OnDeactivated
  id: OnDeactivated
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: OnDeactivated()
  nameWithType: GameWindow.OnDeactivated()
  fullName: Microsoft.Xna.Framework.GameWindow.OnDeactivated()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnDeactivated
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 127
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected void OnDeactivated()
    content.vb: Protected Sub OnDeactivated
  overload: Microsoft.Xna.Framework.GameWindow.OnDeactivated*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.GameWindow.OnOrientationChanged
  commentId: M:Microsoft.Xna.Framework.GameWindow.OnOrientationChanged
  id: OnOrientationChanged
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: OnOrientationChanged()
  nameWithType: GameWindow.OnOrientationChanged()
  fullName: Microsoft.Xna.Framework.GameWindow.OnOrientationChanged()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnOrientationChanged
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 131
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected void OnOrientationChanged()
    content.vb: Protected Sub OnOrientationChanged
  overload: Microsoft.Xna.Framework.GameWindow.OnOrientationChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.GameWindow.OnPaint
  commentId: M:Microsoft.Xna.Framework.GameWindow.OnPaint
  id: OnPaint
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: OnPaint()
  nameWithType: GameWindow.OnPaint()
  fullName: Microsoft.Xna.Framework.GameWindow.OnPaint()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnPaint
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 136
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected void OnPaint()
    content.vb: Protected Sub OnPaint
  overload: Microsoft.Xna.Framework.GameWindow.OnPaint*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.GameWindow.OnScreenDeviceNameChanged
  commentId: M:Microsoft.Xna.Framework.GameWindow.OnScreenDeviceNameChanged
  id: OnScreenDeviceNameChanged
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: OnScreenDeviceNameChanged()
  nameWithType: GameWindow.OnScreenDeviceNameChanged()
  fullName: Microsoft.Xna.Framework.GameWindow.OnScreenDeviceNameChanged()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnScreenDeviceNameChanged
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 140
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected void OnScreenDeviceNameChanged()
    content.vb: Protected Sub OnScreenDeviceNameChanged
  overload: Microsoft.Xna.Framework.GameWindow.OnScreenDeviceNameChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.GameWindow.OnTextInput(System.Object,Microsoft.Xna.Framework.TextInputEventArgs)
  commentId: M:Microsoft.Xna.Framework.GameWindow.OnTextInput(System.Object,Microsoft.Xna.Framework.TextInputEventArgs)
  id: OnTextInput(System.Object,Microsoft.Xna.Framework.TextInputEventArgs)
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: OnTextInput(Object, TextInputEventArgs)
  nameWithType: GameWindow.OnTextInput(Object, TextInputEventArgs)
  fullName: Microsoft.Xna.Framework.GameWindow.OnTextInput(System.Object, Microsoft.Xna.Framework.TextInputEventArgs)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnTextInput
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 146
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected void OnTextInput(object sender, TextInputEventArgs e)
    parameters:
    - id: sender
      type: System.Object
    - id: e
      type: Microsoft.Xna.Framework.TextInputEventArgs
    content.vb: Protected Sub OnTextInput(sender As Object, e As TextInputEventArgs)
  overload: Microsoft.Xna.Framework.GameWindow.OnTextInput*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.GameWindow.SetSupportedOrientations(Microsoft.Xna.Framework.DisplayOrientation)
  commentId: M:Microsoft.Xna.Framework.GameWindow.SetSupportedOrientations(Microsoft.Xna.Framework.DisplayOrientation)
  id: SetSupportedOrientations(Microsoft.Xna.Framework.DisplayOrientation)
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: SetSupportedOrientations(DisplayOrientation)
  nameWithType: GameWindow.SetSupportedOrientations(DisplayOrientation)
  fullName: Microsoft.Xna.Framework.GameWindow.SetSupportedOrientations(Microsoft.Xna.Framework.DisplayOrientation)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetSupportedOrientations
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 152
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected abstract void SetSupportedOrientations(DisplayOrientation orientations)
    parameters:
    - id: orientations
      type: Microsoft.Xna.Framework.DisplayOrientation
    content.vb: Protected MustOverride Sub SetSupportedOrientations(orientations As DisplayOrientation)
  overload: Microsoft.Xna.Framework.GameWindow.SetSupportedOrientations*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.Xna.Framework.GameWindow.SetTitle(System.String)
  commentId: M:Microsoft.Xna.Framework.GameWindow.SetTitle(System.String)
  id: SetTitle(System.String)
  parent: Microsoft.Xna.Framework.GameWindow
  langs:
  - csharp
  - vb
  name: SetTitle(String)
  nameWithType: GameWindow.SetTitle(String)
  fullName: Microsoft.Xna.Framework.GameWindow.SetTitle(System.String)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameWindow.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetTitle
    path: ../MonoGame.Framework/GameWindow.cs
    startLine: 153
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected abstract void SetTitle(string title)
    parameters:
    - id: title
      type: System.String
    content.vb: Protected MustOverride Sub SetTitle(title As String)
  overload: Microsoft.Xna.Framework.GameWindow.SetTitle*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.GameWindow.AllowUserResizing*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.AllowUserResizing
  isExternal: false
  name: AllowUserResizing
  nameWithType: GameWindow.AllowUserResizing
  fullName: Microsoft.Xna.Framework.GameWindow.AllowUserResizing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.GameWindow.ClientBounds*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.ClientBounds
  isExternal: false
  name: ClientBounds
  nameWithType: GameWindow.ClientBounds
  fullName: Microsoft.Xna.Framework.GameWindow.ClientBounds
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: Microsoft.Xna.Framework.GameWindow.AllowAltF4*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.AllowAltF4
  isExternal: false
  name: AllowAltF4
  nameWithType: GameWindow.AllowAltF4
  fullName: Microsoft.Xna.Framework.GameWindow.AllowAltF4
- uid: Microsoft.Xna.Framework.GameWindow.Position*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.Position
  isExternal: false
  name: Position
  nameWithType: GameWindow.Position
  fullName: Microsoft.Xna.Framework.GameWindow.Position
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework.GameWindow.CurrentOrientation*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.CurrentOrientation
  isExternal: false
  name: CurrentOrientation
  nameWithType: GameWindow.CurrentOrientation
  fullName: Microsoft.Xna.Framework.GameWindow.CurrentOrientation
- uid: Microsoft.Xna.Framework.DisplayOrientation
  commentId: T:Microsoft.Xna.Framework.DisplayOrientation
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: DisplayOrientation
  nameWithType: DisplayOrientation
  fullName: Microsoft.Xna.Framework.DisplayOrientation
- uid: Microsoft.Xna.Framework.GameWindow.Handle*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.Handle
  isExternal: false
  name: Handle
  nameWithType: GameWindow.Handle
  fullName: Microsoft.Xna.Framework.GameWindow.Handle
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Xna.Framework.GameWindow.ScreenDeviceName*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.ScreenDeviceName
  isExternal: false
  name: ScreenDeviceName
  nameWithType: GameWindow.ScreenDeviceName
  fullName: Microsoft.Xna.Framework.GameWindow.ScreenDeviceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.GameWindow.Title*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.Title
  isExternal: false
  name: Title
  nameWithType: GameWindow.Title
  fullName: Microsoft.Xna.Framework.GameWindow.Title
- uid: Microsoft.Xna.Framework.GameWindow.IsBorderless*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.IsBorderless
  isExternal: false
  name: IsBorderless
  nameWithType: GameWindow.IsBorderless
  fullName: Microsoft.Xna.Framework.GameWindow.IsBorderless
- uid: System.NotImplementedException
  commentId: T:System.NotImplementedException
- uid: Microsoft.Xna.Framework.GameWindow.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.#ctor
  isExternal: false
  name: GameWindow
  nameWithType: GameWindow.GameWindow
  fullName: Microsoft.Xna.Framework.GameWindow.GameWindow
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Microsoft.Xna.Framework.TextInputEventArgs}
  commentId: T:System.EventHandler{Microsoft.Xna.Framework.TextInputEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TextInputEventArgs>
  nameWithType: EventHandler<TextInputEventArgs>
  fullName: System.EventHandler<Microsoft.Xna.Framework.TextInputEventArgs>
  nameWithType.vb: EventHandler(Of TextInputEventArgs)
  fullName.vb: System.EventHandler(Of Microsoft.Xna.Framework.TextInputEventArgs)
  name.vb: EventHandler(Of TextInputEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.TextInputEventArgs
    name: TextInputEventArgs
    nameWithType: TextInputEventArgs
    fullName: Microsoft.Xna.Framework.TextInputEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.TextInputEventArgs
    name: TextInputEventArgs
    nameWithType: TextInputEventArgs
    fullName: Microsoft.Xna.Framework.TextInputEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.GameWindow.BeginScreenDeviceChange*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.BeginScreenDeviceChange
  isExternal: false
  name: BeginScreenDeviceChange
  nameWithType: GameWindow.BeginScreenDeviceChange
  fullName: Microsoft.Xna.Framework.GameWindow.BeginScreenDeviceChange
- uid: Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange
  isExternal: false
  name: EndScreenDeviceChange
  nameWithType: GameWindow.EndScreenDeviceChange
  fullName: Microsoft.Xna.Framework.GameWindow.EndScreenDeviceChange
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.GameWindow.OnActivated*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.OnActivated
  isExternal: false
  name: OnActivated
  nameWithType: GameWindow.OnActivated
  fullName: Microsoft.Xna.Framework.GameWindow.OnActivated
- uid: Microsoft.Xna.Framework.GameWindow.OnDeactivated*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.OnDeactivated
  isExternal: false
  name: OnDeactivated
  nameWithType: GameWindow.OnDeactivated
  fullName: Microsoft.Xna.Framework.GameWindow.OnDeactivated
- uid: Microsoft.Xna.Framework.GameWindow.OnOrientationChanged*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.OnOrientationChanged
  isExternal: false
  name: OnOrientationChanged
  nameWithType: GameWindow.OnOrientationChanged
  fullName: Microsoft.Xna.Framework.GameWindow.OnOrientationChanged
- uid: Microsoft.Xna.Framework.GameWindow.OnPaint*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.OnPaint
  isExternal: false
  name: OnPaint
  nameWithType: GameWindow.OnPaint
  fullName: Microsoft.Xna.Framework.GameWindow.OnPaint
- uid: Microsoft.Xna.Framework.GameWindow.OnScreenDeviceNameChanged*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.OnScreenDeviceNameChanged
  isExternal: false
  name: OnScreenDeviceNameChanged
  nameWithType: GameWindow.OnScreenDeviceNameChanged
  fullName: Microsoft.Xna.Framework.GameWindow.OnScreenDeviceNameChanged
- uid: Microsoft.Xna.Framework.GameWindow.OnTextInput*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.OnTextInput
  isExternal: false
  name: OnTextInput
  nameWithType: GameWindow.OnTextInput
  fullName: Microsoft.Xna.Framework.GameWindow.OnTextInput
- uid: Microsoft.Xna.Framework.TextInputEventArgs
  commentId: T:Microsoft.Xna.Framework.TextInputEventArgs
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: TextInputEventArgs
  nameWithType: TextInputEventArgs
  fullName: Microsoft.Xna.Framework.TextInputEventArgs
- uid: Microsoft.Xna.Framework.GameWindow.SetSupportedOrientations*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.SetSupportedOrientations
  isExternal: false
  name: SetSupportedOrientations
  nameWithType: GameWindow.SetSupportedOrientations
  fullName: Microsoft.Xna.Framework.GameWindow.SetSupportedOrientations
- uid: Microsoft.Xna.Framework.GameWindow.SetTitle*
  commentId: Overload:Microsoft.Xna.Framework.GameWindow.SetTitle
  isExternal: false
  name: SetTitle
  nameWithType: GameWindow.SetTitle
  fullName: Microsoft.Xna.Framework.GameWindow.SetTitle
