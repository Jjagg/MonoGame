### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  id: Matrix
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.Matrix.#ctor(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.Backward
  - Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3})
  - Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3})
  - Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion)
  - Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)
  - Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane)
  - Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3)
  - Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateScale(System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Plane)
  - Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3)
  - Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)
  - Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.Decompose(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)
  - Microsoft.Xna.Framework.Matrix.Determinant
  - Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,System.Single)
  - Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.Down
  - Microsoft.Xna.Framework.Matrix.Equals(Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.Equals(System.Object)
  - Microsoft.Xna.Framework.Matrix.Forward
  - Microsoft.Xna.Framework.Matrix.GetHashCode
  - Microsoft.Xna.Framework.Matrix.Identity
  - Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.Item(System.Int32)
  - Microsoft.Xna.Framework.Matrix.Item(System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Matrix.Left
  - Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,System.Single)
  - Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.M11
  - Microsoft.Xna.Framework.Matrix.M12
  - Microsoft.Xna.Framework.Matrix.M13
  - Microsoft.Xna.Framework.Matrix.M14
  - Microsoft.Xna.Framework.Matrix.M21
  - Microsoft.Xna.Framework.Matrix.M22
  - Microsoft.Xna.Framework.Matrix.M23
  - Microsoft.Xna.Framework.Matrix.M24
  - Microsoft.Xna.Framework.Matrix.M31
  - Microsoft.Xna.Framework.Matrix.M32
  - Microsoft.Xna.Framework.Matrix.M33
  - Microsoft.Xna.Framework.Matrix.M34
  - Microsoft.Xna.Framework.Matrix.M41
  - Microsoft.Xna.Framework.Matrix.M42
  - Microsoft.Xna.Framework.Matrix.M43
  - Microsoft.Xna.Framework.Matrix.M44
  - Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,System.Single)
  - Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.op_Addition(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,System.Single)
  - Microsoft.Xna.Framework.Matrix.op_Equality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.op_Inequality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,System.Single)
  - Microsoft.Xna.Framework.Matrix.op_Subtraction(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.op_UnaryNegation(Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.Right
  - Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.ToFloatArray(Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.ToString
  - Microsoft.Xna.Framework.Matrix.Translation
  - Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  - Microsoft.Xna.Framework.Matrix.Up
  langs:
  - csharp
  - vb
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
  type: Struct
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Matrix
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 13
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nRepresents the right-handed 4x4 floating point matrix, which can store translation, scale and rotation information.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public struct Matrix : IEquatable<Matrix>
    content.vb: >-
      <DataContract>

      Public Structure Matrix
          Implements IEquatable(Of Matrix)
  implements:
  - System.IEquatable{Microsoft.Xna.Framework.Matrix}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Xna.Framework.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)'
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Matrix(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single)
  nameWithType: Matrix.Matrix(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.Matrix(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 38
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nConstructs a matrix.\n"
  example: []
  syntax:
    content: public Matrix(float m11, float m12, float m13, float m14, float m21, float m22, float m23, float m24, float m31, float m32, float m33, float m34, float m41, float m42, float m43, float m44)
    parameters:
    - id: m11
      type: System.Single
      description: A first row and first column value.
    - id: m12
      type: System.Single
      description: A first row and second column value.
    - id: m13
      type: System.Single
      description: A first row and third column value.
    - id: m14
      type: System.Single
      description: A first row and fourth column value.
    - id: m21
      type: System.Single
      description: A second row and first column value.
    - id: m22
      type: System.Single
      description: A second row and second column value.
    - id: m23
      type: System.Single
      description: A second row and third column value.
    - id: m24
      type: System.Single
      description: A second row and fourth column value.
    - id: m31
      type: System.Single
      description: A third row and first column value.
    - id: m32
      type: System.Single
      description: A third row and second column value.
    - id: m33
      type: System.Single
      description: A third row and third column value.
    - id: m34
      type: System.Single
      description: A third row and fourth column value.
    - id: m41
      type: System.Single
      description: A fourth row and first column value.
    - id: m42
      type: System.Single
      description: A fourth row and second column value.
    - id: m43
      type: System.Single
      description: A fourth row and third column value.
    - id: m44
      type: System.Single
      description: A fourth row and fourth column value.
    content.vb: Public Sub New(m11 As Single, m12 As Single, m13 As Single, m14 As Single, m21 As Single, m22 As Single, m23 As Single, m24 As Single, m31 As Single, m32 As Single, m33 As Single, m34 As Single, m41 As Single, m42 As Single, m43 As Single, m44 As Single)
  overload: Microsoft.Xna.Framework.Matrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.#ctor(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Matrix.#ctor(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: '#ctor(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)'
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Matrix(Vector4, Vector4, Vector4, Vector4)
  nameWithType: Matrix.Matrix(Vector4, Vector4, Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Matrix.Matrix(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 66
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nConstructs a matrix.\n"
  example: []
  syntax:
    content: public Matrix(Vector4 row1, Vector4 row2, Vector4 row3, Vector4 row4)
    parameters:
    - id: row1
      type: Microsoft.Xna.Framework.Vector4
      description: A first row of the created matrix.
    - id: row2
      type: Microsoft.Xna.Framework.Vector4
      description: A second row of the created matrix.
    - id: row3
      type: Microsoft.Xna.Framework.Vector4
      description: A third row of the created matrix.
    - id: row4
      type: Microsoft.Xna.Framework.Vector4
      description: A fourth row of the created matrix.
    content.vb: Public Sub New(row1 As Vector4, row2 As Vector4, row3 As Vector4, row4 As Vector4)
  overload: Microsoft.Xna.Framework.Matrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M11
  commentId: F:Microsoft.Xna.Framework.Matrix.M11
  id: M11
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M11
  nameWithType: Matrix.M11
  fullName: Microsoft.Xna.Framework.Matrix.M11
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M11
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 94
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA first row and first column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M11
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M11 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M12
  commentId: F:Microsoft.Xna.Framework.Matrix.M12
  id: M12
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M12
  nameWithType: Matrix.M12
  fullName: Microsoft.Xna.Framework.Matrix.M12
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M12
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 100
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA first row and second column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M12
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M12 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M13
  commentId: F:Microsoft.Xna.Framework.Matrix.M13
  id: M13
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M13
  nameWithType: Matrix.M13
  fullName: Microsoft.Xna.Framework.Matrix.M13
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M13
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 106
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA first row and third column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M13
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M13 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M14
  commentId: F:Microsoft.Xna.Framework.Matrix.M14
  id: M14
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M14
  nameWithType: Matrix.M14
  fullName: Microsoft.Xna.Framework.Matrix.M14
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M14
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 112
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA first row and fourth column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M14
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M14 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M21
  commentId: F:Microsoft.Xna.Framework.Matrix.M21
  id: M21
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M21
  nameWithType: Matrix.M21
  fullName: Microsoft.Xna.Framework.Matrix.M21
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M21
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 118
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA second row and first column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M21
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M21 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M22
  commentId: F:Microsoft.Xna.Framework.Matrix.M22
  id: M22
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M22
  nameWithType: Matrix.M22
  fullName: Microsoft.Xna.Framework.Matrix.M22
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M22
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 124
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA second row and second column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M22
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M22 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M23
  commentId: F:Microsoft.Xna.Framework.Matrix.M23
  id: M23
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M23
  nameWithType: Matrix.M23
  fullName: Microsoft.Xna.Framework.Matrix.M23
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M23
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 130
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA second row and third column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M23
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M23 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M24
  commentId: F:Microsoft.Xna.Framework.Matrix.M24
  id: M24
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M24
  nameWithType: Matrix.M24
  fullName: Microsoft.Xna.Framework.Matrix.M24
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M24
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 136
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA second row and fourth column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M24
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M24 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M31
  commentId: F:Microsoft.Xna.Framework.Matrix.M31
  id: M31
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M31
  nameWithType: Matrix.M31
  fullName: Microsoft.Xna.Framework.Matrix.M31
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M31
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 142
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA third row and first column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M31
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M31 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M32
  commentId: F:Microsoft.Xna.Framework.Matrix.M32
  id: M32
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M32
  nameWithType: Matrix.M32
  fullName: Microsoft.Xna.Framework.Matrix.M32
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M32
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 148
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA third row and second column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M32
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M32 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M33
  commentId: F:Microsoft.Xna.Framework.Matrix.M33
  id: M33
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M33
  nameWithType: Matrix.M33
  fullName: Microsoft.Xna.Framework.Matrix.M33
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M33
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 154
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA third row and third column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M33
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M33 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M34
  commentId: F:Microsoft.Xna.Framework.Matrix.M34
  id: M34
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M34
  nameWithType: Matrix.M34
  fullName: Microsoft.Xna.Framework.Matrix.M34
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M34
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 160
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA third row and fourth column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M34
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M34 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M41
  commentId: F:Microsoft.Xna.Framework.Matrix.M41
  id: M41
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M41
  nameWithType: Matrix.M41
  fullName: Microsoft.Xna.Framework.Matrix.M41
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M41
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 166
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA fourth row and first column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M41
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M41 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M42
  commentId: F:Microsoft.Xna.Framework.Matrix.M42
  id: M42
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M42
  nameWithType: Matrix.M42
  fullName: Microsoft.Xna.Framework.Matrix.M42
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M42
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 172
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA fourth row and second column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M42
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M42 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M43
  commentId: F:Microsoft.Xna.Framework.Matrix.M43
  id: M43
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M43
  nameWithType: Matrix.M43
  fullName: Microsoft.Xna.Framework.Matrix.M43
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M43
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 178
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA fourth row and third column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M43
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M43 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.M44
  commentId: F:Microsoft.Xna.Framework.Matrix.M44
  id: M44
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: M44
  nameWithType: Matrix.M44
  fullName: Microsoft.Xna.Framework.Matrix.M44
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: M44
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 184
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nA fourth row and fourth column value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float M44
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public M44 As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Item(System.Int32)
  commentId: P:Microsoft.Xna.Framework.Matrix.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Matrix.Item[Int32]
  fullName: Microsoft.Xna.Framework.Matrix.Item[System.Int32]
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: this[]
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 190
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public float this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Property Item(index As Integer) As Single
  overload: Microsoft.Xna.Framework.Matrix.Item*
  nameWithType.vb: Matrix.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Matrix.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Xna.Framework.Matrix.Item(System.Int32,System.Int32)
  commentId: P:Microsoft.Xna.Framework.Matrix.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32]
  nameWithType: Matrix.Item[Int32, Int32]
  fullName: Microsoft.Xna.Framework.Matrix.Item[System.Int32, System.Int32]
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: this[]
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 241
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public float this[int row, int column] { get; set; }
    parameters:
    - id: row
      type: System.Int32
    - id: column
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Property Item(row As Integer, column As Integer) As Single
  overload: Microsoft.Xna.Framework.Matrix.Item*
  nameWithType.vb: Matrix.Item(Int32, Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Matrix.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
- uid: Microsoft.Xna.Framework.Matrix.Backward
  commentId: P:Microsoft.Xna.Framework.Matrix.Backward
  id: Backward
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Backward
  nameWithType: Matrix.Backward
  fullName: Microsoft.Xna.Framework.Matrix.Backward
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Backward
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 268
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe backward vector formed from the third row M31, M32, M33 elements.\n"
  example: []
  syntax:
    content: public Vector3 Backward { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property Backward As Vector3
  overload: Microsoft.Xna.Framework.Matrix.Backward*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Down
  commentId: P:Microsoft.Xna.Framework.Matrix.Down
  id: Down
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: Matrix.Down
  fullName: Microsoft.Xna.Framework.Matrix.Down
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Down
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 285
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe down vector formed from the second row -M21, -M22, -M23 elements.\n"
  example: []
  syntax:
    content: public Vector3 Down { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property Down As Vector3
  overload: Microsoft.Xna.Framework.Matrix.Down*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Forward
  commentId: P:Microsoft.Xna.Framework.Matrix.Forward
  id: Forward
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Forward
  nameWithType: Matrix.Forward
  fullName: Microsoft.Xna.Framework.Matrix.Forward
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Forward
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 302
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe forward vector formed from the third row -M31, -M32, -M33 elements.\n"
  example: []
  syntax:
    content: public Vector3 Forward { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property Forward As Vector3
  overload: Microsoft.Xna.Framework.Matrix.Forward*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Identity
  commentId: P:Microsoft.Xna.Framework.Matrix.Identity
  id: Identity
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: Matrix.Identity
  fullName: Microsoft.Xna.Framework.Matrix.Identity
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Identity
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 319
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns the identity matrix.\n"
  example: []
  syntax:
    content: public static Matrix Identity { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Shared ReadOnly Property Identity As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Identity*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Matrix.Left
  commentId: P:Microsoft.Xna.Framework.Matrix.Left
  id: Left
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Matrix.Left
  fullName: Microsoft.Xna.Framework.Matrix.Left
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Left
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 327
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe left vector formed from the first row -M11, -M12, -M13 elements.\n"
  example: []
  syntax:
    content: public Vector3 Left { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property Left As Vector3
  overload: Microsoft.Xna.Framework.Matrix.Left*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Right
  commentId: P:Microsoft.Xna.Framework.Matrix.Right
  id: Right
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Matrix.Right
  fullName: Microsoft.Xna.Framework.Matrix.Right
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Right
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 344
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe right vector formed from the first row M11, M12, M13 elements.\n"
  example: []
  syntax:
    content: public Vector3 Right { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property Right As Vector3
  overload: Microsoft.Xna.Framework.Matrix.Right*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Translation
  commentId: P:Microsoft.Xna.Framework.Matrix.Translation
  id: Translation
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Translation
  nameWithType: Matrix.Translation
  fullName: Microsoft.Xna.Framework.Matrix.Translation
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Translation
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 361
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nPosition stored in this matrix.\n"
  example: []
  syntax:
    content: public Vector3 Translation { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property Translation As Vector3
  overload: Microsoft.Xna.Framework.Matrix.Translation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Up
  commentId: P:Microsoft.Xna.Framework.Matrix.Up
  id: Up
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: Matrix.Up
  fullName: Microsoft.Xna.Framework.Matrix.Up
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Up
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 378
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe upper vector formed from the second row M21, M22, M23 elements.\n"
  example: []
  syntax:
    content: public Vector3 Up { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property Up As Vector3
  overload: Microsoft.Xna.Framework.Matrix.Up*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: Add(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Add(Matrix, Matrix)
  nameWithType: Matrix.Add(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Add
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 401
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> which contains sum of two matrixes.\n"
  example: []
  syntax:
    content: public static Matrix Add(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: The first matrix to add.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: The second matrix to add.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The result of the matrix addition.
    content.vb: Public Shared Function Add(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Add(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  id: Add(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Add(ref Matrix, ref Matrix, out Matrix)
  nameWithType: Matrix.Add(ref Matrix, ref Matrix, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Add(ref Microsoft.Xna.Framework.Matrix, ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Add
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 428
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> which contains sum of two matrixes.\n"
  example: []
  syntax:
    content: public static void Add(ref Matrix matrix1, ref Matrix matrix2, out Matrix result)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: The first matrix to add.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: The second matrix to add.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The result of the matrix addition as an output parameter.
    content.vb: Public Shared Sub Add(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Add*
  nameWithType.vb: Matrix.Add(ByRef Matrix, ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Add(ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Add(ByRef Matrix, ByRef Matrix, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3})
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3})
  id: CreateBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3})
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateBillboard(Vector3, Vector3, Vector3, Nullable<Vector3>)
  nameWithType: Matrix.CreateBillboard(Vector3, Vector3, Vector3, Nullable<Vector3>)
  fullName: Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, System.Nullable<Microsoft.Xna.Framework.Vector3>)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateBillboard
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 457
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for spherical billboarding that rotates around specified object position.\n"
  example: []
  syntax:
    content: public static Matrix CreateBillboard(Vector3 objectPosition, Vector3 cameraPosition, Vector3 cameraUpVector, Vector3? cameraForwardVector)
    parameters:
    - id: objectPosition
      type: Microsoft.Xna.Framework.Vector3
      description: Position of billboard object. It will rotate around that vector.
    - id: cameraPosition
      type: Microsoft.Xna.Framework.Vector3
      description: The camera position.
    - id: cameraUpVector
      type: Microsoft.Xna.Framework.Vector3
      description: The camera up vector.
    - id: cameraForwardVector
      type: System.Nullable{Microsoft.Xna.Framework.Vector3}
      description: Optional camera forward vector.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for spherical billboarding.
    content.vb: Public Shared Function CreateBillboard(objectPosition As Vector3, cameraPosition As Vector3, cameraUpVector As Vector3, cameraForwardVector As Vector3?) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateBillboard*
  nameWithType.vb: Matrix.CreateBillboard(Vector3, Vector3, Vector3, Nullable(Of Vector3))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, System.Nullable(Of Microsoft.Xna.Framework.Vector3))
  name.vb: CreateBillboard(Vector3, Vector3, Vector3, Nullable(Of Vector3))
- uid: Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)
  id: CreateBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateBillboard(ref Vector3, ref Vector3, ref Vector3, Nullable<Vector3>, out Matrix)
  nameWithType: Matrix.CreateBillboard(ref Vector3, ref Vector3, ref Vector3, Nullable<Vector3>, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateBillboard(ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Vector3, System.Nullable<Microsoft.Xna.Framework.Vector3>, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateBillboard
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 476
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for spherical billboarding that rotates around specified object position.\n"
  example: []
  syntax:
    content: public static void CreateBillboard(ref Vector3 objectPosition, ref Vector3 cameraPosition, ref Vector3 cameraUpVector, Vector3? cameraForwardVector, out Matrix result)
    parameters:
    - id: objectPosition
      type: Microsoft.Xna.Framework.Vector3
      description: Position of billboard object. It will rotate around that vector.
    - id: cameraPosition
      type: Microsoft.Xna.Framework.Vector3
      description: The camera position.
    - id: cameraUpVector
      type: Microsoft.Xna.Framework.Vector3
      description: The camera up vector.
    - id: cameraForwardVector
      type: System.Nullable{Microsoft.Xna.Framework.Vector3}
      description: Optional camera forward vector.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for spherical billboarding as an output parameter.
    content.vb: Public Shared Sub CreateBillboard(ByRef objectPosition As Vector3, ByRef cameraPosition As Vector3, ByRef cameraUpVector As Vector3, cameraForwardVector As Vector3?, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateBillboard*
  nameWithType.vb: Matrix.CreateBillboard(ByRef Vector3, ByRef Vector3, ByRef Vector3, Nullable(Of Vector3), ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateBillboard(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Vector3, System.Nullable(Of Microsoft.Xna.Framework.Vector3), ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateBillboard(ByRef Vector3, ByRef Vector3, ByRef Vector3, Nullable(Of Vector3), ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3})
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3})
  id: CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3})
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateConstrainedBillboard(Vector3, Vector3, Vector3, Nullable<Vector3>, Nullable<Vector3>)
  nameWithType: Matrix.CreateConstrainedBillboard(Vector3, Vector3, Vector3, Nullable<Vector3>, Nullable<Vector3>)
  fullName: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, System.Nullable<Microsoft.Xna.Framework.Vector3>, System.Nullable<Microsoft.Xna.Framework.Vector3>)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateConstrainedBillboard
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 524
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for cylindrical billboarding that rotates around specified axis.\n"
  example: []
  syntax:
    content: public static Matrix CreateConstrainedBillboard(Vector3 objectPosition, Vector3 cameraPosition, Vector3 rotateAxis, Vector3? cameraForwardVector, Vector3? objectForwardVector)
    parameters:
    - id: objectPosition
      type: Microsoft.Xna.Framework.Vector3
      description: Object position the billboard will rotate around.
    - id: cameraPosition
      type: Microsoft.Xna.Framework.Vector3
      description: Camera position.
    - id: rotateAxis
      type: Microsoft.Xna.Framework.Vector3
      description: Axis of billboard for rotation.
    - id: cameraForwardVector
      type: System.Nullable{Microsoft.Xna.Framework.Vector3}
      description: Optional camera forward vector.
    - id: objectForwardVector
      type: System.Nullable{Microsoft.Xna.Framework.Vector3}
      description: Optional object forward vector.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for cylindrical billboarding.
    content.vb: Public Shared Function CreateConstrainedBillboard(objectPosition As Vector3, cameraPosition As Vector3, rotateAxis As Vector3, cameraForwardVector As Vector3?, objectForwardVector As Vector3?) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard*
  nameWithType.vb: Matrix.CreateConstrainedBillboard(Vector3, Vector3, Vector3, Nullable(Of Vector3), Nullable(Of Vector3))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, System.Nullable(Of Microsoft.Xna.Framework.Vector3), System.Nullable(Of Microsoft.Xna.Framework.Vector3))
  name.vb: CreateConstrainedBillboard(Vector3, Vector3, Vector3, Nullable(Of Vector3), Nullable(Of Vector3))
- uid: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)
  id: CreateConstrainedBillboard(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Nullable{Microsoft.Xna.Framework.Vector3},System.Nullable{Microsoft.Xna.Framework.Vector3},Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateConstrainedBillboard(ref Vector3, ref Vector3, ref Vector3, Nullable<Vector3>, Nullable<Vector3>, out Matrix)
  nameWithType: Matrix.CreateConstrainedBillboard(ref Vector3, ref Vector3, ref Vector3, Nullable<Vector3>, Nullable<Vector3>, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Vector3, System.Nullable<Microsoft.Xna.Framework.Vector3>, System.Nullable<Microsoft.Xna.Framework.Vector3>, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateConstrainedBillboard
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 542
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for cylindrical billboarding that rotates around specified axis.\n"
  example: []
  syntax:
    content: public static void CreateConstrainedBillboard(ref Vector3 objectPosition, ref Vector3 cameraPosition, ref Vector3 rotateAxis, Vector3? cameraForwardVector, Vector3? objectForwardVector, out Matrix result)
    parameters:
    - id: objectPosition
      type: Microsoft.Xna.Framework.Vector3
      description: Object position the billboard will rotate around.
    - id: cameraPosition
      type: Microsoft.Xna.Framework.Vector3
      description: Camera position.
    - id: rotateAxis
      type: Microsoft.Xna.Framework.Vector3
      description: Axis of billboard for rotation.
    - id: cameraForwardVector
      type: System.Nullable{Microsoft.Xna.Framework.Vector3}
      description: Optional camera forward vector.
    - id: objectForwardVector
      type: System.Nullable{Microsoft.Xna.Framework.Vector3}
      description: Optional object forward vector.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for cylindrical billboarding as an output parameter.
    content.vb: Public Shared Sub CreateConstrainedBillboard(ByRef objectPosition As Vector3, ByRef cameraPosition As Vector3, ByRef rotateAxis As Vector3, cameraForwardVector As Vector3?, objectForwardVector As Vector3?, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard*
  nameWithType.vb: Matrix.CreateConstrainedBillboard(ByRef Vector3, ByRef Vector3, ByRef Vector3, Nullable(Of Vector3), Nullable(Of Vector3), ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Vector3, System.Nullable(Of Microsoft.Xna.Framework.Vector3), System.Nullable(Of Microsoft.Xna.Framework.Vector3), ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateConstrainedBillboard(ByRef Vector3, ByRef Vector3, ByRef Vector3, Nullable(Of Vector3), Nullable(Of Vector3), ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)
  id: CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromAxisAngle(Vector3, Single)
  nameWithType: Matrix.CreateFromAxisAngle(Vector3, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateFromAxisAngle
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 617
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> which contains the rotation moment around specified axis.\n"
  example: []
  syntax:
    content: public static Matrix CreateFromAxisAngle(Vector3 axis, float angle)
    parameters:
    - id: axis
      type: Microsoft.Xna.Framework.Vector3
      description: The axis of rotation.
    - id: angle
      type: System.Single
      description: The angle of rotation in radians.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateFromAxisAngle(axis As Vector3, angle As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateFromAxisAngle(Microsoft.Xna.Framework.Vector3@,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromAxisAngle(ref Vector3, Single, out Matrix)
  nameWithType: Matrix.CreateFromAxisAngle(ref Vector3, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(ref Microsoft.Xna.Framework.Vector3, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateFromAxisAngle
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 630
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> which contains the rotation moment around specified axis.\n"
  example: []
  syntax:
    content: public static void CreateFromAxisAngle(ref Vector3 axis, float angle, out Matrix result)
    parameters:
    - id: axis
      type: Microsoft.Xna.Framework.Vector3
      description: The axis of rotation.
    - id: angle
      type: System.Single
      description: The angle of rotation in radians.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateFromAxisAngle(ByRef axis As Vector3, angle As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle*
  nameWithType.vb: Matrix.CreateFromAxisAngle(ByRef Vector3, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle(ByRef Microsoft.Xna.Framework.Vector3, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateFromAxisAngle(ByRef Vector3, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion)
  id: CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromQuaternion(Quaternion)
  nameWithType: Matrix.CreateFromQuaternion(Quaternion)
  fullName: Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateFromQuaternion
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 666
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> from a <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix CreateFromQuaternion(Quaternion quaternion)
    parameters:
    - id: quaternion
      type: Microsoft.Xna.Framework.Quaternion
      description: <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> of rotation moment.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateFromQuaternion(quaternion As Quaternion) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateFromQuaternion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Matrix@)
  id: CreateFromQuaternion(Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromQuaternion(ref Quaternion, out Matrix)
  nameWithType: Matrix.CreateFromQuaternion(ref Quaternion, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(ref Microsoft.Xna.Framework.Quaternion, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateFromQuaternion
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 678
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> from a <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void CreateFromQuaternion(ref Quaternion quaternion, out Matrix result)
    parameters:
    - id: quaternion
      type: Microsoft.Xna.Framework.Quaternion
      description: <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> of rotation moment.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateFromQuaternion(ByRef quaternion As Quaternion, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateFromQuaternion*
  nameWithType.vb: Matrix.CreateFromQuaternion(ByRef Quaternion, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateFromQuaternion(ByRef Microsoft.Xna.Framework.Quaternion, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateFromQuaternion(ByRef Quaternion, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  id: CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromYawPitchRoll(Single, Single, Single)
  nameWithType: Matrix.CreateFromYawPitchRoll(Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateFromYawPitchRoll
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 716
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> from the specified yaw, pitch and roll values.\n"
  remarks: >
    For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
  example: []
  syntax:
    content: public static Matrix CreateFromYawPitchRoll(float yaw, float pitch, float roll)
    parameters:
    - id: yaw
      type: System.Single
      description: The yaw rotation value in radians.
    - id: pitch
      type: System.Single
      description: The pitch rotation value in radians.
    - id: roll
      type: System.Single
      description: The roll rotation value in radians.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateFromYawPitchRoll(yaw As Single, pitch As Single, roll As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateFromYawPitchRoll(Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateFromYawPitchRoll(Single, Single, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single, System.Single, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateFromYawPitchRoll
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 732
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> from the specified yaw, pitch and roll values.\n"
  remarks: >
    For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
  example: []
  syntax:
    content: public static void CreateFromYawPitchRoll(float yaw, float pitch, float roll, out Matrix result)
    parameters:
    - id: yaw
      type: System.Single
      description: The yaw rotation value in radians.
    - id: pitch
      type: System.Single
      description: The pitch rotation value in radians.
    - id: roll
      type: System.Single
      description: The roll rotation value in radians.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateFromYawPitchRoll(yaw As Single, pitch As Single, roll As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll*
  nameWithType.vb: Matrix.CreateFromYawPitchRoll(Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll(System.Single, System.Single, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateFromYawPitchRoll(Single, Single, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)
  id: CreateLookAt(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateLookAt(Vector3, Vector3, Vector3)
  nameWithType: Matrix.CreateLookAt(Vector3, Vector3, Vector3)
  fullName: Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateLookAt
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 746
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new viewing <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix CreateLookAt(Vector3 cameraPosition, Vector3 cameraTarget, Vector3 cameraUpVector)
    parameters:
    - id: cameraPosition
      type: Microsoft.Xna.Framework.Vector3
      description: Position of the camera.
    - id: cameraTarget
      type: Microsoft.Xna.Framework.Vector3
      description: Lookup vector of the camera.
    - id: cameraUpVector
      type: Microsoft.Xna.Framework.Vector3
      description: The direction of the upper edge of the camera.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The viewing <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateLookAt(cameraPosition As Vector3, cameraTarget As Vector3, cameraUpVector As Vector3) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateLookAt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateLookAt(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  id: CreateLookAt(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateLookAt(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  nameWithType: Matrix.CreateLookAt(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateLookAt(ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Vector3, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateLookAt
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 760
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new viewing <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void CreateLookAt(ref Vector3 cameraPosition, ref Vector3 cameraTarget, ref Vector3 cameraUpVector, out Matrix result)
    parameters:
    - id: cameraPosition
      type: Microsoft.Xna.Framework.Vector3
      description: Position of the camera.
    - id: cameraTarget
      type: Microsoft.Xna.Framework.Vector3
      description: Lookup vector of the camera.
    - id: cameraUpVector
      type: Microsoft.Xna.Framework.Vector3
      description: The direction of the upper edge of the camera.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The viewing <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateLookAt(ByRef cameraPosition As Vector3, ByRef cameraTarget As Vector3, ByRef cameraUpVector As Vector3, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateLookAt*
  nameWithType.vb: Matrix.CreateLookAt(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateLookAt(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateLookAt(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  id: CreateOrthographic(System.Single,System.Single,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateOrthographic(Single, Single, Single, Single)
  nameWithType: Matrix.CreateOrthographic(Single, Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateOrthographic
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 791
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for orthographic view.\n"
  example: []
  syntax:
    content: public static Matrix CreateOrthographic(float width, float height, float zNearPlane, float zFarPlane)
    parameters:
    - id: width
      type: System.Single
      description: Width of the viewing volume.
    - id: height
      type: System.Single
      description: Height of the viewing volume.
    - id: zNearPlane
      type: System.Single
      description: Depth of the near plane.
    - id: zFarPlane
      type: System.Single
      description: Depth of the far plane.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The new projection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for orthographic view.
    content.vb: Public Shared Function CreateOrthographic(width As Single, height As Single, zNearPlane As Single, zFarPlane As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateOrthographic*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateOrthographic(Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateOrthographic(Single, Single, Single, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single, System.Single, System.Single, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateOrthographic
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 806
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for orthographic view.\n"
  example: []
  syntax:
    content: public static void CreateOrthographic(float width, float height, float zNearPlane, float zFarPlane, out Matrix result)
    parameters:
    - id: width
      type: System.Single
      description: Width of the viewing volume.
    - id: height
      type: System.Single
      description: Height of the viewing volume.
    - id: zNearPlane
      type: System.Single
      description: Depth of the near plane.
    - id: zFarPlane
      type: System.Single
      description: Depth of the far plane.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The new projection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for orthographic view as an output parameter.
    content.vb: Public Shared Sub CreateOrthographic(width As Single, height As Single, zNearPlane As Single, zFarPlane As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateOrthographic*
  nameWithType.vb: Matrix.CreateOrthographic(Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateOrthographic(System.Single, System.Single, System.Single, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateOrthographic(Single, Single, Single, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single)
  nameWithType: Matrix.CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateOrthographicOffCenter
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 829
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for customized orthographic view.\n"
  example: []
  syntax:
    content: public static Matrix CreateOrthographicOffCenter(float left, float right, float bottom, float top, float zNearPlane, float zFarPlane)
    parameters:
    - id: left
      type: System.Single
      description: Lower x-value at the near plane.
    - id: right
      type: System.Single
      description: Upper x-value at the near plane.
    - id: bottom
      type: System.Single
      description: Lower y-coordinate at the near plane.
    - id: top
      type: System.Single
      description: Upper y-value at the near plane.
    - id: zNearPlane
      type: System.Single
      description: Depth of the near plane.
    - id: zFarPlane
      type: System.Single
      description: Depth of the far plane.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The new projection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for customized orthographic view.
    content.vb: Public Shared Function CreateOrthographicOffCenter(left As Single, right As Single, bottom As Single, top As Single, zNearPlane As Single, zFarPlane As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
  id: CreateOrthographicOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateOrthographicOffCenter(Rectangle, Single, Single)
  nameWithType: Matrix.CreateOrthographicOffCenter(Rectangle, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(Microsoft.Xna.Framework.Rectangle, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateOrthographicOffCenter
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 843
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for customized orthographic view.\n"
  example: []
  syntax:
    content: public static Matrix CreateOrthographicOffCenter(Rectangle viewingVolume, float zNearPlane, float zFarPlane)
    parameters:
    - id: viewingVolume
      type: Microsoft.Xna.Framework.Rectangle
      description: The viewing volume.
    - id: zNearPlane
      type: System.Single
      description: Depth of the near plane.
    - id: zFarPlane
      type: System.Single
      description: Depth of the far plane.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The new projection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for customized orthographic view.
    content.vb: Public Shared Function CreateOrthographicOffCenter(viewingVolume As Rectangle, zNearPlane As Single, zFarPlane As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateOrthographicOffCenter
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 860
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for customized orthographic view.\n"
  example: []
  syntax:
    content: public static void CreateOrthographicOffCenter(float left, float right, float bottom, float top, float zNearPlane, float zFarPlane, out Matrix result)
    parameters:
    - id: left
      type: System.Single
      description: Lower x-value at the near plane.
    - id: right
      type: System.Single
      description: Upper x-value at the near plane.
    - id: bottom
      type: System.Single
      description: Lower y-coordinate at the near plane.
    - id: top
      type: System.Single
      description: Upper y-value at the near plane.
    - id: zNearPlane
      type: System.Single
      description: Depth of the near plane.
    - id: zFarPlane
      type: System.Single
      description: Depth of the far plane.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The new projection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for customized orthographic view as an output parameter.
    content.vb: Public Shared Sub CreateOrthographicOffCenter(left As Single, right As Single, bottom As Single, top As Single, zNearPlane As Single, zFarPlane As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter*
  nameWithType.vb: Matrix.CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateOrthographicOffCenter(Single, Single, Single, Single, Single, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  id: CreatePerspective(System.Single,System.Single,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspective(Single, Single, Single, Single)
  nameWithType: Matrix.CreatePerspective(Single, Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreatePerspective
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 888
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for perspective view.\n"
  example: []
  syntax:
    content: public static Matrix CreatePerspective(float width, float height, float nearPlaneDistance, float farPlaneDistance)
    parameters:
    - id: width
      type: System.Single
      description: Width of the viewing volume.
    - id: height
      type: System.Single
      description: Height of the viewing volume.
    - id: nearPlaneDistance
      type: System.Single
      description: Distance to the near plane.
    - id: farPlaneDistance
      type: System.Single
      description: Distance to the far plane.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The new projection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for perspective view.
    content.vb: Public Shared Function CreatePerspective(width As Single, height As Single, nearPlaneDistance As Single, farPlaneDistance As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreatePerspective*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreatePerspective(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspective(Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreatePerspective(Single, Single, Single, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single, System.Single, System.Single, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreatePerspective
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 903
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for perspective view.\n"
  example: []
  syntax:
    content: public static void CreatePerspective(float width, float height, float nearPlaneDistance, float farPlaneDistance, out Matrix result)
    parameters:
    - id: width
      type: System.Single
      description: Width of the viewing volume.
    - id: height
      type: System.Single
      description: Height of the viewing volume.
    - id: nearPlaneDistance
      type: System.Single
      description: Distance to the near plane.
    - id: farPlaneDistance
      type: System.Single
      description: Distance to the far plane.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The new projection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for perspective view as an output parameter.
    content.vb: Public Shared Sub CreatePerspective(width As Single, height As Single, nearPlaneDistance As Single, farPlaneDistance As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreatePerspective*
  nameWithType.vb: Matrix.CreatePerspective(Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreatePerspective(System.Single, System.Single, System.Single, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreatePerspective(Single, Single, Single, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  id: CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspectiveFieldOfView(Single, Single, Single, Single)
  nameWithType: Matrix.CreatePerspectiveFieldOfView(Single, Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreatePerspectiveFieldOfView
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 936
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for perspective view with field of view.\n"
  example: []
  syntax:
    content: public static Matrix CreatePerspectiveFieldOfView(float fieldOfView, float aspectRatio, float nearPlaneDistance, float farPlaneDistance)
    parameters:
    - id: fieldOfView
      type: System.Single
      description: Field of view in the y direction in radians.
    - id: aspectRatio
      type: System.Single
      description: Width divided by height of the viewing volume.
    - id: nearPlaneDistance
      type: System.Single
      description: Distance to the near plane.
    - id: farPlaneDistance
      type: System.Single
      description: Distance to the far plane.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The new projection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for perspective view with FOV.
    content.vb: Public Shared Function CreatePerspectiveFieldOfView(fieldOfView As Single, aspectRatio As Single, nearPlaneDistance As Single, farPlaneDistance As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspectiveFieldOfView(Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreatePerspectiveFieldOfView(Single, Single, Single, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single, System.Single, System.Single, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreatePerspectiveFieldOfView
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 951
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for perspective view with field of view.\n"
  example: []
  syntax:
    content: public static void CreatePerspectiveFieldOfView(float fieldOfView, float aspectRatio, float nearPlaneDistance, float farPlaneDistance, out Matrix result)
    parameters:
    - id: fieldOfView
      type: System.Single
      description: Field of view in the y direction in radians.
    - id: aspectRatio
      type: System.Single
      description: Width divided by height of the viewing volume.
    - id: nearPlaneDistance
      type: System.Single
      description: Distance of the near plane.
    - id: farPlaneDistance
      type: System.Single
      description: Distance of the far plane.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The new projection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for perspective view with FOV as an output parameter.
    content.vb: Public Shared Sub CreatePerspectiveFieldOfView(fieldOfView As Single, aspectRatio As Single, nearPlaneDistance As Single, farPlaneDistance As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView*
  nameWithType.vb: Matrix.CreatePerspectiveFieldOfView(Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(System.Single, System.Single, System.Single, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreatePerspectiveFieldOfView(Single, Single, Single, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single)
  nameWithType: Matrix.CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreatePerspectiveOffCenter
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 992
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for customized perspective view.\n"
  example: []
  syntax:
    content: public static Matrix CreatePerspectiveOffCenter(float left, float right, float bottom, float top, float nearPlaneDistance, float farPlaneDistance)
    parameters:
    - id: left
      type: System.Single
      description: Lower x-value at the near plane.
    - id: right
      type: System.Single
      description: Upper x-value at the near plane.
    - id: bottom
      type: System.Single
      description: Lower y-coordinate at the near plane.
    - id: top
      type: System.Single
      description: Upper y-value at the near plane.
    - id: nearPlaneDistance
      type: System.Single
      description: Distance to the near plane.
    - id: farPlaneDistance
      type: System.Single
      description: Distance to the far plane.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The new <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for customized perspective view.
    content.vb: Public Shared Function CreatePerspectiveOffCenter(left As Single, right As Single, bottom As Single, top As Single, nearPlaneDistance As Single, farPlaneDistance As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
  id: CreatePerspectiveOffCenter(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspectiveOffCenter(Rectangle, Single, Single)
  nameWithType: Matrix.CreatePerspectiveOffCenter(Rectangle, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(Microsoft.Xna.Framework.Rectangle, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreatePerspectiveOffCenter
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1005
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for customized perspective view.\n"
  example: []
  syntax:
    content: public static Matrix CreatePerspectiveOffCenter(Rectangle viewingVolume, float nearPlaneDistance, float farPlaneDistance)
    parameters:
    - id: viewingVolume
      type: Microsoft.Xna.Framework.Rectangle
      description: The viewing volume.
    - id: nearPlaneDistance
      type: System.Single
      description: Distance to the near plane.
    - id: farPlaneDistance
      type: System.Single
      description: Distance to the far plane.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The new <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for customized perspective view.
    content.vb: Public Shared Function CreatePerspectiveOffCenter(viewingVolume As Rectangle, nearPlaneDistance As Single, farPlaneDistance As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreatePerspectiveOffCenter
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1022
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new projection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> for customized perspective view.\n"
  example: []
  syntax:
    content: public static void CreatePerspectiveOffCenter(float left, float right, float bottom, float top, float nearPlaneDistance, float farPlaneDistance, out Matrix result)
    parameters:
    - id: left
      type: System.Single
      description: Lower x-value at the near plane.
    - id: right
      type: System.Single
      description: Upper x-value at the near plane.
    - id: bottom
      type: System.Single
      description: Lower y-coordinate at the near plane.
    - id: top
      type: System.Single
      description: Upper y-value at the near plane.
    - id: nearPlaneDistance
      type: System.Single
      description: Distance to the near plane.
    - id: farPlaneDistance
      type: System.Single
      description: Distance to the far plane.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The new <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> for customized perspective view as an output parameter.
    content.vb: Public Shared Sub CreatePerspectiveOffCenter(left As Single, right As Single, bottom As Single, top As Single, nearPlaneDistance As Single, farPlaneDistance As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter*
  nameWithType.vb: Matrix.CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreatePerspectiveOffCenter(Single, Single, Single, Single, Single, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single)
  id: CreateRotationX(System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationX(Single)
  nameWithType: Matrix.CreateRotationX(Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateRotationX
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1053
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> around X axis.\n"
  example: []
  syntax:
    content: public static Matrix CreateRotationX(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: Angle in radians.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> around X axis.
    content.vb: Public Shared Function CreateRotationX(radians As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateRotationX*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateRotationX(System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationX(Single, out Matrix)
  nameWithType: Matrix.CreateRotationX(Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateRotationX
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1065
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> around X axis.\n"
  example: []
  syntax:
    content: public static void CreateRotationX(float radians, out Matrix result)
    parameters:
    - id: radians
      type: System.Single
      description: Angle in radians.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> around X axis as an output parameter.
    content.vb: Public Shared Sub CreateRotationX(radians As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateRotationX*
  nameWithType.vb: Matrix.CreateRotationX(Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateRotationX(System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateRotationX(Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single)
  id: CreateRotationY(System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationY(Single)
  nameWithType: Matrix.CreateRotationY(Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateRotationY
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1083
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> around Y axis.\n"
  example: []
  syntax:
    content: public static Matrix CreateRotationY(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: Angle in radians.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> around Y axis.
    content.vb: Public Shared Function CreateRotationY(radians As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateRotationY*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateRotationY(System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationY(Single, out Matrix)
  nameWithType: Matrix.CreateRotationY(Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateRotationY
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1095
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> around Y axis.\n"
  example: []
  syntax:
    content: public static void CreateRotationY(float radians, out Matrix result)
    parameters:
    - id: radians
      type: System.Single
      description: Angle in radians.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> around Y axis as an output parameter.
    content.vb: Public Shared Sub CreateRotationY(radians As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateRotationY*
  nameWithType.vb: Matrix.CreateRotationY(Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateRotationY(System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateRotationY(Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single)
  id: CreateRotationZ(System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationZ(Single)
  nameWithType: Matrix.CreateRotationZ(Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateRotationZ
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1113
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> around Z axis.\n"
  example: []
  syntax:
    content: public static Matrix CreateRotationZ(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: Angle in radians.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> around Z axis.
    content.vb: Public Shared Function CreateRotationZ(radians As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateRotationZ*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateRotationZ(System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateRotationZ(Single, out Matrix)
  nameWithType: Matrix.CreateRotationZ(Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateRotationZ
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1125
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new rotation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> around Z axis.\n"
  example: []
  syntax:
    content: public static void CreateRotationZ(float radians, out Matrix result)
    parameters:
    - id: radians
      type: System.Single
      description: Angle in radians.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The rotation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> around Z axis as an output parameter.
    content.vb: Public Shared Sub CreateRotationZ(radians As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateRotationZ*
  nameWithType.vb: Matrix.CreateRotationZ(Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateRotationZ(System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateRotationZ(Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single)
  id: CreateScale(System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Single)
  nameWithType: Matrix.CreateScale(Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateScale
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1143
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new scaling <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix CreateScale(float scale)
    parameters:
    - id: scale
      type: System.Single
      description: Scale value for all three axises.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The scaling <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateScale(scale As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateScale(System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Single, out Matrix)
  nameWithType: Matrix.CreateScale(Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateScale
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1155
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new scaling <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void CreateScale(float scale, out Matrix result)
    parameters:
    - id: scale
      type: System.Single
      description: Scale value for all three axises.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The scaling <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateScale(scale As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateScale*
  nameWithType.vb: Matrix.CreateScale(Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateScale(Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single)
  id: CreateScale(System.Single,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Single, Single, Single)
  nameWithType: Matrix.CreateScale(Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateScale
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1167
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new scaling <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix CreateScale(float xScale, float yScale, float zScale)
    parameters:
    - id: xScale
      type: System.Single
      description: Scale value for X axis.
    - id: yScale
      type: System.Single
      description: Scale value for Y axis.
    - id: zScale
      type: System.Single
      description: Scale value for Z axis.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The scaling <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateScale(xScale As Single, yScale As Single, zScale As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateScale(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateScale(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateScale(Single, Single, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single, System.Single, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateScale
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1181
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new scaling <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void CreateScale(float xScale, float yScale, float zScale, out Matrix result)
    parameters:
    - id: xScale
      type: System.Single
      description: Scale value for X axis.
    - id: yScale
      type: System.Single
      description: Scale value for Y axis.
    - id: zScale
      type: System.Single
      description: Scale value for Z axis.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The scaling <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateScale(xScale As Single, yScale As Single, zScale As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateScale*
  nameWithType.vb: Matrix.CreateScale(Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateScale(System.Single, System.Single, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateScale(Single, Single, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3)
  id: CreateScale(Microsoft.Xna.Framework.Vector3)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(Vector3)
  nameWithType: Matrix.CreateScale(Vector3)
  fullName: Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateScale
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1206
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new scaling <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix CreateScale(Vector3 scales)
    parameters:
    - id: scales
      type: Microsoft.Xna.Framework.Vector3
      description: <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref> representing x,y and z scale values.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The scaling <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateScale(scales As Vector3) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateScale(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  id: CreateScale(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateScale(ref Vector3, out Matrix)
  nameWithType: Matrix.CreateScale(ref Vector3, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateScale(ref Microsoft.Xna.Framework.Vector3, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateScale
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1218
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new scaling <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void CreateScale(ref Vector3 scales, out Matrix result)
    parameters:
    - id: scales
      type: Microsoft.Xna.Framework.Vector3
      description: <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref> representing x,y and z scale values.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The scaling <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateScale(ByRef scales As Vector3, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateScale*
  nameWithType.vb: Matrix.CreateScale(ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateScale(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateScale(ByRef Vector3, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Plane)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Plane)
  id: CreateShadow(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Plane)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateShadow(Vector3, Plane)
  nameWithType: Matrix.CreateShadow(Vector3, Plane)
  fullName: Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Plane)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateShadow
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1245
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that flattens geometry into a specified <xref href=\"Microsoft.Xna.Framework.Plane\" data-throw-if-not-resolved=\"false\"></xref> as if casting a shadow from a specified light source. \n"
  example: []
  syntax:
    content: public static Matrix CreateShadow(Vector3 lightDirection, Plane plane)
    parameters:
    - id: lightDirection
      type: Microsoft.Xna.Framework.Vector3
      description: A vector specifying the direction from which the light that will cast the shadow is coming.
    - id: plane
      type: Microsoft.Xna.Framework.Plane
      description: The plane onto which the new matrix should flatten geometry so as to cast a shadow.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: 'A <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> that can be used to flatten geometry onto the specified plane from the specified direction. '
    content.vb: Public Shared Function CreateShadow(lightDirection As Vector3, plane As Plane) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateShadow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)
  id: CreateShadow(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateShadow(ref Vector3, ref Plane, out Matrix)
  nameWithType: Matrix.CreateShadow(ref Vector3, ref Plane, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateShadow(ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Plane, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateShadow
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1259
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that flattens geometry into a specified <xref href=\"Microsoft.Xna.Framework.Plane\" data-throw-if-not-resolved=\"false\"></xref> as if casting a shadow from a specified light source. \n"
  example: []
  syntax:
    content: public static void CreateShadow(ref Vector3 lightDirection, ref Plane plane, out Matrix result)
    parameters:
    - id: lightDirection
      type: Microsoft.Xna.Framework.Vector3
      description: A vector specifying the direction from which the light that will cast the shadow is coming.
    - id: plane
      type: Microsoft.Xna.Framework.Plane
      description: The plane onto which the new matrix should flatten geometry so as to cast a shadow.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: A <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> that can be used to flatten geometry onto the specified plane from the specified direction as an output parameter.
    content.vb: Public Shared Sub CreateShadow(ByRef lightDirection As Vector3, ByRef plane As Plane, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateShadow*
  nameWithType.vb: Matrix.CreateShadow(ByRef Vector3, ByRef Plane, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateShadow(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Plane, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateShadow(ByRef Vector3, ByRef Plane, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single)
  id: CreateTranslation(System.Single,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateTranslation(Single, Single, Single)
  nameWithType: Matrix.CreateTranslation(Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateTranslation
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1292
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new translation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix CreateTranslation(float xPosition, float yPosition, float zPosition)
    parameters:
    - id: xPosition
      type: System.Single
      description: X coordinate of translation.
    - id: yPosition
      type: System.Single
      description: Y coordinate of translation.
    - id: zPosition
      type: System.Single
      description: Z coordinate of translation.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The translation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateTranslation(xPosition As Single, yPosition As Single, zPosition As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateTranslation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  id: CreateTranslation(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateTranslation(ref Vector3, out Matrix)
  nameWithType: Matrix.CreateTranslation(ref Vector3, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateTranslation(ref Microsoft.Xna.Framework.Vector3, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateTranslation
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1304
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new translation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void CreateTranslation(ref Vector3 position, out Matrix result)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector3
      description: X,Y and Z coordinates of translation.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The translation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateTranslation(ByRef position As Vector3, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateTranslation*
  nameWithType.vb: Matrix.CreateTranslation(ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateTranslation(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateTranslation(ByRef Vector3, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3)
  id: CreateTranslation(Microsoft.Xna.Framework.Vector3)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateTranslation(Vector3)
  nameWithType: Matrix.CreateTranslation(Vector3)
  fullName: Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateTranslation
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1329
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new translation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix CreateTranslation(Vector3 position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector3
      description: X,Y and Z coordinates of translation.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The translation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateTranslation(position As Vector3) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateTranslation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: CreateTranslation(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateTranslation(Single, Single, Single, out Matrix)
  nameWithType: Matrix.CreateTranslation(Single, Single, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single, System.Single, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateTranslation
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1343
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new translation <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void CreateTranslation(float xPosition, float yPosition, float zPosition, out Matrix result)
    parameters:
    - id: xPosition
      type: System.Single
      description: X coordinate of translation.
    - id: yPosition
      type: System.Single
      description: Y coordinate of translation.
    - id: zPosition
      type: System.Single
      description: Z coordinate of translation.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The translation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateTranslation(xPosition As Single, yPosition As Single, zPosition As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateTranslation*
  nameWithType.vb: Matrix.CreateTranslation(Single, Single, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateTranslation(System.Single, System.Single, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateTranslation(Single, Single, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane)
  id: CreateReflection(Microsoft.Xna.Framework.Plane)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateReflection(Plane)
  nameWithType: Matrix.CreateReflection(Plane)
  fullName: Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateReflection
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1368
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new reflection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix CreateReflection(Plane value)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Plane
      description: The plane that used for reflection calculation.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The reflection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateReflection(value As Plane) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateReflection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateReflection(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)
  id: CreateReflection(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateReflection(ref Plane, out Matrix)
  nameWithType: Matrix.CreateReflection(ref Plane, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateReflection(ref Microsoft.Xna.Framework.Plane, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateReflection
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1380
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new reflection <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void CreateReflection(ref Plane value, out Matrix result)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Plane
      description: The plane that used for reflection calculation.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The reflection <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateReflection(ByRef value As Plane, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateReflection*
  nameWithType.vb: Matrix.CreateReflection(ByRef Plane, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateReflection(ByRef Microsoft.Xna.Framework.Plane, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateReflection(ByRef Plane, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)
  id: CreateWorld(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateWorld(Vector3, Vector3, Vector3)
  nameWithType: Matrix.CreateWorld(Vector3, Vector3, Vector3)
  fullName: Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Vector3)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateWorld
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1415
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new world <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix CreateWorld(Vector3 position, Vector3 forward, Vector3 up)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector3
      description: The position vector.
    - id: forward
      type: Microsoft.Xna.Framework.Vector3
      description: The forward direction vector.
    - id: up
      type: Microsoft.Xna.Framework.Vector3
      description: The upward direction vector. Usually <xref href="Microsoft.Xna.Framework.Vector3.Up" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The world <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function CreateWorld(position As Vector3, forward As Vector3, up As Vector3) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.CreateWorld*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.CreateWorld(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  id: CreateWorld(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: CreateWorld(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  nameWithType: Matrix.CreateWorld(ref Vector3, ref Vector3, ref Vector3, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.CreateWorld(ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Vector3, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CreateWorld
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1429
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new world <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void CreateWorld(ref Vector3 position, ref Vector3 forward, ref Vector3 up, out Matrix result)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector3
      description: The position vector.
    - id: forward
      type: Microsoft.Xna.Framework.Vector3
      description: The forward direction vector.
    - id: up
      type: Microsoft.Xna.Framework.Vector3
      description: The upward direction vector. Usually <xref href="Microsoft.Xna.Framework.Vector3.Up" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The world <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub CreateWorld(ByRef position As Vector3, ByRef forward As Vector3, ByRef up As Vector3, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.CreateWorld*
  nameWithType.vb: Matrix.CreateWorld(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.CreateWorld(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: CreateWorld(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.Decompose(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Decompose(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)
  id: Decompose(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Decompose(out Vector3, out Quaternion, out Vector3)
  nameWithType: Matrix.Decompose(out Vector3, out Quaternion, out Vector3)
  fullName: Microsoft.Xna.Framework.Matrix.Decompose(out Microsoft.Xna.Framework.Vector3, out Microsoft.Xna.Framework.Quaternion, out Microsoft.Xna.Framework.Vector3)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Decompose
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1453
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDecomposes this matrix to translation, rotation and scale elements. Returns <code>true</code> if matrix can be decomposed; <code>false</code> otherwise.\n"
  example: []
  syntax:
    content: public bool Decompose(out Vector3 scale, out Quaternion rotation, out Vector3 translation)
    parameters:
    - id: scale
      type: Microsoft.Xna.Framework.Vector3
      description: Scale vector as an output parameter.
    - id: rotation
      type: Microsoft.Xna.Framework.Quaternion
      description: Rotation quaternion as an output parameter.
    - id: translation
      type: Microsoft.Xna.Framework.Vector3
      description: Translation vector as an output parameter.
    return:
      type: System.Boolean
      description: <code>true</code> if matrix can be decomposed; <code>false</code> otherwise.
    content.vb: Public Function Decompose(ByRef scale As Vector3, ByRef rotation As Quaternion, ByRef translation As Vector3) As Boolean
  overload: Microsoft.Xna.Framework.Matrix.Decompose*
  nameWithType.vb: Matrix.Decompose(ByRef Vector3, ByRef Quaternion, ByRef Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Matrix.Decompose(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Quaternion, ByRef Microsoft.Xna.Framework.Vector3)
  name.vb: Decompose(ByRef Vector3, ByRef Quaternion, ByRef Vector3)
- uid: Microsoft.Xna.Framework.Matrix.Determinant
  commentId: M:Microsoft.Xna.Framework.Matrix.Determinant
  id: Determinant
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Determinant()
  nameWithType: Matrix.Determinant()
  fullName: Microsoft.Xna.Framework.Matrix.Determinant()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Determinant
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1488
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a determinant of this <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: >
    See more about determinant here - http://en.wikipedia.org/wiki/Determinant.
  example: []
  syntax:
    content: public float Determinant()
    return:
      type: System.Single
      description: Determinant of this <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Determinant As Single
  overload: Microsoft.Xna.Framework.Matrix.Determinant*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: Divide(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Divide(Matrix, Matrix)
  nameWithType: Matrix.Divide(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Divide
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1521
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the elements of a <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> by the elements of another matrix.\n"
  example: []
  syntax:
    content: public static Matrix Divide(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Divisor <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The result of dividing the matrix.
    content.vb: Public Shared Function Divide(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  id: Divide(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Divide(ref Matrix, ref Matrix, out Matrix)
  nameWithType: Matrix.Divide(ref Matrix, ref Matrix, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Divide(ref Microsoft.Xna.Framework.Matrix, ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Divide
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1548
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the elements of a <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> by the elements of another matrix.\n"
  example: []
  syntax:
    content: public static void Divide(ref Matrix matrix1, ref Matrix matrix2, out Matrix result)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Divisor <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The result of dividing the matrix as an output parameter.
    content.vb: Public Shared Sub Divide(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Divide*
  nameWithType.vb: Matrix.Divide(ByRef Matrix, ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Divide(ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Divide(ByRef Matrix, ByRef Matrix, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix,System.Single)
  id: Divide(Microsoft.Xna.Framework.Matrix,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Divide(Matrix, Single)
  nameWithType: Matrix.Divide(Matrix, Single)
  fullName: Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Divide
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1574
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the elements of a <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> by a scalar.\n"
  example: []
  syntax:
    content: public static Matrix Divide(Matrix matrix1, float divider)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: divider
      type: System.Single
      description: Divisor scalar.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The result of dividing a matrix by a scalar.
    content.vb: Public Shared Function Divide(matrix1 As Matrix, divider As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Divide(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: Divide(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Divide(ref Matrix, Single, out Matrix)
  nameWithType: Matrix.Divide(ref Matrix, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Divide(ref Microsoft.Xna.Framework.Matrix, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Divide
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1602
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the elements of a <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> by a scalar.\n"
  example: []
  syntax:
    content: public static void Divide(ref Matrix matrix1, float divider, out Matrix result)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: divider
      type: System.Single
      description: Divisor scalar.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The result of dividing a matrix by a scalar as an output parameter.
    content.vb: Public Shared Sub Divide(ByRef matrix1 As Matrix, divider As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Divide*
  nameWithType.vb: Matrix.Divide(ByRef Matrix, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Divide(ByRef Microsoft.Xna.Framework.Matrix, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Divide(ByRef Matrix, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.Equals(Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.Equals(Microsoft.Xna.Framework.Matrix)
  id: Equals(Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Equals(Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1628
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether current instance is equal to specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> without any tolerance.\n"
  example: []
  syntax:
    content: public bool Equals(Matrix other)
    parameters:
    - id: other
      type: Microsoft.Xna.Framework.Matrix
      description: The <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Function Equals(other As Matrix) As Boolean
  overload: Microsoft.Xna.Framework.Matrix.Equals*
  implements:
  - System.IEquatable{Microsoft.Xna.Framework.Matrix}.Equals(Microsoft.Xna.Framework.Matrix)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Matrix.Equals(System.Object)
  commentId: M:Microsoft.Xna.Framework.Matrix.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: Microsoft.Xna.Framework.Matrix.Equals(System.Object)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1638
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether current instance is equal to specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> without any tolerance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.Xna.Framework.Matrix.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Matrix.GetHashCode
  commentId: M:Microsoft.Xna.Framework.Matrix.GetHashCode
  id: GetHashCode
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: Microsoft.Xna.Framework.Matrix.GetHashCode()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetHashCode
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1652
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the hash code of this <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Hash code of this <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.Xna.Framework.Matrix.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix)
  id: Invert(Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Invert(Matrix)
  nameWithType: Matrix.Invert(Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Invert
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1662
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> which contains inversion of the specified matrix. \n"
  example: []
  syntax:
    content: public static Matrix Invert(Matrix matrix)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The inverted matrix.
    content.vb: Public Shared Function Invert(matrix As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Invert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Invert(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  id: Invert(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Invert(ref Matrix, out Matrix)
  nameWithType: Matrix.Invert(ref Matrix, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Invert(ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Invert
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1674
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> which contains inversion of the specified matrix. \n"
  example: []
  syntax:
    content: public static void Invert(ref Matrix matrix, out Matrix result)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The inverted matrix as output parameter.
    content.vb: Public Shared Sub Invert(ByRef matrix As Matrix, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Invert*
  nameWithType.vb: Matrix.Invert(ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Invert(ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Invert(ByRef Matrix, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,System.Single)
  id: Lerp(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Lerp(Matrix, Matrix, Single)
  nameWithType: Matrix.Lerp(Matrix, Matrix, Single)
  fullName: Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Lerp
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1781
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that contains linear interpolation of the values in specified matrixes.\n"
  example: []
  syntax:
    content: public static Matrix Lerp(Matrix matrix1, Matrix matrix2, float amount)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: The first <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: The second <xref href="Microsoft.Xna.Framework.Vector2" data-throw-if-not-resolved="false"></xref>.
    - id: amount
      type: System.Single
      description: Weighting value(between 0.0 and 1.0).
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: '>The result of linear interpolation of the specified matrixes.'
    content.vb: Public Shared Function Lerp(matrix1 As Matrix, matrix2 As Matrix, amount As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Lerp(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: Lerp(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Lerp(ref Matrix, ref Matrix, Single, out Matrix)
  nameWithType: Matrix.Lerp(ref Matrix, ref Matrix, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Lerp(ref Microsoft.Xna.Framework.Matrix, ref Microsoft.Xna.Framework.Matrix, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Lerp
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1809
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that contains linear interpolation of the values in specified matrixes.\n"
  example: []
  syntax:
    content: public static void Lerp(ref Matrix matrix1, ref Matrix matrix2, float amount, out Matrix result)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: The first <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: The second <xref href="Microsoft.Xna.Framework.Vector2" data-throw-if-not-resolved="false"></xref>.
    - id: amount
      type: System.Single
      description: Weighting value(between 0.0 and 1.0).
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The result of linear interpolation of the specified matrixes as an output parameter.
    content.vb: Public Shared Sub Lerp(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, amount As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Lerp*
  nameWithType.vb: Matrix.Lerp(ByRef Matrix, ByRef Matrix, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Lerp(ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Lerp(ByRef Matrix, ByRef Matrix, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Matrix)
  nameWithType: Matrix.Multiply(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Multiply
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1835
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that contains a multiplication of two matrix.\n"
  example: []
  syntax:
    content: public static Matrix Multiply(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the matrix multiplication.
    content.vb: Public Shared Function Multiply(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  id: Multiply(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(ref Matrix, ref Matrix, out Matrix)
  nameWithType: Matrix.Multiply(ref Matrix, ref Matrix, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Multiply(ref Microsoft.Xna.Framework.Matrix, ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Multiply
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1878
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that contains a multiplication of two matrix.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Matrix matrix1, ref Matrix matrix2, out Matrix result)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the matrix multiplication as an output parameter.
    content.vb: Public Shared Sub Multiply(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Multiply*
  nameWithType.vb: Matrix.Multiply(ByRef Matrix, ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Multiply(ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Multiply(ByRef Matrix, ByRef Matrix, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix,System.Single)
  id: Multiply(Microsoft.Xna.Framework.Matrix,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Single)
  nameWithType: Matrix.Multiply(Matrix, Single)
  fullName: Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Multiply
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1920
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that contains a multiplication of <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> and a scalar.\n"
  example: []
  syntax:
    content: public static Matrix Multiply(Matrix matrix1, float scaleFactor)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: scaleFactor
      type: System.Single
      description: Scalar value.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the matrix multiplication with a scalar.
    content.vb: Public Shared Function Multiply(matrix1 As Matrix, scaleFactor As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  id: Multiply(Microsoft.Xna.Framework.Matrix@,System.Single,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(ref Matrix, Single, out Matrix)
  nameWithType: Matrix.Multiply(ref Matrix, Single, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Multiply(ref Microsoft.Xna.Framework.Matrix, System.Single, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Multiply
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1947
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that contains a multiplication of <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> and a scalar.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Matrix matrix1, float scaleFactor, out Matrix result)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: scaleFactor
      type: System.Single
      description: Scalar value.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the matrix multiplication with a scalar as an output parameter.
    content.vb: Public Shared Sub Multiply(ByRef matrix1 As Matrix, scaleFactor As Single, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Multiply*
  nameWithType.vb: Matrix.Multiply(ByRef Matrix, Single, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Multiply(ByRef Microsoft.Xna.Framework.Matrix, System.Single, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Multiply(ByRef Matrix, Single, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.ToFloatArray(Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.ToFloatArray(Microsoft.Xna.Framework.Matrix)
  id: ToFloatArray(Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: ToFloatArray(Matrix)
  nameWithType: Matrix.ToFloatArray(Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.ToFloatArray(Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ToFloatArray
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1976
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCopy the values of specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> to the float array.\n"
  remarks: "\nRequired for OpenGL 2.0 projection matrix stuff.\n"
  example: []
  syntax:
    content: public static float[] ToFloatArray(Matrix matrix)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Single[]
      description: The array which matrix values will be stored.
    content.vb: Public Shared Function ToFloatArray(matrix As Matrix) As Single()
  overload: Microsoft.Xna.Framework.Matrix.ToFloatArray*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix)
  id: Negate(Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Negate(Matrix)
  nameWithType: Matrix.Negate(Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Negate
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 1992
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a matrix with the all values negated.\n"
  example: []
  syntax:
    content: public static Matrix Negate(Matrix matrix)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the matrix negation.
    content.vb: Public Shared Function Negate(matrix As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Negate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Negate(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  id: Negate(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Negate(ref Matrix, out Matrix)
  nameWithType: Matrix.Negate(ref Matrix, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Negate(ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Negate
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2018
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a matrix with the all values negated.\n"
  example: []
  syntax:
    content: public static void Negate(ref Matrix matrix, out Matrix result)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the matrix negation as an output parameter.
    content.vb: Public Shared Sub Negate(ByRef matrix As Matrix, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Negate*
  nameWithType.vb: Matrix.Negate(ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Negate(ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Negate(ByRef Matrix, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.op_Addition(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.op_Addition(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: op_Addition(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Addition(Matrix, Matrix)
  nameWithType: Matrix.Addition(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Addition(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Addition
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2044
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nAdds two matrixes.\n"
  example: []
  syntax:
    content: public static Matrix operator +(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the left of the add sign.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the right of the add sign.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: Sum of the matrixes.
    content.vb: Public Shared Operator +(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: op_Division(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Division(Matrix, Matrix)
  nameWithType: Matrix.Division(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Division(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Division
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2071
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the elements of a <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> by the elements of another <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix operator /(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the left of the div sign.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Divisor <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the right of the div sign.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The result of dividing the matrixes.
    content.vb: Public Shared Operator /(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.op_Division(Microsoft.Xna.Framework.Matrix,System.Single)
  id: op_Division(Microsoft.Xna.Framework.Matrix,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Division(Matrix, Single)
  nameWithType: Matrix.Division(Matrix, Single)
  fullName: Microsoft.Xna.Framework.Matrix.Division(Microsoft.Xna.Framework.Matrix, System.Single)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Division
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2098
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the elements of a <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> by a scalar.\n"
  example: []
  syntax:
    content: public static Matrix operator /(Matrix matrix, float divider)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the left of the div sign.
    - id: divider
      type: System.Single
      description: Divisor scalar on the right of the div sign.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The result of dividing a matrix by a scalar.
    content.vb: Public Shared Operator /(matrix As Matrix, divider As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.op_Equality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.op_Equality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: op_Equality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Equality(Matrix, Matrix)
  nameWithType: Matrix.Equality(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Equality(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Equality
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2126
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether two <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> instances are equal without any tolerance.\n"
  example: []
  syntax:
    content: public static bool operator ==(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the left of the equal sign.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the right of the equal sign.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Shared Operator =(matrix1 As Matrix, matrix2 As Matrix) As Boolean
  overload: Microsoft.Xna.Framework.Matrix.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.op_Inequality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.op_Inequality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: op_Inequality(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Inequality(Matrix, Matrix)
  nameWithType: Matrix.Inequality(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Inequality(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Inequality
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2154
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether two <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> instances are not equal without any tolerance.\n"
  example: []
  syntax:
    content: public static bool operator !=(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the left of the not equal sign.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the right of the not equal sign.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are not equal; <code>false</code> otherwise.
    content.vb: Public Shared Operator <>(matrix1 As Matrix, matrix2 As Matrix) As Boolean
  overload: Microsoft.Xna.Framework.Matrix.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: op_Multiply(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Matrix)
  nameWithType: Matrix.Multiply(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Multiply
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2185
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nMultiplies two matrixes.\n"
  remarks: "\nUsing matrix multiplication algorithm - see http://en.wikipedia.org/wiki/Matrix_multiplication.\n"
  example: []
  syntax:
    content: public static Matrix operator *(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the left of the mul sign.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the right of the mul sign.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the matrix multiplication.
    content.vb: Public Shared Operator *(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,System.Single)
  commentId: M:Microsoft.Xna.Framework.Matrix.op_Multiply(Microsoft.Xna.Framework.Matrix,System.Single)
  id: op_Multiply(Microsoft.Xna.Framework.Matrix,System.Single)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Single)
  nameWithType: Matrix.Multiply(Matrix, Single)
  fullName: Microsoft.Xna.Framework.Matrix.Multiply(Microsoft.Xna.Framework.Matrix, System.Single)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Multiply
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2228
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nMultiplies the elements of matrix by a scalar.\n"
  example: []
  syntax:
    content: public static Matrix operator *(Matrix matrix, float scaleFactor)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the left of the mul sign.
    - id: scaleFactor
      type: System.Single
      description: Scalar value on the right of the mul sign.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the matrix multiplication with a scalar.
    content.vb: Public Shared Operator *(matrix As Matrix, scaleFactor As Single) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.op_Subtraction(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.op_Subtraction(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: op_Subtraction(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Subtraction(Matrix, Matrix)
  nameWithType: Matrix.Subtraction(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Subtraction(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Subtraction
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2255
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nSubtracts the values of one <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> from another <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix operator -(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the left of the sub sign.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the right of the sub sign.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the matrix subtraction.
    content.vb: Public Shared Operator -(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.op_UnaryNegation(Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.op_UnaryNegation(Microsoft.Xna.Framework.Matrix)
  id: op_UnaryNegation(Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: UnaryNegation(Matrix)
  nameWithType: Matrix.UnaryNegation(Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.UnaryNegation(Microsoft.Xna.Framework.Matrix)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_UnaryNegation
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2281
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nInverts values in the specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Matrix operator -(Matrix matrix)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: Source <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> on the right of the sub sign.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: Result of the inversion.
    content.vb: Public Shared Operator -(matrix As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: Subtract(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Subtract(Matrix, Matrix)
  nameWithType: Matrix.Subtract(Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Subtract
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2308
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that contains subtraction of one matrix from another.\n"
  example: []
  syntax:
    content: public static Matrix Subtract(Matrix matrix1, Matrix matrix2)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: The first <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: The second <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The result of the matrix subtraction.
    content.vb: Public Shared Function Subtract(matrix1 As Matrix, matrix2 As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Subtract(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  id: Subtract(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Subtract(ref Matrix, ref Matrix, out Matrix)
  nameWithType: Matrix.Subtract(ref Matrix, ref Matrix, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Subtract(ref Microsoft.Xna.Framework.Matrix, ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Subtract
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2335
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> that contains subtraction of one matrix from another.\n"
  example: []
  syntax:
    content: public static void Subtract(ref Matrix matrix1, ref Matrix matrix2, out Matrix result)
    parameters:
    - id: matrix1
      type: Microsoft.Xna.Framework.Matrix
      description: The first <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: matrix2
      type: Microsoft.Xna.Framework.Matrix
      description: The second <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The result of the matrix subtraction as an output parameter.
    content.vb: Public Shared Sub Subtract(ByRef matrix1 As Matrix, ByRef matrix2 As Matrix, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Subtract*
  nameWithType.vb: Matrix.Subtract(ByRef Matrix, ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Subtract(ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Subtract(ByRef Matrix, ByRef Matrix, ByRef Matrix)
- uid: Microsoft.Xna.Framework.Matrix.ToString
  commentId: M:Microsoft.Xna.Framework.Matrix.ToString
  id: ToString
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: Microsoft.Xna.Framework.Matrix.ToString()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ToString
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2380
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of this <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> in the format:\n{M11:[<xref href=\"Microsoft.Xna.Framework.Matrix.M11\" data-throw-if-not-resolved=\"false\"></xref>] M12:[<xref href=\"Microsoft.Xna.Framework.Matrix.M12\" data-throw-if-not-resolved=\"false\"></xref>] M13:[<xref href=\"Microsoft.Xna.Framework.Matrix.M13\" data-throw-if-not-resolved=\"false\"></xref>] M14:[<xref href=\"Microsoft.Xna.Framework.Matrix.M14\" data-throw-if-not-resolved=\"false\"></xref>]}\n{M21:[<xref href=\"Microsoft.Xna.Framework.Matrix.M21\" data-throw-if-not-resolved=\"false\"></xref>] M12:[<xref href=\"Microsoft.Xna.Framework.Matrix.M22\" data-throw-if-not-resolved=\"false\"></xref>] M13:[<xref href=\"Microsoft.Xna.Framework.Matrix.M23\" data-throw-if-not-resolved=\"false\"></xref>] M14:[<xref href=\"Microsoft.Xna.Framework.Matrix.M24\" data-throw-if-not-resolved=\"false\"></xref>]}\n{M31:[<xref href=\"Microsoft.Xna.Framework.Matrix.M31\" data-throw-if-not-resolved=\"false\"></xref>] M32:[<xref href=\"Microsoft.Xna.Framework.Matrix.M32\" data-throw-if-not-resolved=\"false\"></xref>] M33:[<xref href=\"Microsoft.Xna.Framework.Matrix.M33\" data-throw-if-not-resolved=\"false\"></xref>] M34:[<xref href=\"Microsoft.Xna.Framework.Matrix.M34\" data-throw-if-not-resolved=\"false\"></xref>]}\n{M41:[<xref href=\"Microsoft.Xna.Framework.Matrix.M41\" data-throw-if-not-resolved=\"false\"></xref>] M42:[<xref href=\"Microsoft.Xna.Framework.Matrix.M42\" data-throw-if-not-resolved=\"false\"></xref>] M43:[<xref href=\"Microsoft.Xna.Framework.Matrix.M43\" data-throw-if-not-resolved=\"false\"></xref>] M44:[<xref href=\"Microsoft.Xna.Framework.Matrix.M44\" data-throw-if-not-resolved=\"false\"></xref>]}\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation of this <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Microsoft.Xna.Framework.Matrix.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix)
  id: Transpose(Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Transpose(Matrix)
  nameWithType: Matrix.Transpose(Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transpose
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2393
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nSwap the matrix rows and columns.\n"
  example: []
  syntax:
    content: public static Matrix Transpose(Matrix matrix)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The matrix for transposing operation.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: The new <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> which contains the transposing result.
    content.vb: Public Shared Function Transpose(matrix As Matrix) As Matrix
  overload: Microsoft.Xna.Framework.Matrix.Transpose*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  commentId: M:Microsoft.Xna.Framework.Matrix.Transpose(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  id: Transpose(Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@)
  parent: Microsoft.Xna.Framework.Matrix
  langs:
  - csharp
  - vb
  name: Transpose(ref Matrix, out Matrix)
  nameWithType: Matrix.Transpose(ref Matrix, out Matrix)
  fullName: Microsoft.Xna.Framework.Matrix.Transpose(ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Matrix.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transpose
    path: ../MonoGame.Framework/Matrix.cs
    startLine: 2405
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nSwap the matrix rows and columns.\n"
  example: []
  syntax:
    content: public static void Transpose(ref Matrix matrix, out Matrix result)
    parameters:
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The matrix for transposing operation.
    - id: result
      type: Microsoft.Xna.Framework.Matrix
      description: The new <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref> which contains the transposing result as an output parameter.
    content.vb: Public Shared Sub Transpose(ByRef matrix As Matrix, ByRef result As Matrix)
  overload: Microsoft.Xna.Framework.Matrix.Transpose*
  nameWithType.vb: Matrix.Transpose(ByRef Matrix, ByRef Matrix)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Matrix.Transpose(ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Matrix)
  name.vb: Transpose(ByRef Matrix, ByRef Matrix)
references:
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.IEquatable{Microsoft.Xna.Framework.Matrix}
  commentId: T:System.IEquatable{Microsoft.Xna.Framework.Matrix}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Matrix>
  nameWithType: IEquatable<Matrix>
  fullName: System.IEquatable<Microsoft.Xna.Framework.Matrix>
  nameWithType.vb: IEquatable(Of Matrix)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.Matrix)
  name.vb: IEquatable(Of Matrix)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Matrix.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.#ctor
  isExternal: false
  name: Matrix
  nameWithType: Matrix.Matrix
  fullName: Microsoft.Xna.Framework.Matrix.Matrix
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Vector4
  commentId: T:Microsoft.Xna.Framework.Vector4
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector4
  nameWithType: Vector4
  fullName: Microsoft.Xna.Framework.Vector4
- uid: Microsoft.Xna.Framework.Matrix.Item*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Item
  isExternal: false
  name: Item
  nameWithType: Matrix.Item
  fullName: Microsoft.Xna.Framework.Matrix.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Matrix.Backward*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Backward
  isExternal: false
  name: Backward
  nameWithType: Matrix.Backward
  fullName: Microsoft.Xna.Framework.Matrix.Backward
- uid: Microsoft.Xna.Framework.Vector3
  commentId: T:Microsoft.Xna.Framework.Vector3
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: Microsoft.Xna.Framework.Vector3
- uid: Microsoft.Xna.Framework.Matrix.Down*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Down
  isExternal: false
  name: Down
  nameWithType: Matrix.Down
  fullName: Microsoft.Xna.Framework.Matrix.Down
- uid: Microsoft.Xna.Framework.Matrix.Forward*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Forward
  isExternal: false
  name: Forward
  nameWithType: Matrix.Forward
  fullName: Microsoft.Xna.Framework.Matrix.Forward
- uid: Microsoft.Xna.Framework.Matrix.Identity*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Identity
  isExternal: false
  name: Identity
  nameWithType: Matrix.Identity
  fullName: Microsoft.Xna.Framework.Matrix.Identity
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: Microsoft.Xna.Framework.Matrix.Left*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Left
  isExternal: false
  name: Left
  nameWithType: Matrix.Left
  fullName: Microsoft.Xna.Framework.Matrix.Left
- uid: Microsoft.Xna.Framework.Matrix.Right*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Right
  isExternal: false
  name: Right
  nameWithType: Matrix.Right
  fullName: Microsoft.Xna.Framework.Matrix.Right
- uid: Microsoft.Xna.Framework.Matrix.Translation*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Translation
  isExternal: false
  name: Translation
  nameWithType: Matrix.Translation
  fullName: Microsoft.Xna.Framework.Matrix.Translation
- uid: Microsoft.Xna.Framework.Matrix.Up*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Up
  isExternal: false
  name: Up
  nameWithType: Matrix.Up
  fullName: Microsoft.Xna.Framework.Matrix.Up
- uid: Microsoft.Xna.Framework.Matrix.Add*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Add
  isExternal: false
  name: Add
  nameWithType: Matrix.Add
  fullName: Microsoft.Xna.Framework.Matrix.Add
- uid: Microsoft.Xna.Framework.Matrix.CreateBillboard*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateBillboard
  isExternal: false
  name: CreateBillboard
  nameWithType: Matrix.CreateBillboard
  fullName: Microsoft.Xna.Framework.Matrix.CreateBillboard
- uid: System.Nullable{Microsoft.Xna.Framework.Vector3}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Vector3}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Vector3>
  nameWithType: Nullable<Vector3>
  fullName: System.Nullable<Microsoft.Xna.Framework.Vector3>
  nameWithType.vb: Nullable(Of Vector3)
  fullName.vb: System.Nullable(Of Microsoft.Xna.Framework.Vector3)
  name.vb: Nullable(Of Vector3)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Microsoft.Xna.Framework.Vector3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Microsoft.Xna.Framework.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard
  isExternal: false
  name: CreateConstrainedBillboard
  nameWithType: Matrix.CreateConstrainedBillboard
  fullName: Microsoft.Xna.Framework.Matrix.CreateConstrainedBillboard
- uid: Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle
  isExternal: false
  name: CreateFromAxisAngle
  nameWithType: Matrix.CreateFromAxisAngle
  fullName: Microsoft.Xna.Framework.Matrix.CreateFromAxisAngle
- uid: Microsoft.Xna.Framework.Quaternion
  commentId: T:Microsoft.Xna.Framework.Quaternion
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: Microsoft.Xna.Framework.Quaternion
- uid: Microsoft.Xna.Framework.Matrix.CreateFromQuaternion*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateFromQuaternion
  isExternal: false
  name: CreateFromQuaternion
  nameWithType: Matrix.CreateFromQuaternion
  fullName: Microsoft.Xna.Framework.Matrix.CreateFromQuaternion
- uid: Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll
  isExternal: false
  name: CreateFromYawPitchRoll
  nameWithType: Matrix.CreateFromYawPitchRoll
  fullName: Microsoft.Xna.Framework.Matrix.CreateFromYawPitchRoll
- uid: Microsoft.Xna.Framework.Matrix.CreateLookAt*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateLookAt
  isExternal: false
  name: CreateLookAt
  nameWithType: Matrix.CreateLookAt
  fullName: Microsoft.Xna.Framework.Matrix.CreateLookAt
- uid: Microsoft.Xna.Framework.Matrix.CreateOrthographic*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateOrthographic
  isExternal: false
  name: CreateOrthographic
  nameWithType: Matrix.CreateOrthographic
  fullName: Microsoft.Xna.Framework.Matrix.CreateOrthographic
- uid: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter
  isExternal: false
  name: CreateOrthographicOffCenter
  nameWithType: Matrix.CreateOrthographicOffCenter
  fullName: Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspective*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreatePerspective
  isExternal: false
  name: CreatePerspective
  nameWithType: Matrix.CreatePerspective
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspective
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView
  isExternal: false
  name: CreatePerspectiveFieldOfView
  nameWithType: Matrix.CreatePerspectiveFieldOfView
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView
- uid: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter
  isExternal: false
  name: CreatePerspectiveOffCenter
  nameWithType: Matrix.CreatePerspectiveOffCenter
  fullName: Microsoft.Xna.Framework.Matrix.CreatePerspectiveOffCenter
- uid: Microsoft.Xna.Framework.Matrix.CreateRotationX*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateRotationX
  isExternal: false
  name: CreateRotationX
  nameWithType: Matrix.CreateRotationX
  fullName: Microsoft.Xna.Framework.Matrix.CreateRotationX
- uid: Microsoft.Xna.Framework.Matrix.CreateRotationY*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateRotationY
  isExternal: false
  name: CreateRotationY
  nameWithType: Matrix.CreateRotationY
  fullName: Microsoft.Xna.Framework.Matrix.CreateRotationY
- uid: Microsoft.Xna.Framework.Matrix.CreateRotationZ*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateRotationZ
  isExternal: false
  name: CreateRotationZ
  nameWithType: Matrix.CreateRotationZ
  fullName: Microsoft.Xna.Framework.Matrix.CreateRotationZ
- uid: Microsoft.Xna.Framework.Matrix.CreateScale*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateScale
  isExternal: false
  name: CreateScale
  nameWithType: Matrix.CreateScale
  fullName: Microsoft.Xna.Framework.Matrix.CreateScale
- uid: Microsoft.Xna.Framework.Plane
  commentId: T:Microsoft.Xna.Framework.Plane
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Plane
  nameWithType: Plane
  fullName: Microsoft.Xna.Framework.Plane
- uid: Microsoft.Xna.Framework.Matrix.CreateShadow*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateShadow
  isExternal: false
  name: CreateShadow
  nameWithType: Matrix.CreateShadow
  fullName: Microsoft.Xna.Framework.Matrix.CreateShadow
- uid: Microsoft.Xna.Framework.Matrix.CreateTranslation*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateTranslation
  isExternal: false
  name: CreateTranslation
  nameWithType: Matrix.CreateTranslation
  fullName: Microsoft.Xna.Framework.Matrix.CreateTranslation
- uid: Microsoft.Xna.Framework.Matrix.CreateReflection*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateReflection
  isExternal: false
  name: CreateReflection
  nameWithType: Matrix.CreateReflection
  fullName: Microsoft.Xna.Framework.Matrix.CreateReflection
- uid: Microsoft.Xna.Framework.Vector3.Up
  commentId: P:Microsoft.Xna.Framework.Vector3.Up
- uid: Microsoft.Xna.Framework.Matrix.CreateWorld*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.CreateWorld
  isExternal: false
  name: CreateWorld
  nameWithType: Matrix.CreateWorld
  fullName: Microsoft.Xna.Framework.Matrix.CreateWorld
- uid: Microsoft.Xna.Framework.Matrix.Decompose*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Decompose
  isExternal: false
  name: Decompose
  nameWithType: Matrix.Decompose
  fullName: Microsoft.Xna.Framework.Matrix.Decompose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Matrix.Determinant*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Determinant
  isExternal: false
  name: Determinant
  nameWithType: Matrix.Determinant
  fullName: Microsoft.Xna.Framework.Matrix.Determinant
- uid: Microsoft.Xna.Framework.Matrix.Divide*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Divide
  isExternal: false
  name: Divide
  nameWithType: Matrix.Divide
  fullName: Microsoft.Xna.Framework.Matrix.Divide
- uid: Microsoft.Xna.Framework.Matrix.Equals*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Equals
  isExternal: false
  name: Equals
  nameWithType: Matrix.Equals
  fullName: Microsoft.Xna.Framework.Matrix.Equals
- uid: System.IEquatable{Microsoft.Xna.Framework.Matrix}.Equals(Microsoft.Xna.Framework.Matrix)
  commentId: M:System.IEquatable{Microsoft.Xna.Framework.Matrix}.Equals(Microsoft.Xna.Framework.Matrix)
  parent: System.IEquatable{Microsoft.Xna.Framework.Matrix}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Matrix)
  nameWithType: IEquatable<Matrix>.Equals(Matrix)
  fullName: System.IEquatable<Microsoft.Xna.Framework.Matrix>.Equals(Microsoft.Xna.Framework.Matrix)
  nameWithType.vb: IEquatable(Of Matrix).Equals(Matrix)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.Matrix).Equals(Microsoft.Xna.Framework.Matrix)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Matrix>.Equals
    fullName: System.IEquatable<Microsoft.Xna.Framework.Matrix>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Matrix).Equals
    fullName: System.IEquatable(Of Microsoft.Xna.Framework.Matrix).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Matrix.GetHashCode*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: Matrix.GetHashCode
  fullName: Microsoft.Xna.Framework.Matrix.GetHashCode
- uid: Microsoft.Xna.Framework.Matrix.Invert*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Invert
  isExternal: false
  name: Invert
  nameWithType: Matrix.Invert
  fullName: Microsoft.Xna.Framework.Matrix.Invert
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework.Matrix.Lerp*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Lerp
  isExternal: false
  name: Lerp
  nameWithType: Matrix.Lerp
  fullName: Microsoft.Xna.Framework.Matrix.Lerp
- uid: Microsoft.Xna.Framework.Matrix.Multiply*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Multiply
  isExternal: false
  name: Multiply
  nameWithType: Matrix.Multiply
  fullName: Microsoft.Xna.Framework.Matrix.Multiply
- uid: Microsoft.Xna.Framework.Matrix.ToFloatArray*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.ToFloatArray
  isExternal: false
  name: ToFloatArray
  nameWithType: Matrix.ToFloatArray
  fullName: Microsoft.Xna.Framework.Matrix.ToFloatArray
- uid: System.Single[]
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Xna.Framework.Matrix.Negate*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Negate
  isExternal: false
  name: Negate
  nameWithType: Matrix.Negate
  fullName: Microsoft.Xna.Framework.Matrix.Negate
- uid: Microsoft.Xna.Framework.Matrix.op_Addition*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.op_Addition
  isExternal: false
  name: Addition
  nameWithType: Matrix.Addition
  fullName: Microsoft.Xna.Framework.Matrix.Addition
- uid: Microsoft.Xna.Framework.Matrix.op_Division*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.op_Division
  isExternal: false
  name: Division
  nameWithType: Matrix.Division
  fullName: Microsoft.Xna.Framework.Matrix.Division
- uid: Microsoft.Xna.Framework.Matrix.op_Equality*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.op_Equality
  isExternal: false
  name: Equality
  nameWithType: Matrix.Equality
  fullName: Microsoft.Xna.Framework.Matrix.Equality
- uid: Microsoft.Xna.Framework.Matrix.op_Inequality*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: Matrix.Inequality
  fullName: Microsoft.Xna.Framework.Matrix.Inequality
- uid: Microsoft.Xna.Framework.Matrix.op_Multiply*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.op_Multiply
  isExternal: false
  name: Multiply
  nameWithType: Matrix.Multiply
  fullName: Microsoft.Xna.Framework.Matrix.Multiply
- uid: Microsoft.Xna.Framework.Matrix.op_Subtraction*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.op_Subtraction
  isExternal: false
  name: Subtraction
  nameWithType: Matrix.Subtraction
  fullName: Microsoft.Xna.Framework.Matrix.Subtraction
- uid: Microsoft.Xna.Framework.Matrix.op_UnaryNegation*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.op_UnaryNegation
  isExternal: false
  name: UnaryNegation
  nameWithType: Matrix.UnaryNegation
  fullName: Microsoft.Xna.Framework.Matrix.UnaryNegation
- uid: Microsoft.Xna.Framework.Matrix.Subtract*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Subtract
  isExternal: false
  name: Subtract
  nameWithType: Matrix.Subtract
  fullName: Microsoft.Xna.Framework.Matrix.Subtract
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Matrix.M11
  commentId: F:Microsoft.Xna.Framework.Matrix.M11
- uid: Microsoft.Xna.Framework.Matrix.M12
  commentId: F:Microsoft.Xna.Framework.Matrix.M12
- uid: Microsoft.Xna.Framework.Matrix.M13
  commentId: F:Microsoft.Xna.Framework.Matrix.M13
- uid: Microsoft.Xna.Framework.Matrix.M14
  commentId: F:Microsoft.Xna.Framework.Matrix.M14
- uid: Microsoft.Xna.Framework.Matrix.M21
  commentId: F:Microsoft.Xna.Framework.Matrix.M21
- uid: Microsoft.Xna.Framework.Matrix.M22
  commentId: F:Microsoft.Xna.Framework.Matrix.M22
- uid: Microsoft.Xna.Framework.Matrix.M23
  commentId: F:Microsoft.Xna.Framework.Matrix.M23
- uid: Microsoft.Xna.Framework.Matrix.M24
  commentId: F:Microsoft.Xna.Framework.Matrix.M24
- uid: Microsoft.Xna.Framework.Matrix.M31
  commentId: F:Microsoft.Xna.Framework.Matrix.M31
- uid: Microsoft.Xna.Framework.Matrix.M32
  commentId: F:Microsoft.Xna.Framework.Matrix.M32
- uid: Microsoft.Xna.Framework.Matrix.M33
  commentId: F:Microsoft.Xna.Framework.Matrix.M33
- uid: Microsoft.Xna.Framework.Matrix.M34
  commentId: F:Microsoft.Xna.Framework.Matrix.M34
- uid: Microsoft.Xna.Framework.Matrix.M41
  commentId: F:Microsoft.Xna.Framework.Matrix.M41
- uid: Microsoft.Xna.Framework.Matrix.M42
  commentId: F:Microsoft.Xna.Framework.Matrix.M42
- uid: Microsoft.Xna.Framework.Matrix.M43
  commentId: F:Microsoft.Xna.Framework.Matrix.M43
- uid: Microsoft.Xna.Framework.Matrix.M44
  commentId: F:Microsoft.Xna.Framework.Matrix.M44
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Matrix.ToString*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.ToString
  isExternal: false
  name: ToString
  nameWithType: Matrix.ToString
  fullName: Microsoft.Xna.Framework.Matrix.ToString
- uid: Microsoft.Xna.Framework.Matrix.Transpose*
  commentId: Overload:Microsoft.Xna.Framework.Matrix.Transpose
  isExternal: false
  name: Transpose
  nameWithType: Matrix.Transpose
  fullName: Microsoft.Xna.Framework.Matrix.Transpose
