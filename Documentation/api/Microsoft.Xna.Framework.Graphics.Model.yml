### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.Model
  commentId: T:Microsoft.Xna.Framework.Graphics.Model
  id: Model
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.Model.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelBone},System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelMesh})
  - Microsoft.Xna.Framework.Graphics.Model.Bones
  - Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  - Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom(Microsoft.Xna.Framework.Matrix[])
  - Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  - Microsoft.Xna.Framework.Graphics.Model.Draw(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Graphics.Model.Meshes
  - Microsoft.Xna.Framework.Graphics.Model.Root
  - Microsoft.Xna.Framework.Graphics.Model.Tag
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: Model
  fullName: Microsoft.Xna.Framework.Graphics.Model
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Model
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 12
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nA basic 3D model with per mesh parent bones.\n"
  example: []
  syntax:
    content: public sealed class Model
    content.vb: Public NotInheritable Class Model
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Xna.Framework.Graphics.Model.Bones
  commentId: P:Microsoft.Xna.Framework.Graphics.Model.Bones
  id: Bones
  parent: Microsoft.Xna.Framework.Graphics.Model
  langs:
  - csharp
  - vb
  name: Bones
  nameWithType: Model.Bones
  fullName: Microsoft.Xna.Framework.Graphics.Model.Bones
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Bones
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 22
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nA collection of <xref href=\"Microsoft.Xna.Framework.Graphics.ModelBone\" data-throw-if-not-resolved=\"false\"></xref> objects which describe how each mesh in the\nmesh collection for this model relates to its parent mesh.\n"
  example: []
  syntax:
    content: public ModelBoneCollection Bones { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.ModelBoneCollection
    content.vb: Public ReadOnly Property Bones As ModelBoneCollection
  overload: Microsoft.Xna.Framework.Graphics.Model.Bones*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.Model.Meshes
  commentId: P:Microsoft.Xna.Framework.Graphics.Model.Meshes
  id: Meshes
  parent: Microsoft.Xna.Framework.Graphics.Model
  langs:
  - csharp
  - vb
  name: Meshes
  nameWithType: Model.Meshes
  fullName: Microsoft.Xna.Framework.Graphics.Model.Meshes
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Meshes
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 29
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nA collection of <xref href=\"Microsoft.Xna.Framework.Graphics.ModelMesh\" data-throw-if-not-resolved=\"false\"></xref> objects which compose the model. Each <xref href=\"Microsoft.Xna.Framework.Graphics.ModelMesh\" data-throw-if-not-resolved=\"false\"></xref>\nin a model may be moved independently and may be composed of multiple materials\nidentified as <xref href=\"Microsoft.Xna.Framework.Graphics.ModelMeshPart\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public ModelMeshCollection Meshes { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.ModelMeshCollection
    content.vb: Public ReadOnly Property Meshes As ModelMeshCollection
  overload: Microsoft.Xna.Framework.Graphics.Model.Meshes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.Model.Root
  commentId: P:Microsoft.Xna.Framework.Graphics.Model.Root
  id: Root
  parent: Microsoft.Xna.Framework.Graphics.Model
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: Model.Root
  fullName: Microsoft.Xna.Framework.Graphics.Model.Root
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Root
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 34
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nRoot bone for this model.\n"
  example: []
  syntax:
    content: public ModelBone Root { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.ModelBone
    content.vb: Public Property Root As ModelBone
  overload: Microsoft.Xna.Framework.Graphics.Model.Root*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.Model.Tag
  commentId: P:Microsoft.Xna.Framework.Graphics.Model.Tag
  id: Tag
  parent: Microsoft.Xna.Framework.Graphics.Model
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: Model.Tag
  fullName: Microsoft.Xna.Framework.Graphics.Model.Tag
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Tag
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 42
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCustom attached object.\n<remarks>\nSkinning data is example of attached object for model.\n</remarks>\n"
  example: []
  syntax:
    content: public object Tag { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Tag As Object
  overload: Microsoft.Xna.Framework.Graphics.Model.Tag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.Model.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelBone},System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelMesh})
  commentId: M:Microsoft.Xna.Framework.Graphics.Model.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelBone},System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelMesh})
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelBone},System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelMesh})'
  parent: Microsoft.Xna.Framework.Graphics.Model
  langs:
  - csharp
  - vb
  name: Model(GraphicsDevice, List<ModelBone>, List<ModelMesh>)
  nameWithType: Model.Model(GraphicsDevice, List<ModelBone>, List<ModelMesh>)
  fullName: Microsoft.Xna.Framework.Graphics.Model.Model(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Collections.Generic.List<Microsoft.Xna.Framework.Graphics.ModelBone>, System.Collections.Generic.List<Microsoft.Xna.Framework.Graphics.ModelMesh>)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 64
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nConstructs a model. \n"
  example: []
  syntax:
    content: public Model(GraphicsDevice graphicsDevice, List<ModelBone> bones, List<ModelMesh> meshes)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
      description: A valid reference to <xref href="Microsoft.Xna.Framework.Graphics.GraphicsDevice" data-throw-if-not-resolved="false"></xref>.
    - id: bones
      type: System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelBone}
      description: The collection of bones.
    - id: meshes
      type: System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelMesh}
      description: The collection of meshes.
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, bones As List(Of ModelBone), meshes As List(Of ModelMesh))
  overload: Microsoft.Xna.Framework.Graphics.Model.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">graphicsDevice</code> is null.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">bones</code> is null.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">meshes</code> is null.\n"
  nameWithType.vb: Model.Model(GraphicsDevice, List(Of ModelBone), List(Of ModelMesh))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Model.Model(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Collections.Generic.List(Of Microsoft.Xna.Framework.Graphics.ModelBone), System.Collections.Generic.List(Of Microsoft.Xna.Framework.Graphics.ModelMesh))
  name.vb: Model(GraphicsDevice, List(Of ModelBone), List(Of ModelMesh))
- uid: Microsoft.Xna.Framework.Graphics.Model.Draw(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Graphics.Model.Draw(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  id: Draw(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Graphics.Model
  langs:
  - csharp
  - vb
  name: Draw(Matrix, Matrix, Matrix)
  nameWithType: Model.Draw(Matrix, Matrix, Matrix)
  fullName: Microsoft.Xna.Framework.Graphics.Model.Draw(Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Draw
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 113
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nDraws the model meshes.\n"
  example: []
  syntax:
    content: public void Draw(Matrix world, Matrix view, Matrix projection)
    parameters:
    - id: world
      type: Microsoft.Xna.Framework.Matrix
      description: The world transform.
    - id: view
      type: Microsoft.Xna.Framework.Matrix
      description: The view transform.
    - id: projection
      type: Microsoft.Xna.Framework.Matrix
      description: The projection transform.
    content.vb: Public Sub Draw(world As Matrix, view As Matrix, projection As Matrix)
  overload: Microsoft.Xna.Framework.Graphics.Model.Draw*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  commentId: M:Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  id: CopyAbsoluteBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  parent: Microsoft.Xna.Framework.Graphics.Model
  langs:
  - csharp
  - vb
  name: CopyAbsoluteBoneTransformsTo(Matrix[])
  nameWithType: Model.CopyAbsoluteBoneTransformsTo(Matrix[])
  fullName: Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CopyAbsoluteBoneTransformsTo
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 148
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCopies bone transforms relative to all parent bones of the each bone from this model to a given array.\n"
  example: []
  syntax:
    content: public void CopyAbsoluteBoneTransformsTo(Matrix[] destinationBoneTransforms)
    parameters:
    - id: destinationBoneTransforms
      type: Microsoft.Xna.Framework.Matrix[]
      description: The array receiving the transformed bones.
    content.vb: Public Sub CopyAbsoluteBoneTransformsTo(destinationBoneTransforms As Matrix())
  overload: Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo*
  nameWithType.vb: Model.CopyAbsoluteBoneTransformsTo(Matrix())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo(Microsoft.Xna.Framework.Matrix())
  name.vb: CopyAbsoluteBoneTransformsTo(Matrix())
- uid: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom(Microsoft.Xna.Framework.Matrix[])
  commentId: M:Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom(Microsoft.Xna.Framework.Matrix[])
  id: CopyBoneTransformsFrom(Microsoft.Xna.Framework.Matrix[])
  parent: Microsoft.Xna.Framework.Graphics.Model
  langs:
  - csharp
  - vb
  name: CopyBoneTransformsFrom(Matrix[])
  nameWithType: Model.CopyBoneTransformsFrom(Matrix[])
  fullName: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom(Microsoft.Xna.Framework.Matrix[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CopyBoneTransformsFrom
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 180
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCopies bone transforms relative to <xref href=\"Microsoft.Xna.Framework.Graphics.Model.Root\" data-throw-if-not-resolved=\"false\"></xref> bone from a given array to this model.\n"
  example: []
  syntax:
    content: public void CopyBoneTransformsFrom(Matrix[] sourceBoneTransforms)
    parameters:
    - id: sourceBoneTransforms
      type: Microsoft.Xna.Framework.Matrix[]
      description: The array of prepared bone transform data.
    content.vb: Public Sub CopyBoneTransformsFrom(sourceBoneTransforms As Matrix())
  overload: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">sourceBoneTransforms</code> is null.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">sourceBoneTransforms</code> is invalid.\n"
  nameWithType.vb: Model.CopyBoneTransformsFrom(Matrix())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom(Microsoft.Xna.Framework.Matrix())
  name.vb: CopyBoneTransformsFrom(Matrix())
- uid: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  commentId: M:Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  id: CopyBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  parent: Microsoft.Xna.Framework.Graphics.Model
  langs:
  - csharp
  - vb
  name: CopyBoneTransformsTo(Matrix[])
  nameWithType: Model.CopyBoneTransformsTo(Matrix[])
  fullName: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo(Microsoft.Xna.Framework.Matrix[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Model.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CopyBoneTransformsTo
    path: ../MonoGame.Framework/Graphics/Model.cs
    startLine: 204
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCopies bone transforms relative to <xref href=\"Microsoft.Xna.Framework.Graphics.Model.Root\" data-throw-if-not-resolved=\"false\"></xref> bone from this model to a given array.\n"
  example: []
  syntax:
    content: public void CopyBoneTransformsTo(Matrix[] destinationBoneTransforms)
    parameters:
    - id: destinationBoneTransforms
      type: Microsoft.Xna.Framework.Matrix[]
      description: The array receiving the transformed bones.
    content.vb: Public Sub CopyBoneTransformsTo(destinationBoneTransforms As Matrix())
  overload: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">destinationBoneTransforms</code> is null.\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">destinationBoneTransforms</code> is invalid.\n"
  nameWithType.vb: Model.CopyBoneTransformsTo(Matrix())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo(Microsoft.Xna.Framework.Matrix())
  name.vb: CopyBoneTransformsTo(Matrix())
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.ModelBone
  commentId: T:Microsoft.Xna.Framework.Graphics.ModelBone
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: ModelBone
  nameWithType: ModelBone
  fullName: Microsoft.Xna.Framework.Graphics.ModelBone
- uid: Microsoft.Xna.Framework.Graphics.Model.Bones*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Model.Bones
  isExternal: false
  name: Bones
  nameWithType: Model.Bones
  fullName: Microsoft.Xna.Framework.Graphics.Model.Bones
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection
  commentId: T:Microsoft.Xna.Framework.Graphics.ModelBoneCollection
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: ModelBoneCollection
  nameWithType: ModelBoneCollection
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection
- uid: Microsoft.Xna.Framework.Graphics.ModelMesh
  commentId: T:Microsoft.Xna.Framework.Graphics.ModelMesh
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: ModelMesh
  nameWithType: ModelMesh
  fullName: Microsoft.Xna.Framework.Graphics.ModelMesh
- uid: Microsoft.Xna.Framework.Graphics.ModelMeshPart
  commentId: T:Microsoft.Xna.Framework.Graphics.ModelMeshPart
  isExternal: false
  name: ModelMeshPart
  nameWithType: ModelMeshPart
  fullName: Microsoft.Xna.Framework.Graphics.ModelMeshPart
- uid: Microsoft.Xna.Framework.Graphics.Model.Meshes*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Model.Meshes
  isExternal: false
  name: Meshes
  nameWithType: Model.Meshes
  fullName: Microsoft.Xna.Framework.Graphics.Model.Meshes
- uid: Microsoft.Xna.Framework.Graphics.ModelMeshCollection
  commentId: T:Microsoft.Xna.Framework.Graphics.ModelMeshCollection
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: ModelMeshCollection
  nameWithType: ModelMeshCollection
  fullName: Microsoft.Xna.Framework.Graphics.ModelMeshCollection
- uid: Microsoft.Xna.Framework.Graphics.Model.Root*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Model.Root
  isExternal: false
  name: Root
  nameWithType: Model.Root
  fullName: Microsoft.Xna.Framework.Graphics.Model.Root
- uid: Microsoft.Xna.Framework.Graphics.Model.Tag*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Model.Tag
  isExternal: false
  name: Tag
  nameWithType: Model.Tag
  fullName: Microsoft.Xna.Framework.Graphics.Model.Tag
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.Model.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Model.#ctor
  isExternal: false
  name: Model
  nameWithType: Model.Model
  fullName: Microsoft.Xna.Framework.Graphics.Model.Model
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelBone}
  commentId: T:System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelBone}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ModelBone>
  nameWithType: List<ModelBone>
  fullName: System.Collections.Generic.List<Microsoft.Xna.Framework.Graphics.ModelBone>
  nameWithType.vb: List(Of ModelBone)
  fullName.vb: System.Collections.Generic.List(Of Microsoft.Xna.Framework.Graphics.ModelBone)
  name.vb: List(Of ModelBone)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Graphics.ModelBone
    name: ModelBone
    nameWithType: ModelBone
    fullName: Microsoft.Xna.Framework.Graphics.ModelBone
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Graphics.ModelBone
    name: ModelBone
    nameWithType: ModelBone
    fullName: Microsoft.Xna.Framework.Graphics.ModelBone
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelMesh}
  commentId: T:System.Collections.Generic.List{Microsoft.Xna.Framework.Graphics.ModelMesh}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ModelMesh>
  nameWithType: List<ModelMesh>
  fullName: System.Collections.Generic.List<Microsoft.Xna.Framework.Graphics.ModelMesh>
  nameWithType.vb: List(Of ModelMesh)
  fullName.vb: System.Collections.Generic.List(Of Microsoft.Xna.Framework.Graphics.ModelMesh)
  name.vb: List(Of ModelMesh)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Graphics.ModelMesh
    name: ModelMesh
    nameWithType: ModelMesh
    fullName: Microsoft.Xna.Framework.Graphics.ModelMesh
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Graphics.ModelMesh
    name: ModelMesh
    nameWithType: ModelMesh
    fullName: Microsoft.Xna.Framework.Graphics.ModelMesh
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Xna.Framework.Graphics.Model.Draw*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Model.Draw
  isExternal: false
  name: Draw
  nameWithType: Model.Draw
  fullName: Microsoft.Xna.Framework.Graphics.Model.Draw
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo
  isExternal: false
  name: CopyAbsoluteBoneTransformsTo
  nameWithType: Model.CopyAbsoluteBoneTransformsTo
  fullName: Microsoft.Xna.Framework.Graphics.Model.CopyAbsoluteBoneTransformsTo
- uid: Microsoft.Xna.Framework.Matrix[]
  name: Matrix[]
  nameWithType: Matrix[]
  fullName: Microsoft.Xna.Framework.Matrix[]
  nameWithType.vb: Matrix()
  fullName.vb: Microsoft.Xna.Framework.Matrix()
  name.vb: Matrix()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Xna.Framework.Graphics.Model.Root
  commentId: P:Microsoft.Xna.Framework.Graphics.Model.Root
- uid: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom
  isExternal: false
  name: CopyBoneTransformsFrom
  nameWithType: Model.CopyBoneTransformsFrom
  fullName: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsFrom
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo
  isExternal: false
  name: CopyBoneTransformsTo
  nameWithType: Model.CopyBoneTransformsTo
  fullName: Microsoft.Xna.Framework.Graphics.Model.CopyBoneTransformsTo
