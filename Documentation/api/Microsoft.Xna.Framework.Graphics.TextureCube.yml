### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.TextureCube
  commentId: T:Microsoft.Xna.Framework.Graphics.TextureCube
  id: TextureCube
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.TextureCube.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat)
  - Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[])
  - Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.TextureCube.SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[])
  - Microsoft.Xna.Framework.Graphics.TextureCube.SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.TextureCube.SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.TextureCube.Size
  langs:
  - csharp
  - vb
  name: TextureCube
  nameWithType: TextureCube
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/TextureCube.OpenGL.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TextureCube
    path: ../MonoGame.Framework/Graphics/TextureCube.OpenGL.cs
    startLine: 13
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public class TextureCube : Texture, IDisposable'
    content.vb: >-
      Public Class TextureCube
          Inherits Texture
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Graphics.GraphicsResource
  - Microsoft.Xna.Framework.Graphics.Texture
  derivedClasses:
  - Microsoft.Xna.Framework.Graphics.RenderTargetCube
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Xna.Framework.Graphics.Texture.Format
  - Microsoft.Xna.Framework.Graphics.Texture.LevelCount
  - Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  - Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.Size
  commentId: P:Microsoft.Xna.Framework.Graphics.TextureCube.Size
  id: Size
  parent: Microsoft.Xna.Framework.Graphics.TextureCube
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: TextureCube.Size
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.Size
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/TextureCube.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Size
    path: ../MonoGame.Framework/Graphics/TextureCube.cs
    startLine: 18
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets the width and height of the cube map face in pixels.\n"
  example: []
  syntax:
    content: public int Size { get; }
    parameters: []
    return:
      type: System.Int32
      description: The width and height of a cube map face in pixels.
    content.vb: Public ReadOnly Property Size As Integer
  overload: Microsoft.Xna.Framework.Graphics.TextureCube.Size*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat)
  commentId: M:Microsoft.Xna.Framework.Graphics.TextureCube.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat)'
  parent: Microsoft.Xna.Framework.Graphics.TextureCube
  langs:
  - csharp
  - vb
  name: TextureCube(GraphicsDevice, Int32, Boolean, SurfaceFormat)
  nameWithType: TextureCube.TextureCube(GraphicsDevice, Int32, Boolean, SurfaceFormat)
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.TextureCube(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Int32, System.Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/TextureCube.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/TextureCube.cs
    startLine: 26
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public TextureCube(GraphicsDevice graphicsDevice, int size, bool mipMap, SurfaceFormat format)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    - id: size
      type: System.Int32
    - id: mipMap
      type: System.Boolean
    - id: format
      type: Microsoft.Xna.Framework.Graphics.SurfaceFormat
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, size As Integer, mipMap As Boolean, format As SurfaceFormat)
  overload: Microsoft.Xna.Framework.Graphics.TextureCube.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[])
  commentId: M:Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[])
  id: GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[])
  parent: Microsoft.Xna.Framework.Graphics.TextureCube
  langs:
  - csharp
  - vb
  name: GetData<T>(CubeMapFace, T[])
  nameWithType: TextureCube.GetData<T>(CubeMapFace, T[])
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.GetData<T>(Microsoft.Xna.Framework.Graphics.CubeMapFace, T[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/TextureCube.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetData
    path: ../MonoGame.Framework/Graphics/TextureCube.cs
    startLine: 52
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets a copy of cube texture data specifying a cubemap face.\n"
  example: []
  syntax:
    content: 'public void GetData<T>(CubeMapFace cubeMapFace, T[] data)where T : struct'
    parameters:
    - id: cubeMapFace
      type: Microsoft.Xna.Framework.Graphics.CubeMapFace
      description: The cube map face.
    - id: data
      type: '{T}[]'
      description: The data.
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub GetData(Of T As Structure)(cubeMapFace As CubeMapFace, data As T())
  overload: Microsoft.Xna.Framework.Graphics.TextureCube.GetData*
  nameWithType.vb: TextureCube.GetData(Of T)(CubeMapFace, T())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.TextureCube.GetData(Of T)(Microsoft.Xna.Framework.Graphics.CubeMapFace, T())
  name.vb: GetData(Of T)(CubeMapFace, T())
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[],System.Int32,System.Int32)
  id: GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.TextureCube
  langs:
  - csharp
  - vb
  name: GetData<T>(CubeMapFace, T[], Int32, Int32)
  nameWithType: TextureCube.GetData<T>(CubeMapFace, T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.GetData<T>(Microsoft.Xna.Framework.Graphics.CubeMapFace, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/TextureCube.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetData
    path: ../MonoGame.Framework/Graphics/TextureCube.cs
    startLine: 59
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void GetData<T>(CubeMapFace cubeMapFace, T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: cubeMapFace
      type: Microsoft.Xna.Framework.Graphics.CubeMapFace
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub GetData(Of T As Structure)(cubeMapFace As CubeMapFace, data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.TextureCube.GetData*
  nameWithType.vb: TextureCube.GetData(Of T)(CubeMapFace, T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.TextureCube.GetData(Of T)(Microsoft.Xna.Framework.Graphics.CubeMapFace, T(), System.Int32, System.Int32)
  name.vb: GetData(Of T)(CubeMapFace, T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},``0[],System.Int32,System.Int32)
  id: GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.TextureCube
  langs:
  - csharp
  - vb
  name: GetData<T>(CubeMapFace, Int32, Nullable<Rectangle>, T[], Int32, Int32)
  nameWithType: TextureCube.GetData<T>(CubeMapFace, Int32, Nullable<Rectangle>, T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.GetData<T>(Microsoft.Xna.Framework.Graphics.CubeMapFace, System.Int32, System.Nullable<Microsoft.Xna.Framework.Rectangle>, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/TextureCube.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetData
    path: ../MonoGame.Framework/Graphics/TextureCube.cs
    startLine: 64
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void GetData<T>(CubeMapFace cubeMapFace, int level, Rectangle? rect, T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: cubeMapFace
      type: Microsoft.Xna.Framework.Graphics.CubeMapFace
    - id: level
      type: System.Int32
    - id: rect
      type: System.Nullable{Microsoft.Xna.Framework.Rectangle}
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub GetData(Of T As Structure)(cubeMapFace As CubeMapFace, level As Integer, rect As Rectangle?, data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.TextureCube.GetData*
  nameWithType.vb: TextureCube.GetData(Of T)(CubeMapFace, Int32, Nullable(Of Rectangle), T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.TextureCube.GetData(Of T)(Microsoft.Xna.Framework.Graphics.CubeMapFace, System.Int32, System.Nullable(Of Microsoft.Xna.Framework.Rectangle), T(), System.Int32, System.Int32)
  name.vb: GetData(Of T)(CubeMapFace, Int32, Nullable(Of Rectangle), T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[])
  commentId: M:Microsoft.Xna.Framework.Graphics.TextureCube.SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[])
  id: SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[])
  parent: Microsoft.Xna.Framework.Graphics.TextureCube
  langs:
  - csharp
  - vb
  name: SetData<T>(CubeMapFace, T[])
  nameWithType: TextureCube.SetData<T>(CubeMapFace, T[])
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.SetData<T>(Microsoft.Xna.Framework.Graphics.CubeMapFace, T[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/TextureCube.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetData
    path: ../MonoGame.Framework/Graphics/TextureCube.cs
    startLine: 71
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void SetData<T>(CubeMapFace face, T[] data)where T : struct'
    parameters:
    - id: face
      type: Microsoft.Xna.Framework.Graphics.CubeMapFace
    - id: data
      type: '{T}[]'
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T As Structure)(face As CubeMapFace, data As T())
  overload: Microsoft.Xna.Framework.Graphics.TextureCube.SetData*
  nameWithType.vb: TextureCube.SetData(Of T)(CubeMapFace, T())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.TextureCube.SetData(Of T)(Microsoft.Xna.Framework.Graphics.CubeMapFace, T())
  name.vb: SetData(Of T)(CubeMapFace, T())
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.TextureCube.SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[],System.Int32,System.Int32)
  id: SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.TextureCube
  langs:
  - csharp
  - vb
  name: SetData<T>(CubeMapFace, T[], Int32, Int32)
  nameWithType: TextureCube.SetData<T>(CubeMapFace, T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.SetData<T>(Microsoft.Xna.Framework.Graphics.CubeMapFace, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/TextureCube.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetData
    path: ../MonoGame.Framework/Graphics/TextureCube.cs
    startLine: 78
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void SetData<T>(CubeMapFace face, T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: face
      type: Microsoft.Xna.Framework.Graphics.CubeMapFace
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T As Structure)(face As CubeMapFace, data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.TextureCube.SetData*
  nameWithType.vb: TextureCube.SetData(Of T)(CubeMapFace, T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.TextureCube.SetData(Of T)(Microsoft.Xna.Framework.Graphics.CubeMapFace, T(), System.Int32, System.Int32)
  name.vb: SetData(Of T)(CubeMapFace, T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.TextureCube.SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},``0[],System.Int32,System.Int32)
  id: SetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.TextureCube
  langs:
  - csharp
  - vb
  name: SetData<T>(CubeMapFace, Int32, Nullable<Rectangle>, T[], Int32, Int32)
  nameWithType: TextureCube.SetData<T>(CubeMapFace, Int32, Nullable<Rectangle>, T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.SetData<T>(Microsoft.Xna.Framework.Graphics.CubeMapFace, System.Int32, System.Nullable<Microsoft.Xna.Framework.Rectangle>, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/TextureCube.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetData
    path: ../MonoGame.Framework/Graphics/TextureCube.cs
    startLine: 83
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void SetData<T>(CubeMapFace face, int level, Rectangle? rect, T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: face
      type: Microsoft.Xna.Framework.Graphics.CubeMapFace
    - id: level
      type: System.Int32
    - id: rect
      type: System.Nullable{Microsoft.Xna.Framework.Rectangle}
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T As Structure)(face As CubeMapFace, level As Integer, rect As Rectangle?, data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.TextureCube.SetData*
  nameWithType.vb: TextureCube.SetData(Of T)(CubeMapFace, Int32, Nullable(Of Rectangle), T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.TextureCube.SetData(Of T)(Microsoft.Xna.Framework.Graphics.CubeMapFace, System.Int32, System.Nullable(Of Microsoft.Xna.Framework.Rectangle), T(), System.Int32, System.Int32)
  name.vb: SetData(Of T)(CubeMapFace, Int32, Nullable(Of Rectangle), T(), Int32, Int32)
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsResource
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsResource
  nameWithType: GraphicsResource
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource
- uid: Microsoft.Xna.Framework.Graphics.Texture
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Texture
  nameWithType: Texture
  fullName: Microsoft.Xna.Framework.Graphics.Texture
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.Graphics.Texture.Format
  commentId: P:Microsoft.Xna.Framework.Graphics.Texture.Format
  parent: Microsoft.Xna.Framework.Graphics.Texture
  isExternal: false
  name: Format
  nameWithType: Texture.Format
  fullName: Microsoft.Xna.Framework.Graphics.Texture.Format
- uid: Microsoft.Xna.Framework.Graphics.Texture.LevelCount
  commentId: P:Microsoft.Xna.Framework.Graphics.Texture.LevelCount
  parent: Microsoft.Xna.Framework.Graphics.Texture
  isExternal: false
  name: LevelCount
  nameWithType: Texture.LevelCount
  fullName: Microsoft.Xna.Framework.Graphics.Texture.LevelCount
- uid: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  parent: Microsoft.Xna.Framework.Graphics.Texture
  isExternal: false
  name: GraphicsDeviceResetting()
  nameWithType: Texture.GraphicsDeviceResetting()
  fullName: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: Texture.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: Texture.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.Texture
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Texture.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Texture.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.Texture.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Texture.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.Texture.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsResource.Dispose()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  commentId: E:Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Disposing
  nameWithType: GraphicsResource.Disposing
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsResource.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: IsDisposed
  nameWithType: GraphicsResource.IsDisposed
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Name
  nameWithType: GraphicsResource.Name
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Tag
  nameWithType: GraphicsResource.Tag
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: ToString()
  nameWithType: GraphicsResource.ToString()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.Size*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.TextureCube.Size
  isExternal: false
  name: Size
  nameWithType: TextureCube.Size
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.Size
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.TextureCube.#ctor
  isExternal: false
  name: TextureCube
  nameWithType: TextureCube.TextureCube
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.TextureCube
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.SurfaceFormat
  commentId: T:Microsoft.Xna.Framework.Graphics.SurfaceFormat
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: SurfaceFormat
  nameWithType: SurfaceFormat
  fullName: Microsoft.Xna.Framework.Graphics.SurfaceFormat
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.GetData*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.TextureCube.GetData
  isExternal: false
  name: GetData
  nameWithType: TextureCube.GetData
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.GetData
- uid: Microsoft.Xna.Framework.Graphics.CubeMapFace
  commentId: T:Microsoft.Xna.Framework.Graphics.CubeMapFace
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: CubeMapFace
  nameWithType: CubeMapFace
  fullName: Microsoft.Xna.Framework.Graphics.CubeMapFace
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{Microsoft.Xna.Framework.Rectangle}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Rectangle}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Rectangle>
  nameWithType: Nullable<Rectangle>
  fullName: System.Nullable<Microsoft.Xna.Framework.Rectangle>
  nameWithType.vb: Nullable(Of Rectangle)
  fullName.vb: System.Nullable(Of Microsoft.Xna.Framework.Rectangle)
  name.vb: Nullable(Of Rectangle)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: Microsoft.Xna.Framework.Rectangle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: Microsoft.Xna.Framework.Rectangle
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.TextureCube.SetData*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.TextureCube.SetData
  isExternal: false
  name: SetData
  nameWithType: TextureCube.SetData
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube.SetData
