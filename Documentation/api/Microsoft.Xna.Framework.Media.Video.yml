### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Media.Video
  commentId: T:Microsoft.Xna.Framework.Media.Video
  id: Video
  parent: Microsoft.Xna.Framework.Media
  children:
  - Microsoft.Xna.Framework.Media.Video.Dispose
  - Microsoft.Xna.Framework.Media.Video.Duration
  - Microsoft.Xna.Framework.Media.Video.FileName
  - Microsoft.Xna.Framework.Media.Video.Finalize
  - Microsoft.Xna.Framework.Media.Video.FramesPerSecond
  - Microsoft.Xna.Framework.Media.Video.Height
  - Microsoft.Xna.Framework.Media.Video.VideoSoundtrackType
  - Microsoft.Xna.Framework.Media.Video.Width
  langs:
  - csharp
  - vb
  name: Video
  nameWithType: Video
  fullName: Microsoft.Xna.Framework.Media.Video
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Media/Video.MacOS.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Video
    path: ../MonoGame.Framework/Media/Video.MacOS.cs
    startLine: 16
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nRepresents a video.\n"
  example: []
  syntax:
    content: 'public sealed class Video : IDisposable'
    content.vb: >-
      Public NotInheritable Class Video
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Xna.Framework.Media.Video.FileName
  commentId: P:Microsoft.Xna.Framework.Media.Video.FileName
  id: FileName
  parent: Microsoft.Xna.Framework.Media.Video
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: Video.FileName
  fullName: Microsoft.Xna.Framework.Media.Video.FileName
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/Video.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FileName
    path: ../MonoGame.Framework/Media/Video.cs
    startLine: 21
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nI actually think this is a file PATH...\n"
  example: []
  syntax:
    content: public string FileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FileName As String
  overload: Microsoft.Xna.Framework.Media.Video.FileName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.Video.Duration
  commentId: P:Microsoft.Xna.Framework.Media.Video.Duration
  id: Duration
  parent: Microsoft.Xna.Framework.Media.Video
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: Video.Duration
  fullName: Microsoft.Xna.Framework.Media.Video.Duration
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/Video.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Duration
    path: ../MonoGame.Framework/Media/Video.cs
    startLine: 26
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the duration of the Video.\n"
  example: []
  syntax:
    content: public TimeSpan Duration { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property Duration As TimeSpan
  overload: Microsoft.Xna.Framework.Media.Video.Duration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.Video.FramesPerSecond
  commentId: P:Microsoft.Xna.Framework.Media.Video.FramesPerSecond
  id: FramesPerSecond
  parent: Microsoft.Xna.Framework.Media.Video
  langs:
  - csharp
  - vb
  name: FramesPerSecond
  nameWithType: Video.FramesPerSecond
  fullName: Microsoft.Xna.Framework.Media.Video.FramesPerSecond
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/Video.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FramesPerSecond
    path: ../MonoGame.Framework/Media/Video.cs
    startLine: 31
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the frame rate of this video.\n"
  example: []
  syntax:
    content: public float FramesPerSecond { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property FramesPerSecond As Single
  overload: Microsoft.Xna.Framework.Media.Video.FramesPerSecond*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.Video.Height
  commentId: P:Microsoft.Xna.Framework.Media.Video.Height
  id: Height
  parent: Microsoft.Xna.Framework.Media.Video
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Video.Height
  fullName: Microsoft.Xna.Framework.Media.Video.Height
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/Video.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Height
    path: ../MonoGame.Framework/Media/Video.cs
    startLine: 36
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the height of this video, in pixels.\n"
  example: []
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: Microsoft.Xna.Framework.Media.Video.Height*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.Video.VideoSoundtrackType
  commentId: P:Microsoft.Xna.Framework.Media.Video.VideoSoundtrackType
  id: VideoSoundtrackType
  parent: Microsoft.Xna.Framework.Media.Video
  langs:
  - csharp
  - vb
  name: VideoSoundtrackType
  nameWithType: Video.VideoSoundtrackType
  fullName: Microsoft.Xna.Framework.Media.Video.VideoSoundtrackType
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/Video.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: VideoSoundtrackType
    path: ../MonoGame.Framework/Media/Video.cs
    startLine: 41
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the VideoSoundtrackType for this video.\n"
  example: []
  syntax:
    content: public VideoSoundtrackType VideoSoundtrackType { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Media.VideoSoundtrackType
    content.vb: Public ReadOnly Property VideoSoundtrackType As VideoSoundtrackType
  overload: Microsoft.Xna.Framework.Media.Video.VideoSoundtrackType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.Video.Width
  commentId: P:Microsoft.Xna.Framework.Media.Video.Width
  id: Width
  parent: Microsoft.Xna.Framework.Media.Video
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Video.Width
  fullName: Microsoft.Xna.Framework.Media.Video.Width
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/Video.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Width
    path: ../MonoGame.Framework/Media/Video.cs
    startLine: 46
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the width of this video, in pixels.\n"
  example: []
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: Microsoft.Xna.Framework.Media.Video.Width*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.Video.Finalize
  commentId: M:Microsoft.Xna.Framework.Media.Video.Finalize
  id: Finalize
  parent: Microsoft.Xna.Framework.Media.Video
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: Video.Finalize()
  fullName: Microsoft.Xna.Framework.Media.Video.Finalize()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/Video.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Finalize
    path: ../MonoGame.Framework/Media/Video.cs
    startLine: 67
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Microsoft.Xna.Framework.Media.Video.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.Media.Video.Dispose
  commentId: M:Microsoft.Xna.Framework.Media.Video.Dispose
  id: Dispose
  parent: Microsoft.Xna.Framework.Media.Video
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Video.Dispose()
  fullName: Microsoft.Xna.Framework.Media.Video.Dispose()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/Video.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/Media/Video.cs
    startLine: 76
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Xna.Framework.Media.Video.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Media
  commentId: N:Microsoft.Xna.Framework.Media
  isExternal: false
  name: Microsoft.Xna.Framework.Media
  nameWithType: Microsoft.Xna.Framework.Media
  fullName: Microsoft.Xna.Framework.Media
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Media.Video.FileName*
  commentId: Overload:Microsoft.Xna.Framework.Media.Video.FileName
  isExternal: false
  name: FileName
  nameWithType: Video.FileName
  fullName: Microsoft.Xna.Framework.Media.Video.FileName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Media.Video.Duration*
  commentId: Overload:Microsoft.Xna.Framework.Media.Video.Duration
  isExternal: false
  name: Duration
  nameWithType: Video.Duration
  fullName: Microsoft.Xna.Framework.Media.Video.Duration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Xna.Framework.Media.Video.FramesPerSecond*
  commentId: Overload:Microsoft.Xna.Framework.Media.Video.FramesPerSecond
  isExternal: false
  name: FramesPerSecond
  nameWithType: Video.FramesPerSecond
  fullName: Microsoft.Xna.Framework.Media.Video.FramesPerSecond
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Media.Video.Height*
  commentId: Overload:Microsoft.Xna.Framework.Media.Video.Height
  isExternal: false
  name: Height
  nameWithType: Video.Height
  fullName: Microsoft.Xna.Framework.Media.Video.Height
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Media.Video.VideoSoundtrackType*
  commentId: Overload:Microsoft.Xna.Framework.Media.Video.VideoSoundtrackType
  isExternal: false
  name: VideoSoundtrackType
  nameWithType: Video.VideoSoundtrackType
  fullName: Microsoft.Xna.Framework.Media.Video.VideoSoundtrackType
- uid: Microsoft.Xna.Framework.Media.VideoSoundtrackType
  commentId: T:Microsoft.Xna.Framework.Media.VideoSoundtrackType
  parent: Microsoft.Xna.Framework.Media
  isExternal: false
  name: VideoSoundtrackType
  nameWithType: VideoSoundtrackType
  fullName: Microsoft.Xna.Framework.Media.VideoSoundtrackType
- uid: Microsoft.Xna.Framework.Media.Video.Width*
  commentId: Overload:Microsoft.Xna.Framework.Media.Video.Width
  isExternal: false
  name: Width
  nameWithType: Video.Width
  fullName: Microsoft.Xna.Framework.Media.Video.Width
- uid: Microsoft.Xna.Framework.Media.Video.Finalize*
  commentId: Overload:Microsoft.Xna.Framework.Media.Video.Finalize
  isExternal: false
  name: Finalize
  nameWithType: Video.Finalize
  fullName: Microsoft.Xna.Framework.Media.Video.Finalize
- uid: Microsoft.Xna.Framework.Media.Video.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.Media.Video.Dispose
  isExternal: false
  name: Dispose
  nameWithType: Video.Dispose
  fullName: Microsoft.Xna.Framework.Media.Video.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
