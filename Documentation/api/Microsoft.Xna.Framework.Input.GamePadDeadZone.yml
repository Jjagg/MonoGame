### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Input.GamePadDeadZone
  commentId: T:Microsoft.Xna.Framework.Input.GamePadDeadZone
  id: GamePadDeadZone
  parent: Microsoft.Xna.Framework.Input
  children:
  - Microsoft.Xna.Framework.Input.GamePadDeadZone.Circular
  - Microsoft.Xna.Framework.Input.GamePadDeadZone.IndependentAxes
  - Microsoft.Xna.Framework.Input.GamePadDeadZone.None
  langs:
  - csharp
  - vb
  name: GamePadDeadZone
  nameWithType: GamePadDeadZone
  fullName: Microsoft.Xna.Framework.Input.GamePadDeadZone
  type: Enum
  source:
    remote:
      path: MonoGame.Framework/Input/GamePadDeadZone.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GamePadDeadZone
    path: ../MonoGame.Framework/Input/GamePadDeadZone.cs
    startLine: 7
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nSpecifies a type of dead zone processing to apply to Xbox 360 Controller\nanalog sticks when calling GetState.\n"
  example: []
  syntax:
    content: public enum GamePadDeadZone
    content.vb: Public Enum GamePadDeadZone
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.Xna.Framework.Input.GamePadDeadZone.None
  commentId: F:Microsoft.Xna.Framework.Input.GamePadDeadZone.None
  id: None
  parent: Microsoft.Xna.Framework.Input.GamePadDeadZone
  langs:
  - csharp
  - vb
  name: None
  nameWithType: GamePadDeadZone.None
  fullName: Microsoft.Xna.Framework.Input.GamePadDeadZone.None
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/GamePadDeadZone.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: None
    path: ../MonoGame.Framework/Input/GamePadDeadZone.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nThe values of each stick are not processed and are returned by GetState as\n&quot;raw&quot; values. This is best if you intend to implement your own dead zone\nprocessing.\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: Microsoft.Xna.Framework.Input.GamePadDeadZone
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.GamePadDeadZone.IndependentAxes
  commentId: F:Microsoft.Xna.Framework.Input.GamePadDeadZone.IndependentAxes
  id: IndependentAxes
  parent: Microsoft.Xna.Framework.Input.GamePadDeadZone
  langs:
  - csharp
  - vb
  name: IndependentAxes
  nameWithType: GamePadDeadZone.IndependentAxes
  fullName: Microsoft.Xna.Framework.Input.GamePadDeadZone.IndependentAxes
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/GamePadDeadZone.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IndependentAxes
    path: ../MonoGame.Framework/Input/GamePadDeadZone.cs
    startLine: 20
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nThe X and Y positions of each stick are compared against the dead zone independently.\nThis setting is the default when calling GetState.\n"
  example: []
  syntax:
    content: IndependentAxes = 1
    return:
      type: Microsoft.Xna.Framework.Input.GamePadDeadZone
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Input.GamePadDeadZone.Circular
  commentId: F:Microsoft.Xna.Framework.Input.GamePadDeadZone.Circular
  id: Circular
  parent: Microsoft.Xna.Framework.Input.GamePadDeadZone
  langs:
  - csharp
  - vb
  name: Circular
  nameWithType: GamePadDeadZone.Circular
  fullName: Microsoft.Xna.Framework.Input.GamePadDeadZone.Circular
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Input/GamePadDeadZone.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Circular
    path: ../MonoGame.Framework/Input/GamePadDeadZone.cs
    startLine: 28
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nThe combined X and Y position of each stick is compared to the dead zone.\nThis provides better control than IndependentAxes when the stick is used\nas a two-dimensional control surface, such as when controlling a character&apos;s\nview in a first-person game.\n"
  example: []
  syntax:
    content: Circular = 2
    return:
      type: Microsoft.Xna.Framework.Input.GamePadDeadZone
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Xna.Framework.Input
  commentId: N:Microsoft.Xna.Framework.Input
  isExternal: false
  name: Microsoft.Xna.Framework.Input
  nameWithType: Microsoft.Xna.Framework.Input
  fullName: Microsoft.Xna.Framework.Input
- uid: Microsoft.Xna.Framework.Input.GamePadDeadZone
  commentId: T:Microsoft.Xna.Framework.Input.GamePadDeadZone
  parent: Microsoft.Xna.Framework.Input
  isExternal: false
  name: GamePadDeadZone
  nameWithType: GamePadDeadZone
  fullName: Microsoft.Xna.Framework.Input.GamePadDeadZone
