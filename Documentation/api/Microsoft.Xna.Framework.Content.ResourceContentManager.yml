### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Content.ResourceContentManager
  commentId: T:Microsoft.Xna.Framework.Content.ResourceContentManager
  id: ResourceContentManager
  parent: Microsoft.Xna.Framework.Content
  children:
  - Microsoft.Xna.Framework.Content.ResourceContentManager.#ctor(System.IServiceProvider,System.Resources.ResourceManager)
  - Microsoft.Xna.Framework.Content.ResourceContentManager.OpenStream(System.String)
  langs:
  - csharp
  - vb
  name: ResourceContentManager
  nameWithType: ResourceContentManager
  fullName: Microsoft.Xna.Framework.Content.ResourceContentManager
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Content/ResourceContentManager.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ResourceContentManager
    path: ../MonoGame.Framework/Content/ResourceContentManager.cs
    startLine: 7
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: 'public class ResourceContentManager : ContentManager, IDisposable'
    content.vb: >-
      Public Class ResourceContentManager
          Inherits ContentManager
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Content.ContentManager
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Xna.Framework.Content.ContentManager.Dispose
  - Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
  - Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
  - Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
  - Microsoft.Xna.Framework.Content.ContentManager.LoadedAssets
  - Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
  - Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,{T})
  - Microsoft.Xna.Framework.Content.ContentManager.Unload
  - Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
  - Microsoft.Xna.Framework.Content.ContentManager.ServiceProvider
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Content.ResourceContentManager.#ctor(System.IServiceProvider,System.Resources.ResourceManager)
  commentId: M:Microsoft.Xna.Framework.Content.ResourceContentManager.#ctor(System.IServiceProvider,System.Resources.ResourceManager)
  id: '#ctor(System.IServiceProvider,System.Resources.ResourceManager)'
  parent: Microsoft.Xna.Framework.Content.ResourceContentManager
  langs:
  - csharp
  - vb
  name: ResourceContentManager(IServiceProvider, ResourceManager)
  nameWithType: ResourceContentManager.ResourceContentManager(IServiceProvider, ResourceManager)
  fullName: Microsoft.Xna.Framework.Content.ResourceContentManager.ResourceContentManager(System.IServiceProvider, System.Resources.ResourceManager)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Content/ResourceContentManager.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Content/ResourceContentManager.cs
    startLine: 11
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: public ResourceContentManager(IServiceProvider servicesProvider, ResourceManager resource)
    parameters:
    - id: servicesProvider
      type: System.IServiceProvider
    - id: resource
      type: System.Resources.ResourceManager
    content.vb: Public Sub New(servicesProvider As IServiceProvider, resource As ResourceManager)
  overload: Microsoft.Xna.Framework.Content.ResourceContentManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Content.ResourceContentManager.OpenStream(System.String)
  commentId: M:Microsoft.Xna.Framework.Content.ResourceContentManager.OpenStream(System.String)
  id: OpenStream(System.String)
  parent: Microsoft.Xna.Framework.Content.ResourceContentManager
  langs:
  - csharp
  - vb
  name: OpenStream(String)
  nameWithType: ResourceContentManager.OpenStream(String)
  fullName: Microsoft.Xna.Framework.Content.ResourceContentManager.OpenStream(System.String)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Content/ResourceContentManager.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OpenStream
    path: ../MonoGame.Framework/Content/ResourceContentManager.cs
    startLine: 21
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: protected override Stream OpenStream(string assetName)
    parameters:
    - id: assetName
      type: System.String
    return:
      type: System.IO.Stream
    content.vb: Protected Overrides Function OpenStream(assetName As String) As Stream
  overridden: Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
  overload: Microsoft.Xna.Framework.Content.ResourceContentManager.OpenStream*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Xna.Framework.Content
  commentId: N:Microsoft.Xna.Framework.Content
  isExternal: false
  name: Microsoft.Xna.Framework.Content
  nameWithType: Microsoft.Xna.Framework.Content
  fullName: Microsoft.Xna.Framework.Content
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Content.ContentManager
  commentId: T:Microsoft.Xna.Framework.Content.ContentManager
  parent: Microsoft.Xna.Framework.Content
  isExternal: false
  name: ContentManager
  nameWithType: ContentManager
  fullName: Microsoft.Xna.Framework.Content.ContentManager
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.Dispose
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: false
  name: Dispose()
  nameWithType: ContentManager.Dispose()
  fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose
    name: Dispose
    nameWithType: ContentManager.Dispose
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose
    name: Dispose
    nameWithType: ContentManager.Dispose
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: ContentManager.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ContentManager.Dispose
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ContentManager.Dispose
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: LoadLocalized<T>(String)
  nameWithType: ContentManager.LoadLocalized<T>(String)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized<T>(System.String)
  nameWithType.vb: ContentManager.LoadLocalized(Of T)(String)
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized(Of T)(System.String)
  name.vb: LoadLocalized(Of T)(String)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
    name: LoadLocalized<T>
    nameWithType: ContentManager.LoadLocalized<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized``1(System.String)
    name: LoadLocalized(Of T)
    nameWithType: ContentManager.LoadLocalized(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.LoadLocalized(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: Load<T>(String)
  nameWithType: ContentManager.Load<T>(String)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.Load<T>(System.String)
  nameWithType.vb: ContentManager.Load(Of T)(String)
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.Load(Of T)(System.String)
  name.vb: Load(Of T)(String)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
    name: Load<T>
    nameWithType: ContentManager.Load<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Load<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
    name: Load(Of T)
    nameWithType: ContentManager.Load(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Load(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: ReadAsset<T>(String, Action<IDisposable>)
  nameWithType: ContentManager.ReadAsset<T>(String, Action<IDisposable>)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset<T>(System.String, System.Action<System.IDisposable>)
  nameWithType.vb: ContentManager.ReadAsset(Of T)(String, Action(Of IDisposable))
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset(Of T)(System.String, System.Action(Of System.IDisposable))
  name.vb: ReadAsset(Of T)(String, Action(Of IDisposable))
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
    name: ReadAsset<T>
    nameWithType: ContentManager.ReadAsset<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset``1(System.String,System.Action{System.IDisposable})
    name: ReadAsset(Of T)
    nameWithType: ContentManager.ReadAsset(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReadAsset(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.LoadedAssets
  commentId: P:Microsoft.Xna.Framework.Content.ContentManager.LoadedAssets
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: false
  name: LoadedAssets
  nameWithType: ContentManager.LoadedAssets
  fullName: Microsoft.Xna.Framework.Content.ContentManager.LoadedAssets
- uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: false
  name: ReloadGraphicsAssets()
  nameWithType: ContentManager.ReloadGraphicsAssets()
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
    name: ReloadGraphicsAssets
    nameWithType: ContentManager.ReloadGraphicsAssets
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
    name: ReloadGraphicsAssets
    nameWithType: ContentManager.ReloadGraphicsAssets
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadGraphicsAssets
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,{T})
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  definition: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
  name: ReloadAsset<T>(String, T)
  nameWithType: ContentManager.ReloadAsset<T>(String, T)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset<T>(System.String, T)
  nameWithType.vb: ContentManager.ReloadAsset(Of T)(String, T)
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset(Of T)(System.String, T)
  name.vb: ReloadAsset(Of T)(String, T)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
    name: ReloadAsset<T>
    nameWithType: ContentManager.ReloadAsset<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
    name: ReloadAsset(Of T)
    nameWithType: ContentManager.ReloadAsset(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.Unload
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.Unload
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: false
  name: Unload()
  nameWithType: ContentManager.Unload()
  fullName: Microsoft.Xna.Framework.Content.ContentManager.Unload()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Unload
    name: Unload
    nameWithType: ContentManager.Unload
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Unload
    name: Unload
    nameWithType: ContentManager.Unload
    fullName: Microsoft.Xna.Framework.Content.ContentManager.Unload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
  commentId: P:Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: false
  name: RootDirectory
  nameWithType: ContentManager.RootDirectory
  fullName: Microsoft.Xna.Framework.Content.ContentManager.RootDirectory
- uid: Microsoft.Xna.Framework.Content.ContentManager.ServiceProvider
  commentId: P:Microsoft.Xna.Framework.Content.ContentManager.ServiceProvider
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: false
  name: ServiceProvider
  nameWithType: ContentManager.ServiceProvider
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ServiceProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
  isExternal: true
  name: ReloadAsset<T>(String, T)
  nameWithType: ContentManager.ReloadAsset<T>(String, T)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset<T>(System.String, T)
  nameWithType.vb: ContentManager.ReloadAsset(Of T)(String, T)
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset(Of T)(System.String, T)
  name.vb: ReloadAsset(Of T)(String, T)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
    name: ReloadAsset<T>
    nameWithType: ContentManager.ReloadAsset<T>
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset``1(System.String,``0)
    name: ReloadAsset(Of T)
    nameWithType: ContentManager.ReloadAsset(Of T)
    fullName: Microsoft.Xna.Framework.Content.ContentManager.ReloadAsset(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ResourceContentManager.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Content.ResourceContentManager.#ctor
  isExternal: false
  name: ResourceContentManager
  nameWithType: ResourceContentManager.ResourceContentManager
  fullName: Microsoft.Xna.Framework.Content.ResourceContentManager.ResourceContentManager
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Resources.ResourceManager
  commentId: T:System.Resources.ResourceManager
  parent: System.Resources
  isExternal: true
  name: ResourceManager
  nameWithType: ResourceManager
  fullName: System.Resources.ResourceManager
- uid: System.Resources
  commentId: N:System.Resources
  isExternal: false
  name: System.Resources
  nameWithType: System.Resources
  fullName: System.Resources
- uid: Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  name: OpenStream(String)
  nameWithType: ContentManager.OpenStream(String)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
    name: OpenStream
    nameWithType: ContentManager.OpenStream
    fullName: Microsoft.Xna.Framework.Content.ContentManager.OpenStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.OpenStream(System.String)
    name: OpenStream
    nameWithType: ContentManager.OpenStream
    fullName: Microsoft.Xna.Framework.Content.ContentManager.OpenStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ResourceContentManager.OpenStream*
  commentId: Overload:Microsoft.Xna.Framework.Content.ResourceContentManager.OpenStream
  isExternal: false
  name: OpenStream
  nameWithType: ResourceContentManager.OpenStream
  fullName: Microsoft.Xna.Framework.Content.ResourceContentManager.OpenStream
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
