### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.IDrawable
  commentId: T:Microsoft.Xna.Framework.IDrawable
  id: IDrawable
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.IDrawable.Draw(Microsoft.Xna.Framework.GameTime)
  - Microsoft.Xna.Framework.IDrawable.DrawOrder
  - Microsoft.Xna.Framework.IDrawable.DrawOrderChanged
  - Microsoft.Xna.Framework.IDrawable.Visible
  - Microsoft.Xna.Framework.IDrawable.VisibleChanged
  langs:
  - csharp
  - vb
  name: IDrawable
  nameWithType: IDrawable
  fullName: Microsoft.Xna.Framework.IDrawable
  type: Interface
  source:
    remote:
      path: MonoGame.Framework/IDrawable.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IDrawable
    path: ../MonoGame.Framework/IDrawable.cs
    startLine: 8
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public interface IDrawable
    content.vb: Public Interface IDrawable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Xna.Framework.IDrawable.DrawOrder
  commentId: P:Microsoft.Xna.Framework.IDrawable.DrawOrder
  id: DrawOrder
  parent: Microsoft.Xna.Framework.IDrawable
  langs:
  - csharp
  - vb
  name: DrawOrder
  nameWithType: IDrawable.DrawOrder
  fullName: Microsoft.Xna.Framework.IDrawable.DrawOrder
  type: Property
  source:
    remote:
      path: MonoGame.Framework/IDrawable.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DrawOrder
    path: ../MonoGame.Framework/IDrawable.cs
    startLine: 10
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: int DrawOrder { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property DrawOrder As Integer
  overload: Microsoft.Xna.Framework.IDrawable.DrawOrder*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Xna.Framework.IDrawable.Visible
  commentId: P:Microsoft.Xna.Framework.IDrawable.Visible
  id: Visible
  parent: Microsoft.Xna.Framework.IDrawable
  langs:
  - csharp
  - vb
  name: Visible
  nameWithType: IDrawable.Visible
  fullName: Microsoft.Xna.Framework.IDrawable.Visible
  type: Property
  source:
    remote:
      path: MonoGame.Framework/IDrawable.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Visible
    path: ../MonoGame.Framework/IDrawable.cs
    startLine: 11
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: bool Visible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Visible As Boolean
  overload: Microsoft.Xna.Framework.IDrawable.Visible*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Xna.Framework.IDrawable.DrawOrderChanged
  commentId: E:Microsoft.Xna.Framework.IDrawable.DrawOrderChanged
  id: DrawOrderChanged
  parent: Microsoft.Xna.Framework.IDrawable
  langs:
  - csharp
  - vb
  name: DrawOrderChanged
  nameWithType: IDrawable.DrawOrderChanged
  fullName: Microsoft.Xna.Framework.IDrawable.DrawOrderChanged
  type: Event
  source:
    remote:
      path: MonoGame.Framework/IDrawable.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DrawOrderChanged
    path: ../MonoGame.Framework/IDrawable.cs
    startLine: 13
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: event EventHandler<EventArgs> DrawOrderChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Event DrawOrderChanged As EventHandler(Of EventArgs)
- uid: Microsoft.Xna.Framework.IDrawable.VisibleChanged
  commentId: E:Microsoft.Xna.Framework.IDrawable.VisibleChanged
  id: VisibleChanged
  parent: Microsoft.Xna.Framework.IDrawable
  langs:
  - csharp
  - vb
  name: VisibleChanged
  nameWithType: IDrawable.VisibleChanged
  fullName: Microsoft.Xna.Framework.IDrawable.VisibleChanged
  type: Event
  source:
    remote:
      path: MonoGame.Framework/IDrawable.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: VisibleChanged
    path: ../MonoGame.Framework/IDrawable.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: event EventHandler<EventArgs> VisibleChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Event VisibleChanged As EventHandler(Of EventArgs)
- uid: Microsoft.Xna.Framework.IDrawable.Draw(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.IDrawable.Draw(Microsoft.Xna.Framework.GameTime)
  id: Draw(Microsoft.Xna.Framework.GameTime)
  parent: Microsoft.Xna.Framework.IDrawable
  langs:
  - csharp
  - vb
  name: Draw(GameTime)
  nameWithType: IDrawable.Draw(GameTime)
  fullName: Microsoft.Xna.Framework.IDrawable.Draw(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/IDrawable.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Draw
    path: ../MonoGame.Framework/IDrawable.cs
    startLine: 16
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: void Draw(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Sub Draw(gameTime As GameTime)
  overload: Microsoft.Xna.Framework.IDrawable.Draw*
references:
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.IDrawable.DrawOrder*
  commentId: Overload:Microsoft.Xna.Framework.IDrawable.DrawOrder
  isExternal: false
  name: DrawOrder
  nameWithType: IDrawable.DrawOrder
  fullName: Microsoft.Xna.Framework.IDrawable.DrawOrder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.IDrawable.Visible*
  commentId: Overload:Microsoft.Xna.Framework.IDrawable.Visible
  isExternal: false
  name: Visible
  nameWithType: IDrawable.Visible
  fullName: Microsoft.Xna.Framework.IDrawable.Visible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.IDrawable.Draw*
  commentId: Overload:Microsoft.Xna.Framework.IDrawable.Draw
  isExternal: false
  name: Draw
  nameWithType: IDrawable.Draw
  fullName: Microsoft.Xna.Framework.IDrawable.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
