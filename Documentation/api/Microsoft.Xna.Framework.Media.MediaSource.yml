### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Media.MediaSource
  commentId: T:Microsoft.Xna.Framework.Media.MediaSource
  id: MediaSource
  parent: Microsoft.Xna.Framework.Media
  children:
  - Microsoft.Xna.Framework.Media.MediaSource.GetAvailableMediaSources
  - Microsoft.Xna.Framework.Media.MediaSource.MediaSourceType
  - Microsoft.Xna.Framework.Media.MediaSource.Name
  langs:
  - csharp
  - vb
  name: MediaSource
  nameWithType: MediaSource
  fullName: Microsoft.Xna.Framework.Media.MediaSource
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Media/MediaSource.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: MediaSource
    path: ../MonoGame.Framework/Media/MediaSource.cs
    startLine: 12
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: public sealed class MediaSource
    content.vb: Public NotInheritable Class MediaSource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Xna.Framework.Media.MediaSource.MediaSourceType
  commentId: P:Microsoft.Xna.Framework.Media.MediaSource.MediaSourceType
  id: MediaSourceType
  parent: Microsoft.Xna.Framework.Media.MediaSource
  langs:
  - csharp
  - vb
  name: MediaSourceType
  nameWithType: MediaSource.MediaSourceType
  fullName: Microsoft.Xna.Framework.Media.MediaSource.MediaSourceType
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/MediaSource.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: MediaSourceType
    path: ../MonoGame.Framework/Media/MediaSource.cs
    startLine: 22
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: public MediaSourceType MediaSourceType { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Media.MediaSourceType
    content.vb: Public ReadOnly Property MediaSourceType As MediaSourceType
  overload: Microsoft.Xna.Framework.Media.MediaSource.MediaSourceType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.MediaSource.Name
  commentId: P:Microsoft.Xna.Framework.Media.MediaSource.Name
  id: Name
  parent: Microsoft.Xna.Framework.Media.MediaSource
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MediaSource.Name
  fullName: Microsoft.Xna.Framework.Media.MediaSource.Name
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/MediaSource.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Name
    path: ../MonoGame.Framework/Media/MediaSource.cs
    startLine: 30
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Microsoft.Xna.Framework.Media.MediaSource.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.MediaSource.GetAvailableMediaSources
  commentId: M:Microsoft.Xna.Framework.Media.MediaSource.GetAvailableMediaSources
  id: GetAvailableMediaSources
  parent: Microsoft.Xna.Framework.Media.MediaSource
  langs:
  - csharp
  - vb
  name: GetAvailableMediaSources()
  nameWithType: MediaSource.GetAvailableMediaSources()
  fullName: Microsoft.Xna.Framework.Media.MediaSource.GetAvailableMediaSources()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/MediaSource.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetAvailableMediaSources
    path: ../MonoGame.Framework/Media/MediaSource.cs
    startLine: 38
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: public static IList<MediaSource> GetAvailableMediaSources()
    return:
      type: System.Collections.Generic.IList{Microsoft.Xna.Framework.Media.MediaSource}
    content.vb: Public Shared Function GetAvailableMediaSources As IList(Of MediaSource)
  overload: Microsoft.Xna.Framework.Media.MediaSource.GetAvailableMediaSources*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Xna.Framework.Media
  commentId: N:Microsoft.Xna.Framework.Media
  isExternal: false
  name: Microsoft.Xna.Framework.Media
  nameWithType: Microsoft.Xna.Framework.Media
  fullName: Microsoft.Xna.Framework.Media
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Media.MediaSource.MediaSourceType*
  commentId: Overload:Microsoft.Xna.Framework.Media.MediaSource.MediaSourceType
  isExternal: false
  name: MediaSourceType
  nameWithType: MediaSource.MediaSourceType
  fullName: Microsoft.Xna.Framework.Media.MediaSource.MediaSourceType
- uid: Microsoft.Xna.Framework.Media.MediaSourceType
  commentId: T:Microsoft.Xna.Framework.Media.MediaSourceType
  parent: Microsoft.Xna.Framework.Media
  isExternal: false
  name: MediaSourceType
  nameWithType: MediaSourceType
  fullName: Microsoft.Xna.Framework.Media.MediaSourceType
- uid: Microsoft.Xna.Framework.Media.MediaSource.Name*
  commentId: Overload:Microsoft.Xna.Framework.Media.MediaSource.Name
  isExternal: false
  name: Name
  nameWithType: MediaSource.Name
  fullName: Microsoft.Xna.Framework.Media.MediaSource.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Media.MediaSource.GetAvailableMediaSources*
  commentId: Overload:Microsoft.Xna.Framework.Media.MediaSource.GetAvailableMediaSources
  isExternal: false
  name: GetAvailableMediaSources
  nameWithType: MediaSource.GetAvailableMediaSources
  fullName: Microsoft.Xna.Framework.Media.MediaSource.GetAvailableMediaSources
- uid: System.Collections.Generic.IList{Microsoft.Xna.Framework.Media.MediaSource}
  commentId: T:System.Collections.Generic.IList{Microsoft.Xna.Framework.Media.MediaSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MediaSource>
  nameWithType: IList<MediaSource>
  fullName: System.Collections.Generic.IList<Microsoft.Xna.Framework.Media.MediaSource>
  nameWithType.vb: IList(Of MediaSource)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Xna.Framework.Media.MediaSource)
  name.vb: IList(Of MediaSource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Media.MediaSource
    name: MediaSource
    nameWithType: MediaSource
    fullName: Microsoft.Xna.Framework.Media.MediaSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Media.MediaSource
    name: MediaSource
    nameWithType: MediaSource
    fullName: Microsoft.Xna.Framework.Media.MediaSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
