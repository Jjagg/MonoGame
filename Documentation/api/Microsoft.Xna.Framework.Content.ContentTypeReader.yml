### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader
  commentId: T:Microsoft.Xna.Framework.Content.ContentTypeReader
  id: ContentTypeReader
  parent: Microsoft.Xna.Framework.Content
  children:
  - Microsoft.Xna.Framework.Content.ContentTypeReader.#ctor(System.Type)
  - Microsoft.Xna.Framework.Content.ContentTypeReader.CanDeserializeIntoExistingObject
  - Microsoft.Xna.Framework.Content.ContentTypeReader.Initialize(Microsoft.Xna.Framework.Content.ContentTypeReaderManager)
  - Microsoft.Xna.Framework.Content.ContentTypeReader.Read(Microsoft.Xna.Framework.Content.ContentReader,System.Object)
  - Microsoft.Xna.Framework.Content.ContentTypeReader.TargetType
  - Microsoft.Xna.Framework.Content.ContentTypeReader.TypeVersion
  langs:
  - csharp
  - vb
  name: ContentTypeReader
  nameWithType: ContentTypeReader
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReader.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ContentTypeReader
    path: ../MonoGame.Framework/Content/ContentTypeReader.cs
    startLine: 9
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: public abstract class ContentTypeReader
    content.vb: Public MustInherit Class ContentTypeReader
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Xna.Framework.Content.ContentTypeReader`1
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.CanDeserializeIntoExistingObject
  commentId: P:Microsoft.Xna.Framework.Content.ContentTypeReader.CanDeserializeIntoExistingObject
  id: CanDeserializeIntoExistingObject
  parent: Microsoft.Xna.Framework.Content.ContentTypeReader
  langs:
  - csharp
  - vb
  name: CanDeserializeIntoExistingObject
  nameWithType: ContentTypeReader.CanDeserializeIntoExistingObject
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.CanDeserializeIntoExistingObject
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReader.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CanDeserializeIntoExistingObject
    path: ../MonoGame.Framework/Content/ContentTypeReader.cs
    startLine: 13
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: public virtual bool CanDeserializeIntoExistingObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property CanDeserializeIntoExistingObject As Boolean
  overload: Microsoft.Xna.Framework.Content.ContentTypeReader.CanDeserializeIntoExistingObject*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.TargetType
  commentId: P:Microsoft.Xna.Framework.Content.ContentTypeReader.TargetType
  id: TargetType
  parent: Microsoft.Xna.Framework.Content.ContentTypeReader
  langs:
  - csharp
  - vb
  name: TargetType
  nameWithType: ContentTypeReader.TargetType
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.TargetType
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReader.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TargetType
    path: ../MonoGame.Framework/Content/ContentTypeReader.cs
    startLine: 18
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: public Type TargetType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property TargetType As Type
  overload: Microsoft.Xna.Framework.Content.ContentTypeReader.TargetType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.TypeVersion
  commentId: P:Microsoft.Xna.Framework.Content.ContentTypeReader.TypeVersion
  id: TypeVersion
  parent: Microsoft.Xna.Framework.Content.ContentTypeReader
  langs:
  - csharp
  - vb
  name: TypeVersion
  nameWithType: ContentTypeReader.TypeVersion
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.TypeVersion
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReader.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TypeVersion
    path: ../MonoGame.Framework/Content/ContentTypeReader.cs
    startLine: 23
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: public virtual int TypeVersion { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property TypeVersion As Integer
  overload: Microsoft.Xna.Framework.Content.ContentTypeReader.TypeVersion*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.#ctor(System.Type)
  commentId: M:Microsoft.Xna.Framework.Content.ContentTypeReader.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: Microsoft.Xna.Framework.Content.ContentTypeReader
  langs:
  - csharp
  - vb
  name: ContentTypeReader(Type)
  nameWithType: ContentTypeReader.ContentTypeReader(Type)
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.ContentTypeReader(System.Type)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReader.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Content/ContentTypeReader.cs
    startLine: 28
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: protected ContentTypeReader(Type targetType)
    parameters:
    - id: targetType
      type: System.Type
    content.vb: Protected Sub New(targetType As Type)
  overload: Microsoft.Xna.Framework.Content.ContentTypeReader.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.Initialize(Microsoft.Xna.Framework.Content.ContentTypeReaderManager)
  commentId: M:Microsoft.Xna.Framework.Content.ContentTypeReader.Initialize(Microsoft.Xna.Framework.Content.ContentTypeReaderManager)
  id: Initialize(Microsoft.Xna.Framework.Content.ContentTypeReaderManager)
  parent: Microsoft.Xna.Framework.Content.ContentTypeReader
  langs:
  - csharp
  - vb
  name: Initialize(ContentTypeReaderManager)
  nameWithType: ContentTypeReader.Initialize(ContentTypeReaderManager)
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.Initialize(Microsoft.Xna.Framework.Content.ContentTypeReaderManager)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReader.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Initialize
    path: ../MonoGame.Framework/Content/ContentTypeReader.cs
    startLine: 33
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: protected virtual void Initialize(ContentTypeReaderManager manager)
    parameters:
    - id: manager
      type: Microsoft.Xna.Framework.Content.ContentTypeReaderManager
    content.vb: Protected Overridable Sub Initialize(manager As ContentTypeReaderManager)
  overload: Microsoft.Xna.Framework.Content.ContentTypeReader.Initialize*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.Read(Microsoft.Xna.Framework.Content.ContentReader,System.Object)
  commentId: M:Microsoft.Xna.Framework.Content.ContentTypeReader.Read(Microsoft.Xna.Framework.Content.ContentReader,System.Object)
  id: Read(Microsoft.Xna.Framework.Content.ContentReader,System.Object)
  parent: Microsoft.Xna.Framework.Content.ContentTypeReader
  langs:
  - csharp
  - vb
  name: Read(ContentReader, Object)
  nameWithType: ContentTypeReader.Read(ContentReader, Object)
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.Read(Microsoft.Xna.Framework.Content.ContentReader, System.Object)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReader.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Read
    path: ../MonoGame.Framework/Content/ContentTypeReader.cs
    startLine: 38
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: protected abstract object Read(ContentReader input, object existingInstance)
    parameters:
    - id: input
      type: Microsoft.Xna.Framework.Content.ContentReader
    - id: existingInstance
      type: System.Object
    return:
      type: System.Object
    content.vb: Protected MustOverride Function Read(input As ContentReader, existingInstance As Object) As Object
  overload: Microsoft.Xna.Framework.Content.ContentTypeReader.Read*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: Microsoft.Xna.Framework.Content
  commentId: N:Microsoft.Xna.Framework.Content
  isExternal: false
  name: Microsoft.Xna.Framework.Content
  nameWithType: Microsoft.Xna.Framework.Content
  fullName: Microsoft.Xna.Framework.Content
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.CanDeserializeIntoExistingObject*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReader.CanDeserializeIntoExistingObject
  isExternal: false
  name: CanDeserializeIntoExistingObject
  nameWithType: ContentTypeReader.CanDeserializeIntoExistingObject
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.CanDeserializeIntoExistingObject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.TargetType*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReader.TargetType
  isExternal: false
  name: TargetType
  nameWithType: ContentTypeReader.TargetType
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.TargetType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.TypeVersion*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReader.TypeVersion
  isExternal: false
  name: TypeVersion
  nameWithType: ContentTypeReader.TypeVersion
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.TypeVersion
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReader.#ctor
  isExternal: false
  name: ContentTypeReader
  nameWithType: ContentTypeReader.ContentTypeReader
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.ContentTypeReader
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.Initialize*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReader.Initialize
  isExternal: false
  name: Initialize
  nameWithType: ContentTypeReader.Initialize
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.Initialize
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager
  commentId: T:Microsoft.Xna.Framework.Content.ContentTypeReaderManager
  parent: Microsoft.Xna.Framework.Content
  isExternal: false
  name: ContentTypeReaderManager
  nameWithType: ContentTypeReaderManager
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader.Read*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReader.Read
  isExternal: false
  name: Read
  nameWithType: ContentTypeReader.Read
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader.Read
- uid: Microsoft.Xna.Framework.Content.ContentReader
  commentId: T:Microsoft.Xna.Framework.Content.ContentReader
  parent: Microsoft.Xna.Framework.Content
  isExternal: false
  name: ContentReader
  nameWithType: ContentReader
  fullName: Microsoft.Xna.Framework.Content.ContentReader
