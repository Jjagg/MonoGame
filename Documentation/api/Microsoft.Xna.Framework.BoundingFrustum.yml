### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.BoundingFrustum
  commentId: T:Microsoft.Xna.Framework.BoundingFrustum
  id: BoundingFrustum
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.BoundingFrustum.#ctor(Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.BoundingFrustum.Bottom
  - Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox)
  - Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.ContainmentType@)
  - Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingFrustum)
  - Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere)
  - Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.ContainmentType@)
  - Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3)
  - Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.ContainmentType@)
  - Microsoft.Xna.Framework.BoundingFrustum.CornerCount
  - Microsoft.Xna.Framework.BoundingFrustum.Equals(Microsoft.Xna.Framework.BoundingFrustum)
  - Microsoft.Xna.Framework.BoundingFrustum.Equals(System.Object)
  - Microsoft.Xna.Framework.BoundingFrustum.Far
  - Microsoft.Xna.Framework.BoundingFrustum.GetCorners
  - Microsoft.Xna.Framework.BoundingFrustum.GetCorners(Microsoft.Xna.Framework.Vector3[])
  - Microsoft.Xna.Framework.BoundingFrustum.GetHashCode
  - Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox)
  - Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox@,System.Boolean@)
  - Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingFrustum)
  - Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere)
  - Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere@,System.Boolean@)
  - Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane)
  - Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.PlaneIntersectionType@)
  - Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray)
  - Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray@,System.Nullable{System.Single}@)
  - Microsoft.Xna.Framework.BoundingFrustum.Left
  - Microsoft.Xna.Framework.BoundingFrustum.Matrix
  - Microsoft.Xna.Framework.BoundingFrustum.Near
  - Microsoft.Xna.Framework.BoundingFrustum.op_Equality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)
  - Microsoft.Xna.Framework.BoundingFrustum.op_Inequality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)
  - Microsoft.Xna.Framework.BoundingFrustum.PlaneCount
  - Microsoft.Xna.Framework.BoundingFrustum.Right
  - Microsoft.Xna.Framework.BoundingFrustum.Top
  - Microsoft.Xna.Framework.BoundingFrustum.ToString
  langs:
  - csharp
  - vb
  name: BoundingFrustum
  nameWithType: BoundingFrustum
  fullName: Microsoft.Xna.Framework.BoundingFrustum
  type: Class
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: BoundingFrustum
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 12
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDefines a viewing frustum for intersection operations.\n"
  example: []
  syntax:
    content: 'public class BoundingFrustum : IEquatable<BoundingFrustum>'
    content.vb: >-
      Public Class BoundingFrustum
          Implements IEquatable(Of BoundingFrustum)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Microsoft.Xna.Framework.BoundingFrustum}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.BoundingFrustum.PlaneCount
  commentId: F:Microsoft.Xna.Framework.BoundingFrustum.PlaneCount
  id: PlaneCount
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: PlaneCount
  nameWithType: BoundingFrustum.PlaneCount
  fullName: Microsoft.Xna.Framework.BoundingFrustum.PlaneCount
  type: Field
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PlaneCount
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 28
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe number of planes in the frustum.\n"
  example: []
  syntax:
    content: public const int PlaneCount = 6
    return:
      type: System.Int32
    content.vb: Public Const PlaneCount As Integer = 6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.BoundingFrustum.CornerCount
  commentId: F:Microsoft.Xna.Framework.BoundingFrustum.CornerCount
  id: CornerCount
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: CornerCount
  nameWithType: BoundingFrustum.CornerCount
  fullName: Microsoft.Xna.Framework.BoundingFrustum.CornerCount
  type: Field
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CornerCount
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 33
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe number of corner points in the frustum.\n"
  example: []
  syntax:
    content: public const int CornerCount = 8
    return:
      type: System.Int32
    content.vb: Public Const CornerCount As Integer = 8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.BoundingFrustum.Matrix
  commentId: P:Microsoft.Xna.Framework.BoundingFrustum.Matrix
  id: Matrix
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Matrix
  nameWithType: BoundingFrustum.Matrix
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Matrix
  type: Property
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Matrix
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 42
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets or sets the <xref href=\"Microsoft.Xna.Framework.BoundingFrustum.Matrix\" data-throw-if-not-resolved=\"false\"></xref> of the frustum.\n"
  example: []
  syntax:
    content: public Matrix Matrix { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Property Matrix As Matrix
  overload: Microsoft.Xna.Framework.BoundingFrustum.Matrix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Near
  commentId: P:Microsoft.Xna.Framework.BoundingFrustum.Near
  id: Near
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Near
  nameWithType: BoundingFrustum.Near
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Near
  type: Property
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Near
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 56
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the near plane of the frustum.\n"
  example: []
  syntax:
    content: public Plane Near { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Plane
    content.vb: Public ReadOnly Property Near As Plane
  overload: Microsoft.Xna.Framework.BoundingFrustum.Near*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.BoundingFrustum.Far
  commentId: P:Microsoft.Xna.Framework.BoundingFrustum.Far
  id: Far
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Far
  nameWithType: BoundingFrustum.Far
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Far
  type: Property
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Far
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 64
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the far plane of the frustum.\n"
  example: []
  syntax:
    content: public Plane Far { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Plane
    content.vb: Public ReadOnly Property Far As Plane
  overload: Microsoft.Xna.Framework.BoundingFrustum.Far*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.BoundingFrustum.Left
  commentId: P:Microsoft.Xna.Framework.BoundingFrustum.Left
  id: Left
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: BoundingFrustum.Left
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Left
  type: Property
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Left
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 72
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the left plane of the frustum.\n"
  example: []
  syntax:
    content: public Plane Left { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Plane
    content.vb: Public ReadOnly Property Left As Plane
  overload: Microsoft.Xna.Framework.BoundingFrustum.Left*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.BoundingFrustum.Right
  commentId: P:Microsoft.Xna.Framework.BoundingFrustum.Right
  id: Right
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: BoundingFrustum.Right
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Right
  type: Property
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Right
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 80
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the right plane of the frustum.\n"
  example: []
  syntax:
    content: public Plane Right { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Plane
    content.vb: Public ReadOnly Property Right As Plane
  overload: Microsoft.Xna.Framework.BoundingFrustum.Right*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.BoundingFrustum.Top
  commentId: P:Microsoft.Xna.Framework.BoundingFrustum.Top
  id: Top
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: BoundingFrustum.Top
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Top
  type: Property
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Top
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 88
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the top plane of the frustum.\n"
  example: []
  syntax:
    content: public Plane Top { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Plane
    content.vb: Public ReadOnly Property Top As Plane
  overload: Microsoft.Xna.Framework.BoundingFrustum.Top*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.BoundingFrustum.Bottom
  commentId: P:Microsoft.Xna.Framework.BoundingFrustum.Bottom
  id: Bottom
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: BoundingFrustum.Bottom
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Bottom
  type: Property
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Bottom
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 96
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the bottom plane of the frustum.\n"
  example: []
  syntax:
    content: public Plane Bottom { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Plane
    content.vb: Public ReadOnly Property Bottom As Plane
  overload: Microsoft.Xna.Framework.BoundingFrustum.Bottom*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.BoundingFrustum.#ctor(Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.#ctor(Microsoft.Xna.Framework.Matrix)
  id: '#ctor(Microsoft.Xna.Framework.Matrix)'
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: BoundingFrustum(Matrix)
  nameWithType: BoundingFrustum.BoundingFrustum(Matrix)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.BoundingFrustum(Microsoft.Xna.Framework.Matrix)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 128
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nConstructs the frustum by extracting the view planes from a matrix.\n"
  example: []
  syntax:
    content: public BoundingFrustum(Matrix value)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Matrix
      description: Combined matrix which usually is (View * Projection).
    content.vb: Public Sub New(value As Matrix)
  overload: Microsoft.Xna.Framework.BoundingFrustum.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.op_Equality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.op_Equality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)
  id: op_Equality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Equality(BoundingFrustum, BoundingFrustum)
  nameWithType: BoundingFrustum.Equality(BoundingFrustum, BoundingFrustum)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Equality(Microsoft.Xna.Framework.BoundingFrustum, Microsoft.Xna.Framework.BoundingFrustum)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Equality
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 145
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether two <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> instances are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(BoundingFrustum a, BoundingFrustum b)
    parameters:
    - id: a
      type: Microsoft.Xna.Framework.BoundingFrustum
      description: <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> instance on the left of the equal sign.
    - id: b
      type: Microsoft.Xna.Framework.BoundingFrustum
      description: <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> instance on the right of the equal sign.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Shared Operator =(a As BoundingFrustum, b As BoundingFrustum) As Boolean
  overload: Microsoft.Xna.Framework.BoundingFrustum.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.BoundingFrustum.op_Inequality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.op_Inequality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)
  id: op_Inequality(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.BoundingFrustum)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Inequality(BoundingFrustum, BoundingFrustum)
  nameWithType: BoundingFrustum.Inequality(BoundingFrustum, BoundingFrustum)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Inequality(Microsoft.Xna.Framework.BoundingFrustum, Microsoft.Xna.Framework.BoundingFrustum)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Inequality
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 162
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether two <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> instances are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(BoundingFrustum a, BoundingFrustum b)
    parameters:
    - id: a
      type: Microsoft.Xna.Framework.BoundingFrustum
      description: <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> instance on the left of the not equal sign.
    - id: b
      type: Microsoft.Xna.Framework.BoundingFrustum
      description: <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> instance on the right of the not equal sign.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are not equal; <code>false</code> otherwise.
    content.vb: Public Shared Operator <>(a As BoundingFrustum, b As BoundingFrustum) As Boolean
  overload: Microsoft.Xna.Framework.BoundingFrustum.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox)
  id: Contains(Microsoft.Xna.Framework.BoundingBox)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Contains(BoundingBox)
  nameWithType: BoundingFrustum.Contains(BoundingBox)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Contains
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 178
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nContainment test between this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> and specified <xref href=\"Microsoft.Xna.Framework.BoundingBox\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ContainmentType Contains(BoundingBox box)
    parameters:
    - id: box
      type: Microsoft.Xna.Framework.BoundingBox
      description: A <xref href="Microsoft.Xna.Framework.BoundingBox" data-throw-if-not-resolved="false"></xref> for testing.
    return:
      type: Microsoft.Xna.Framework.ContainmentType
      description: Result of testing for containment between this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> and specified <xref href="Microsoft.Xna.Framework.BoundingBox" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Contains(box As BoundingBox) As ContainmentType
  overload: Microsoft.Xna.Framework.BoundingFrustum.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.ContainmentType@)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.ContainmentType@)
  id: Contains(Microsoft.Xna.Framework.BoundingBox@,Microsoft.Xna.Framework.ContainmentType@)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Contains(ref BoundingBox, out ContainmentType)
  nameWithType: BoundingFrustum.Contains(ref BoundingBox, out ContainmentType)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Contains(ref Microsoft.Xna.Framework.BoundingBox, out Microsoft.Xna.Framework.ContainmentType)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Contains
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 190
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nContainment test between this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> and specified <xref href=\"Microsoft.Xna.Framework.BoundingBox\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Contains(ref BoundingBox box, out ContainmentType result)
    parameters:
    - id: box
      type: Microsoft.Xna.Framework.BoundingBox
      description: A <xref href="Microsoft.Xna.Framework.BoundingBox" data-throw-if-not-resolved="false"></xref> for testing.
    - id: result
      type: Microsoft.Xna.Framework.ContainmentType
      description: Result of testing for containment between this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> and specified <xref href="Microsoft.Xna.Framework.BoundingBox" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Sub Contains(ByRef box As BoundingBox, ByRef result As ContainmentType)
  overload: Microsoft.Xna.Framework.BoundingFrustum.Contains*
  nameWithType.vb: BoundingFrustum.Contains(ByRef BoundingBox, ByRef ContainmentType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.BoundingFrustum.Contains(ByRef Microsoft.Xna.Framework.BoundingBox, ByRef Microsoft.Xna.Framework.ContainmentType)
  name.vb: Contains(ByRef BoundingBox, ByRef ContainmentType)
- uid: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingFrustum)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingFrustum)
  id: Contains(Microsoft.Xna.Framework.BoundingFrustum)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Contains(BoundingFrustum)
  nameWithType: BoundingFrustum.Contains(BoundingFrustum)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingFrustum)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Contains
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 215
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nContainment test between this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> and specified <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ContainmentType Contains(BoundingFrustum frustum)
    parameters:
    - id: frustum
      type: Microsoft.Xna.Framework.BoundingFrustum
      description: A <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> for testing.
    return:
      type: Microsoft.Xna.Framework.ContainmentType
      description: Result of testing for containment between this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> and specified <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Contains(frustum As BoundingFrustum) As ContainmentType
  overload: Microsoft.Xna.Framework.BoundingFrustum.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere)
  id: Contains(Microsoft.Xna.Framework.BoundingSphere)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Contains(BoundingSphere)
  nameWithType: BoundingFrustum.Contains(BoundingSphere)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Contains
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 242
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nContainment test between this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> and specified <xref href=\"Microsoft.Xna.Framework.BoundingSphere\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ContainmentType Contains(BoundingSphere sphere)
    parameters:
    - id: sphere
      type: Microsoft.Xna.Framework.BoundingSphere
      description: A <xref href="Microsoft.Xna.Framework.BoundingSphere" data-throw-if-not-resolved="false"></xref> for testing.
    return:
      type: Microsoft.Xna.Framework.ContainmentType
      description: Result of testing for containment between this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> and specified <xref href="Microsoft.Xna.Framework.BoundingSphere" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Contains(sphere As BoundingSphere) As ContainmentType
  overload: Microsoft.Xna.Framework.BoundingFrustum.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.ContainmentType@)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.ContainmentType@)
  id: Contains(Microsoft.Xna.Framework.BoundingSphere@,Microsoft.Xna.Framework.ContainmentType@)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Contains(ref BoundingSphere, out ContainmentType)
  nameWithType: BoundingFrustum.Contains(ref BoundingSphere, out ContainmentType)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Contains(ref Microsoft.Xna.Framework.BoundingSphere, out Microsoft.Xna.Framework.ContainmentType)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Contains
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 254
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nContainment test between this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> and specified <xref href=\"Microsoft.Xna.Framework.BoundingSphere\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Contains(ref BoundingSphere sphere, out ContainmentType result)
    parameters:
    - id: sphere
      type: Microsoft.Xna.Framework.BoundingSphere
      description: A <xref href="Microsoft.Xna.Framework.BoundingSphere" data-throw-if-not-resolved="false"></xref> for testing.
    - id: result
      type: Microsoft.Xna.Framework.ContainmentType
      description: Result of testing for containment between this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> and specified <xref href="Microsoft.Xna.Framework.BoundingSphere" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Sub Contains(ByRef sphere As BoundingSphere, ByRef result As ContainmentType)
  overload: Microsoft.Xna.Framework.BoundingFrustum.Contains*
  nameWithType.vb: BoundingFrustum.Contains(ByRef BoundingSphere, ByRef ContainmentType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.BoundingFrustum.Contains(ByRef Microsoft.Xna.Framework.BoundingSphere, ByRef Microsoft.Xna.Framework.ContainmentType)
  name.vb: Contains(ByRef BoundingSphere, ByRef ContainmentType)
- uid: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3)
  id: Contains(Microsoft.Xna.Framework.Vector3)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Contains(Vector3)
  nameWithType: BoundingFrustum.Contains(Vector3)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Contains
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 281
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nContainment test between this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> and specified <xref href=\"Microsoft.Xna.Framework.Vector3\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ContainmentType Contains(Vector3 point)
    parameters:
    - id: point
      type: Microsoft.Xna.Framework.Vector3
      description: A <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref> for testing.
    return:
      type: Microsoft.Xna.Framework.ContainmentType
      description: Result of testing for containment between this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> and specified <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Contains(point As Vector3) As ContainmentType
  overload: Microsoft.Xna.Framework.BoundingFrustum.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.ContainmentType@)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Contains(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.ContainmentType@)
  id: Contains(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.ContainmentType@)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Contains(ref Vector3, out ContainmentType)
  nameWithType: BoundingFrustum.Contains(ref Vector3, out ContainmentType)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Contains(ref Microsoft.Xna.Framework.Vector3, out Microsoft.Xna.Framework.ContainmentType)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Contains
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 293
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nContainment test between this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> and specified <xref href=\"Microsoft.Xna.Framework.Vector3\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Contains(ref Vector3 point, out ContainmentType result)
    parameters:
    - id: point
      type: Microsoft.Xna.Framework.Vector3
      description: A <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref> for testing.
    - id: result
      type: Microsoft.Xna.Framework.ContainmentType
      description: Result of testing for containment between this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> and specified <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Sub Contains(ByRef point As Vector3, ByRef result As ContainmentType)
  overload: Microsoft.Xna.Framework.BoundingFrustum.Contains*
  nameWithType.vb: BoundingFrustum.Contains(ByRef Vector3, ByRef ContainmentType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.BoundingFrustum.Contains(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.ContainmentType)
  name.vb: Contains(ByRef Vector3, ByRef ContainmentType)
- uid: Microsoft.Xna.Framework.BoundingFrustum.Equals(Microsoft.Xna.Framework.BoundingFrustum)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Equals(Microsoft.Xna.Framework.BoundingFrustum)
  id: Equals(Microsoft.Xna.Framework.BoundingFrustum)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Equals(BoundingFrustum)
  nameWithType: BoundingFrustum.Equals(BoundingFrustum)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Equals(Microsoft.Xna.Framework.BoundingFrustum)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 314
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether current instance is equal to specified <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Equals(BoundingFrustum other)
    parameters:
    - id: other
      type: Microsoft.Xna.Framework.BoundingFrustum
      description: The <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Function Equals(other As BoundingFrustum) As Boolean
  overload: Microsoft.Xna.Framework.BoundingFrustum.Equals*
  implements:
  - System.IEquatable{Microsoft.Xna.Framework.BoundingFrustum}.Equals(Microsoft.Xna.Framework.BoundingFrustum)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Equals(System.Object)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BoundingFrustum.Equals(Object)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Equals(System.Object)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 324
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether current instance is equal to specified <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Xna.Framework.BoundingFrustum.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.BoundingFrustum.GetCorners
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.GetCorners
  id: GetCorners
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: GetCorners()
  nameWithType: BoundingFrustum.GetCorners()
  fullName: Microsoft.Xna.Framework.BoundingFrustum.GetCorners()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetCorners
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 333
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a copy of internal corners array.\n"
  example: []
  syntax:
    content: public Vector3[] GetCorners()
    return:
      type: Microsoft.Xna.Framework.Vector3[]
      description: The array of corners.
    content.vb: Public Function GetCorners As Vector3()
  overload: Microsoft.Xna.Framework.BoundingFrustum.GetCorners*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.GetCorners(Microsoft.Xna.Framework.Vector3[])
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.GetCorners(Microsoft.Xna.Framework.Vector3[])
  id: GetCorners(Microsoft.Xna.Framework.Vector3[])
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: GetCorners(Vector3[])
  nameWithType: BoundingFrustum.GetCorners(Vector3[])
  fullName: Microsoft.Xna.Framework.BoundingFrustum.GetCorners(Microsoft.Xna.Framework.Vector3[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetCorners
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 342
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a copy of internal corners array.\n"
  example: []
  syntax:
    content: public void GetCorners(Vector3[] corners)
    parameters:
    - id: corners
      type: Microsoft.Xna.Framework.Vector3[]
      description: The array which values will be replaced to corner values of this instance. It must have size of <xref href="Microsoft.Xna.Framework.BoundingFrustum.CornerCount" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub GetCorners(corners As Vector3())
  overload: Microsoft.Xna.Framework.BoundingFrustum.GetCorners*
  nameWithType.vb: BoundingFrustum.GetCorners(Vector3())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.BoundingFrustum.GetCorners(Microsoft.Xna.Framework.Vector3())
  name.vb: GetCorners(Vector3())
- uid: Microsoft.Xna.Framework.BoundingFrustum.GetHashCode
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.GetHashCode
  id: GetHashCode
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BoundingFrustum.GetHashCode()
  fullName: Microsoft.Xna.Framework.BoundingFrustum.GetHashCode()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetHashCode
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 354
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the hash code of this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Hash code of this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Microsoft.Xna.Framework.BoundingFrustum.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox)
  id: Intersects(Microsoft.Xna.Framework.BoundingBox)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Intersects(BoundingBox)
  nameWithType: BoundingFrustum.Intersects(BoundingBox)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Intersects
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 364
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets whether or not a specified <xref href=\"Microsoft.Xna.Framework.BoundingBox\" data-throw-if-not-resolved=\"false\"></xref> intersects with this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Intersects(BoundingBox box)
    parameters:
    - id: box
      type: Microsoft.Xna.Framework.BoundingBox
      description: A <xref href="Microsoft.Xna.Framework.BoundingBox" data-throw-if-not-resolved="false"></xref> for intersection test.
    return:
      type: System.Boolean
      description: <code>true</code> if specified <xref href="Microsoft.Xna.Framework.BoundingBox" data-throw-if-not-resolved="false"></xref> intersects with this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref>; <code>false</code> otherwise.
    content.vb: Public Function Intersects(box As BoundingBox) As Boolean
  overload: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox@,System.Boolean@)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingBox@,System.Boolean@)
  id: Intersects(Microsoft.Xna.Framework.BoundingBox@,System.Boolean@)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Intersects(ref BoundingBox, out Boolean)
  nameWithType: BoundingFrustum.Intersects(ref BoundingBox, out Boolean)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects(ref Microsoft.Xna.Framework.BoundingBox, out System.Boolean)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Intersects
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 376
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets whether or not a specified <xref href=\"Microsoft.Xna.Framework.BoundingBox\" data-throw-if-not-resolved=\"false\"></xref> intersects with this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Intersects(ref BoundingBox box, out bool result)
    parameters:
    - id: box
      type: Microsoft.Xna.Framework.BoundingBox
      description: A <xref href="Microsoft.Xna.Framework.BoundingBox" data-throw-if-not-resolved="false"></xref> for intersection test.
    - id: result
      type: System.Boolean
      description: <code>true</code> if specified <xref href="Microsoft.Xna.Framework.BoundingBox" data-throw-if-not-resolved="false"></xref> intersects with this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref>; <code>false</code> otherwise as an output parameter.
    content.vb: Public Sub Intersects(ByRef box As BoundingBox, ByRef result As Boolean)
  overload: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  nameWithType.vb: BoundingFrustum.Intersects(ByRef BoundingBox, ByRef Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.BoundingFrustum.Intersects(ByRef Microsoft.Xna.Framework.BoundingBox, ByRef System.Boolean)
  name.vb: Intersects(ByRef BoundingBox, ByRef Boolean)
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingFrustum)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingFrustum)
  id: Intersects(Microsoft.Xna.Framework.BoundingFrustum)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Intersects(BoundingFrustum)
  nameWithType: BoundingFrustum.Intersects(BoundingFrustum)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingFrustum)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Intersects
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 388
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets whether or not a specified <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> intersects with this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Intersects(BoundingFrustum frustum)
    parameters:
    - id: frustum
      type: Microsoft.Xna.Framework.BoundingFrustum
      description: An other <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> for intersection test.
    return:
      type: System.Boolean
      description: <code>true</code> if other <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> intersects with this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref>; <code>false</code> otherwise.
    content.vb: Public Function Intersects(frustum As BoundingFrustum) As Boolean
  overload: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere)
  id: Intersects(Microsoft.Xna.Framework.BoundingSphere)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Intersects(BoundingSphere)
  nameWithType: BoundingFrustum.Intersects(BoundingSphere)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Intersects
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 398
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets whether or not a specified <xref href=\"Microsoft.Xna.Framework.BoundingSphere\" data-throw-if-not-resolved=\"false\"></xref> intersects with this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Intersects(BoundingSphere sphere)
    parameters:
    - id: sphere
      type: Microsoft.Xna.Framework.BoundingSphere
      description: A <xref href="Microsoft.Xna.Framework.BoundingSphere" data-throw-if-not-resolved="false"></xref> for intersection test.
    return:
      type: System.Boolean
      description: <code>true</code> if specified <xref href="Microsoft.Xna.Framework.BoundingSphere" data-throw-if-not-resolved="false"></xref> intersects with this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref>; <code>false</code> otherwise.
    content.vb: Public Function Intersects(sphere As BoundingSphere) As Boolean
  overload: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere@,System.Boolean@)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.BoundingSphere@,System.Boolean@)
  id: Intersects(Microsoft.Xna.Framework.BoundingSphere@,System.Boolean@)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Intersects(ref BoundingSphere, out Boolean)
  nameWithType: BoundingFrustum.Intersects(ref BoundingSphere, out Boolean)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects(ref Microsoft.Xna.Framework.BoundingSphere, out System.Boolean)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Intersects
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 410
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets whether or not a specified <xref href=\"Microsoft.Xna.Framework.BoundingSphere\" data-throw-if-not-resolved=\"false\"></xref> intersects with this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Intersects(ref BoundingSphere sphere, out bool result)
    parameters:
    - id: sphere
      type: Microsoft.Xna.Framework.BoundingSphere
      description: A <xref href="Microsoft.Xna.Framework.BoundingSphere" data-throw-if-not-resolved="false"></xref> for intersection test.
    - id: result
      type: System.Boolean
      description: <code>true</code> if specified <xref href="Microsoft.Xna.Framework.BoundingSphere" data-throw-if-not-resolved="false"></xref> intersects with this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref>; <code>false</code> otherwise as an output parameter.
    content.vb: Public Sub Intersects(ByRef sphere As BoundingSphere, ByRef result As Boolean)
  overload: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  nameWithType.vb: BoundingFrustum.Intersects(ByRef BoundingSphere, ByRef Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.BoundingFrustum.Intersects(ByRef Microsoft.Xna.Framework.BoundingSphere, ByRef System.Boolean)
  name.vb: Intersects(ByRef BoundingSphere, ByRef Boolean)
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane)
  id: Intersects(Microsoft.Xna.Framework.Plane)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Intersects(Plane)
  nameWithType: BoundingFrustum.Intersects(Plane)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Intersects
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 422
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets type of intersection between specified <xref href=\"Microsoft.Xna.Framework.Plane\" data-throw-if-not-resolved=\"false\"></xref> and this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public PlaneIntersectionType Intersects(Plane plane)
    parameters:
    - id: plane
      type: Microsoft.Xna.Framework.Plane
      description: A <xref href="Microsoft.Xna.Framework.Plane" data-throw-if-not-resolved="false"></xref> for intersection test.
    return:
      type: Microsoft.Xna.Framework.PlaneIntersectionType
      description: A plane intersection type.
    content.vb: Public Function Intersects(plane As Plane) As PlaneIntersectionType
  overload: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.PlaneIntersectionType@)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.PlaneIntersectionType@)
  id: Intersects(Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.PlaneIntersectionType@)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Intersects(ref Plane, out PlaneIntersectionType)
  nameWithType: BoundingFrustum.Intersects(ref Plane, out PlaneIntersectionType)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects(ref Microsoft.Xna.Framework.Plane, out Microsoft.Xna.Framework.PlaneIntersectionType)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Intersects
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 434
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets type of intersection between specified <xref href=\"Microsoft.Xna.Framework.Plane\" data-throw-if-not-resolved=\"false\"></xref> and this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Intersects(ref Plane plane, out PlaneIntersectionType result)
    parameters:
    - id: plane
      type: Microsoft.Xna.Framework.Plane
      description: A <xref href="Microsoft.Xna.Framework.Plane" data-throw-if-not-resolved="false"></xref> for intersection test.
    - id: result
      type: Microsoft.Xna.Framework.PlaneIntersectionType
      description: A plane intersection type as an output parameter.
    content.vb: Public Sub Intersects(ByRef plane As Plane, ByRef result As PlaneIntersectionType)
  overload: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  nameWithType.vb: BoundingFrustum.Intersects(ByRef Plane, ByRef PlaneIntersectionType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.BoundingFrustum.Intersects(ByRef Microsoft.Xna.Framework.Plane, ByRef Microsoft.Xna.Framework.PlaneIntersectionType)
  name.vb: Intersects(ByRef Plane, ByRef PlaneIntersectionType)
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray)
  id: Intersects(Microsoft.Xna.Framework.Ray)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Intersects(Ray)
  nameWithType: BoundingFrustum.Intersects(Ray)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Intersects
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 447
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the distance of intersection of <xref href=\"Microsoft.Xna.Framework.Ray\" data-throw-if-not-resolved=\"false\"></xref> and this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> or null if no intersection happens.\n"
  example: []
  syntax:
    content: public float ? Intersects(Ray ray)
    parameters:
    - id: ray
      type: Microsoft.Xna.Framework.Ray
      description: A <xref href="Microsoft.Xna.Framework.Ray" data-throw-if-not-resolved="false"></xref> for intersection test.
    return:
      type: System.Nullable{System.Single}
      description: Distance at which ray intersects with this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> or null if no intersection happens.
    content.vb: Public Function Intersects(ray As Ray) As Single?
  overload: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray@,System.Nullable{System.Single}@)
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.Intersects(Microsoft.Xna.Framework.Ray@,System.Nullable{System.Single}@)
  id: Intersects(Microsoft.Xna.Framework.Ray@,System.Nullable{System.Single}@)
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: Intersects(ref Ray, out Nullable<Single>)
  nameWithType: BoundingFrustum.Intersects(ref Ray, out Nullable<Single>)
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects(ref Microsoft.Xna.Framework.Ray, out System.Nullable<System.Single>)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Intersects
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 459
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the distance of intersection of <xref href=\"Microsoft.Xna.Framework.Ray\" data-throw-if-not-resolved=\"false\"></xref> and this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> or null if no intersection happens.\n"
  example: []
  syntax:
    content: public void Intersects(ref Ray ray, out float ? result)
    parameters:
    - id: ray
      type: Microsoft.Xna.Framework.Ray
      description: A <xref href="Microsoft.Xna.Framework.Ray" data-throw-if-not-resolved="false"></xref> for intersection test.
    - id: result
      type: System.Nullable{System.Single}
      description: Distance at which ray intersects with this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref> or null if no intersection happens as an output parameter.
    content.vb: Public Sub Intersects(ByRef ray As Ray, ByRef result As Single?)
  overload: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  nameWithType.vb: BoundingFrustum.Intersects(ByRef Ray, ByRef Nullable(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.BoundingFrustum.Intersects(ByRef Microsoft.Xna.Framework.Ray, ByRef System.Nullable(Of System.Single))
  name.vb: Intersects(ByRef Ray, ByRef Nullable(Of Single))
- uid: Microsoft.Xna.Framework.BoundingFrustum.ToString
  commentId: M:Microsoft.Xna.Framework.BoundingFrustum.ToString
  id: ToString
  parent: Microsoft.Xna.Framework.BoundingFrustum
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BoundingFrustum.ToString()
  fullName: Microsoft.Xna.Framework.BoundingFrustum.ToString()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/BoundingFrustum.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ToString
    path: ../MonoGame.Framework/BoundingFrustum.cs
    startLine: 484
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of this <xref href=\"Microsoft.Xna.Framework.BoundingFrustum\" data-throw-if-not-resolved=\"false\"></xref> in the format:\n{Near:[nearPlane] Far:[farPlane] Left:[leftPlane] Right:[rightPlane] Top:[topPlane] Bottom:[bottomPlane]}\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation of this <xref href="Microsoft.Xna.Framework.BoundingFrustum" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Microsoft.Xna.Framework.BoundingFrustum.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.Xna.Framework.BoundingFrustum}
  commentId: T:System.IEquatable{Microsoft.Xna.Framework.BoundingFrustum}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BoundingFrustum>
  nameWithType: IEquatable<BoundingFrustum>
  fullName: System.IEquatable<Microsoft.Xna.Framework.BoundingFrustum>
  nameWithType.vb: IEquatable(Of BoundingFrustum)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.BoundingFrustum)
  name.vb: IEquatable(Of BoundingFrustum)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.BoundingFrustum
    name: BoundingFrustum
    nameWithType: BoundingFrustum
    fullName: Microsoft.Xna.Framework.BoundingFrustum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.BoundingFrustum
    name: BoundingFrustum
    nameWithType: BoundingFrustum
    fullName: Microsoft.Xna.Framework.BoundingFrustum
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.BoundingFrustum.Matrix
  commentId: P:Microsoft.Xna.Framework.BoundingFrustum.Matrix
- uid: Microsoft.Xna.Framework.BoundingFrustum.Matrix*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Matrix
  isExternal: false
  name: Matrix
  nameWithType: BoundingFrustum.Matrix
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Matrix
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: Microsoft.Xna.Framework.BoundingFrustum.Near*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Near
  isExternal: false
  name: Near
  nameWithType: BoundingFrustum.Near
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Near
- uid: Microsoft.Xna.Framework.Plane
  commentId: T:Microsoft.Xna.Framework.Plane
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Plane
  nameWithType: Plane
  fullName: Microsoft.Xna.Framework.Plane
- uid: Microsoft.Xna.Framework.BoundingFrustum.Far*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Far
  isExternal: false
  name: Far
  nameWithType: BoundingFrustum.Far
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Far
- uid: Microsoft.Xna.Framework.BoundingFrustum.Left*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Left
  isExternal: false
  name: Left
  nameWithType: BoundingFrustum.Left
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Left
- uid: Microsoft.Xna.Framework.BoundingFrustum.Right*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Right
  isExternal: false
  name: Right
  nameWithType: BoundingFrustum.Right
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Right
- uid: Microsoft.Xna.Framework.BoundingFrustum.Top*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Top
  isExternal: false
  name: Top
  nameWithType: BoundingFrustum.Top
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Top
- uid: Microsoft.Xna.Framework.BoundingFrustum.Bottom*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Bottom
  isExternal: false
  name: Bottom
  nameWithType: BoundingFrustum.Bottom
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Bottom
- uid: Microsoft.Xna.Framework.BoundingFrustum.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.#ctor
  isExternal: false
  name: BoundingFrustum
  nameWithType: BoundingFrustum.BoundingFrustum
  fullName: Microsoft.Xna.Framework.BoundingFrustum.BoundingFrustum
- uid: Microsoft.Xna.Framework.BoundingFrustum
  commentId: T:Microsoft.Xna.Framework.BoundingFrustum
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: BoundingFrustum
  nameWithType: BoundingFrustum
  fullName: Microsoft.Xna.Framework.BoundingFrustum
- uid: Microsoft.Xna.Framework.BoundingFrustum.op_Equality*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.op_Equality
  isExternal: false
  name: Equality
  nameWithType: BoundingFrustum.Equality
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.BoundingFrustum.op_Inequality*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: BoundingFrustum.Inequality
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Inequality
- uid: Microsoft.Xna.Framework.BoundingBox
  commentId: T:Microsoft.Xna.Framework.BoundingBox
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: Microsoft.Xna.Framework.BoundingBox
- uid: Microsoft.Xna.Framework.BoundingFrustum.Contains*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Contains
  isExternal: false
  name: Contains
  nameWithType: BoundingFrustum.Contains
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Contains
- uid: Microsoft.Xna.Framework.ContainmentType
  commentId: T:Microsoft.Xna.Framework.ContainmentType
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: ContainmentType
  nameWithType: ContainmentType
  fullName: Microsoft.Xna.Framework.ContainmentType
- uid: Microsoft.Xna.Framework.BoundingSphere
  commentId: T:Microsoft.Xna.Framework.BoundingSphere
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: BoundingSphere
  nameWithType: BoundingSphere
  fullName: Microsoft.Xna.Framework.BoundingSphere
- uid: Microsoft.Xna.Framework.Vector3
  commentId: T:Microsoft.Xna.Framework.Vector3
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: Microsoft.Xna.Framework.Vector3
- uid: Microsoft.Xna.Framework.BoundingFrustum.Equals*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Equals
  isExternal: false
  name: Equals
  nameWithType: BoundingFrustum.Equals
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Equals
- uid: System.IEquatable{Microsoft.Xna.Framework.BoundingFrustum}.Equals(Microsoft.Xna.Framework.BoundingFrustum)
  commentId: M:System.IEquatable{Microsoft.Xna.Framework.BoundingFrustum}.Equals(Microsoft.Xna.Framework.BoundingFrustum)
  parent: System.IEquatable{Microsoft.Xna.Framework.BoundingFrustum}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(BoundingFrustum)
  nameWithType: IEquatable<BoundingFrustum>.Equals(BoundingFrustum)
  fullName: System.IEquatable<Microsoft.Xna.Framework.BoundingFrustum>.Equals(Microsoft.Xna.Framework.BoundingFrustum)
  nameWithType.vb: IEquatable(Of BoundingFrustum).Equals(BoundingFrustum)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.BoundingFrustum).Equals(Microsoft.Xna.Framework.BoundingFrustum)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<BoundingFrustum>.Equals
    fullName: System.IEquatable<Microsoft.Xna.Framework.BoundingFrustum>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.BoundingFrustum
    name: BoundingFrustum
    nameWithType: BoundingFrustum
    fullName: Microsoft.Xna.Framework.BoundingFrustum
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of BoundingFrustum).Equals
    fullName: System.IEquatable(Of Microsoft.Xna.Framework.BoundingFrustum).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.BoundingFrustum
    name: BoundingFrustum
    nameWithType: BoundingFrustum
    fullName: Microsoft.Xna.Framework.BoundingFrustum
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.BoundingFrustum.GetCorners*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.GetCorners
  isExternal: false
  name: GetCorners
  nameWithType: BoundingFrustum.GetCorners
  fullName: Microsoft.Xna.Framework.BoundingFrustum.GetCorners
- uid: Microsoft.Xna.Framework.Vector3[]
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: Microsoft.Xna.Framework.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: Microsoft.Xna.Framework.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Microsoft.Xna.Framework.Vector3
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Microsoft.Xna.Framework.Vector3
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Xna.Framework.BoundingFrustum.CornerCount
  commentId: F:Microsoft.Xna.Framework.BoundingFrustum.CornerCount
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.BoundingFrustum.GetHashCode*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: BoundingFrustum.GetHashCode
  fullName: Microsoft.Xna.Framework.BoundingFrustum.GetHashCode
- uid: Microsoft.Xna.Framework.BoundingFrustum.Intersects*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.Intersects
  isExternal: false
  name: Intersects
  nameWithType: BoundingFrustum.Intersects
  fullName: Microsoft.Xna.Framework.BoundingFrustum.Intersects
- uid: Microsoft.Xna.Framework.PlaneIntersectionType
  commentId: T:Microsoft.Xna.Framework.PlaneIntersectionType
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: PlaneIntersectionType
  nameWithType: PlaneIntersectionType
  fullName: Microsoft.Xna.Framework.PlaneIntersectionType
- uid: Microsoft.Xna.Framework.Ray
  commentId: T:Microsoft.Xna.Framework.Ray
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Ray
  nameWithType: Ray
  fullName: Microsoft.Xna.Framework.Ray
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  nameWithType.vb: Nullable(Of Single)
  fullName.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.BoundingFrustum.ToString*
  commentId: Overload:Microsoft.Xna.Framework.BoundingFrustum.ToString
  isExternal: false
  name: ToString
  nameWithType: BoundingFrustum.ToString
  fullName: Microsoft.Xna.Framework.BoundingFrustum.ToString
