### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer
  commentId: T:Microsoft.Xna.Framework.Graphics.IndexBuffer
  id: IndexBuffer
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.IndexElementSize,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage)
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.IndexElementSize,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage,System.Boolean)
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage)
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage,System.Boolean)
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.BufferUsage
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(``0[])
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(System.Int32,``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexCount
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexElementSize
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData``1(``0[])
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData``1(``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData``1(System.Int32,``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.IndexBuffer.SetDataInternal``1(System.Int32,``0[],System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SetDataOptions)
  langs:
  - csharp
  - vb
  name: IndexBuffer
  nameWithType: IndexBuffer
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.OpenGL.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IndexBuffer
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.OpenGL.cs
    startLine: 13
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public class IndexBuffer : GraphicsResource, IDisposable'
    content.vb: >-
      Public Class IndexBuffer
          Inherits GraphicsResource
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Graphics.GraphicsResource
  derivedClasses:
  - Microsoft.Xna.Framework.Graphics.DynamicIndexBuffer
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.BufferUsage
  commentId: P:Microsoft.Xna.Framework.Graphics.IndexBuffer.BufferUsage
  id: BufferUsage
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: BufferUsage
  nameWithType: IndexBuffer.BufferUsage
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.BufferUsage
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: BufferUsage
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 13
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public BufferUsage BufferUsage { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.BufferUsage
    content.vb: Public ReadOnly Property BufferUsage As BufferUsage
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.BufferUsage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexCount
  commentId: P:Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexCount
  id: IndexCount
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: IndexCount
  nameWithType: IndexBuffer.IndexCount
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexCount
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IndexCount
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public int IndexCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property IndexCount As Integer
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexElementSize
  commentId: P:Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexElementSize
  id: IndexElementSize
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: IndexElementSize
  nameWithType: IndexBuffer.IndexElementSize
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexElementSize
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IndexElementSize
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 15
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public IndexElementSize IndexElementSize { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.IndexElementSize
    content.vb: Public ReadOnly Property IndexElementSize As IndexElementSize
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexElementSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage,System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage,System.Boolean)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage,System.Boolean)'
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: IndexBuffer(GraphicsDevice, Type, Int32, BufferUsage, Boolean)
  nameWithType: IndexBuffer.IndexBuffer(GraphicsDevice, Type, Int32, BufferUsage, Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexBuffer(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Type, System.Int32, Microsoft.Xna.Framework.Graphics.BufferUsage, System.Boolean)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 17
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: protected IndexBuffer(GraphicsDevice graphicsDevice, Type indexType, int indexCount, BufferUsage usage, bool dynamic)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    - id: indexType
      type: System.Type
    - id: indexCount
      type: System.Int32
    - id: usage
      type: Microsoft.Xna.Framework.Graphics.BufferUsage
    - id: dynamic
      type: System.Boolean
    content.vb: Protected Sub New(graphicsDevice As GraphicsDevice, indexType As Type, indexCount As Integer, usage As BufferUsage, dynamic As Boolean)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.IndexElementSize,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage,System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.IndexElementSize,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage,System.Boolean)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.IndexElementSize,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage,System.Boolean)'
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: IndexBuffer(GraphicsDevice, IndexElementSize, Int32, BufferUsage, Boolean)
  nameWithType: IndexBuffer.IndexBuffer(GraphicsDevice, IndexElementSize, Int32, BufferUsage, Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexBuffer(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Microsoft.Xna.Framework.Graphics.IndexElementSize, System.Int32, Microsoft.Xna.Framework.Graphics.BufferUsage, System.Boolean)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 22
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: protected IndexBuffer(GraphicsDevice graphicsDevice, IndexElementSize indexElementSize, int indexCount, BufferUsage usage, bool dynamic)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    - id: indexElementSize
      type: Microsoft.Xna.Framework.Graphics.IndexElementSize
    - id: indexCount
      type: System.Int32
    - id: usage
      type: Microsoft.Xna.Framework.Graphics.BufferUsage
    - id: dynamic
      type: System.Boolean
    content.vb: Protected Sub New(graphicsDevice As GraphicsDevice, indexElementSize As IndexElementSize, indexCount As Integer, usage As BufferUsage, dynamic As Boolean)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.IndexElementSize,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.IndexElementSize,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.IndexElementSize,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage)'
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: IndexBuffer(GraphicsDevice, IndexElementSize, Int32, BufferUsage)
  nameWithType: IndexBuffer.IndexBuffer(GraphicsDevice, IndexElementSize, Int32, BufferUsage)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexBuffer(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Microsoft.Xna.Framework.Graphics.IndexElementSize, System.Int32, Microsoft.Xna.Framework.Graphics.BufferUsage)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 38
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public IndexBuffer(GraphicsDevice graphicsDevice, IndexElementSize indexElementSize, int indexCount, BufferUsage bufferUsage)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    - id: indexElementSize
      type: Microsoft.Xna.Framework.Graphics.IndexElementSize
    - id: indexCount
      type: System.Int32
    - id: bufferUsage
      type: Microsoft.Xna.Framework.Graphics.BufferUsage
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, indexElementSize As IndexElementSize, indexCount As Integer, bufferUsage As BufferUsage)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type,System.Int32,Microsoft.Xna.Framework.Graphics.BufferUsage)'
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: IndexBuffer(GraphicsDevice, Type, Int32, BufferUsage)
  nameWithType: IndexBuffer.IndexBuffer(GraphicsDevice, Type, Int32, BufferUsage)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexBuffer(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Type, System.Int32, Microsoft.Xna.Framework.Graphics.BufferUsage)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 43
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public IndexBuffer(GraphicsDevice graphicsDevice, Type indexType, int indexCount, BufferUsage usage)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    - id: indexType
      type: System.Type
    - id: indexCount
      type: System.Int32
    - id: usage
      type: Microsoft.Xna.Framework.Graphics.BufferUsage
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, indexType As Type, indexCount As Integer, usage As BufferUsage)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting
  id: GraphicsDeviceResetting
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: GraphicsDeviceResetting()
  nameWithType: IndexBuffer.GraphicsDeviceResetting()
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GraphicsDeviceResetting
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 72
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nThe GraphicsDevice is resetting, so GPU resources must be recreated.\n"
  example: []
  syntax:
    content: protected override void GraphicsDeviceResetting()
    content.vb: Protected Overrides Sub GraphicsDeviceResetting
  overridden: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(System.Int32,``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(System.Int32,``0[],System.Int32,System.Int32)
  id: GetData``1(System.Int32,``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: GetData<T>(Int32, T[], Int32, Int32)
  nameWithType: IndexBuffer.GetData<T>(Int32, T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData<T>(System.Int32, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetData
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 77
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void GetData<T>(int offsetInBytes, T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: offsetInBytes
      type: System.Int32
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub GetData(Of T As Structure)(offsetInBytes As Integer, data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData*
  nameWithType.vb: IndexBuffer.GetData(Of T)(Int32, T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData(Of T)(System.Int32, T(), System.Int32, System.Int32)
  name.vb: GetData(Of T)(Int32, T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(``0[],System.Int32,System.Int32)
  id: GetData``1(``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: GetData<T>(T[], Int32, Int32)
  nameWithType: IndexBuffer.GetData<T>(T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData<T>(T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetData
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 89
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void GetData<T>(T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub GetData(Of T As Structure)(data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData*
  nameWithType.vb: IndexBuffer.GetData(Of T)(T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData(Of T)(T(), System.Int32, System.Int32)
  name.vb: GetData(Of T)(T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(``0[])
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(``0[])
  id: GetData``1(``0[])
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: GetData<T>(T[])
  nameWithType: IndexBuffer.GetData<T>(T[])
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData<T>(T[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetData
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 94
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void GetData<T>(T[] data)where T : struct'
    parameters:
    - id: data
      type: '{T}[]'
    typeParameters:
    - id: T
    content.vb: Public Sub GetData(Of T As Structure)(data As T())
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData*
  nameWithType.vb: IndexBuffer.GetData(Of T)(T())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData(Of T)(T())
  name.vb: GetData(Of T)(T())
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData``1(System.Int32,``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData``1(System.Int32,``0[],System.Int32,System.Int32)
  id: SetData``1(System.Int32,``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: SetData<T>(Int32, T[], Int32, Int32)
  nameWithType: IndexBuffer.SetData<T>(Int32, T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData<T>(System.Int32, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetData
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 99
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void SetData<T>(int offsetInBytes, T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: offsetInBytes
      type: System.Int32
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T As Structure)(offsetInBytes As Integer, data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData*
  nameWithType.vb: IndexBuffer.SetData(Of T)(Int32, T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData(Of T)(System.Int32, T(), System.Int32, System.Int32)
  name.vb: SetData(Of T)(Int32, T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData``1(``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData``1(``0[],System.Int32,System.Int32)
  id: SetData``1(``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: SetData<T>(T[], Int32, Int32)
  nameWithType: IndexBuffer.SetData<T>(T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData<T>(T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetData
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 104
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void SetData<T>(T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T As Structure)(data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData*
  nameWithType.vb: IndexBuffer.SetData(Of T)(T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData(Of T)(T(), System.Int32, System.Int32)
  name.vb: SetData(Of T)(T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData``1(``0[])
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData``1(``0[])
  id: SetData``1(``0[])
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: SetData<T>(T[])
  nameWithType: IndexBuffer.SetData<T>(T[])
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData<T>(T[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetData
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 109
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void SetData<T>(T[] data)where T : struct'
    parameters:
    - id: data
      type: '{T}[]'
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T As Structure)(data As T())
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData*
  nameWithType.vb: IndexBuffer.SetData(Of T)(T())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData(Of T)(T())
  name.vb: SetData(Of T)(T())
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetDataInternal``1(System.Int32,``0[],System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SetDataOptions)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.SetDataInternal``1(System.Int32,``0[],System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SetDataOptions)
  id: SetDataInternal``1(System.Int32,``0[],System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SetDataOptions)
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: SetDataInternal<T>(Int32, T[], Int32, Int32, SetDataOptions)
  nameWithType: IndexBuffer.SetDataInternal<T>(Int32, T[], Int32, Int32, SetDataOptions)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetDataInternal<T>(System.Int32, T[], System.Int32, System.Int32, Microsoft.Xna.Framework.Graphics.SetDataOptions)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetDataInternal
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.cs
    startLine: 114
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'protected void SetDataInternal<T>(int offsetInBytes, T[] data, int startIndex, int elementCount, SetDataOptions options)where T : struct'
    parameters:
    - id: offsetInBytes
      type: System.Int32
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    - id: options
      type: Microsoft.Xna.Framework.Graphics.SetDataOptions
    typeParameters:
    - id: T
    content.vb: Protected Sub SetDataInternal(Of T As Structure)(offsetInBytes As Integer, data As T(), startIndex As Integer, elementCount As Integer, options As SetDataOptions)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetDataInternal*
  nameWithType.vb: IndexBuffer.SetDataInternal(Of T)(Int32, T(), Int32, Int32, SetDataOptions)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetDataInternal(Of T)(System.Int32, T(), System.Int32, System.Int32, Microsoft.Xna.Framework.Graphics.SetDataOptions)
  name.vb: SetDataInternal(Of T)(Int32, T(), Int32, Int32, SetDataOptions)
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.IndexBuffer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.IndexBuffer
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: IndexBuffer.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/IndexBuffer.OpenGL.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/Graphics/Vertices/IndexBuffer.OpenGL.cs
    startLine: 137
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  overload: Microsoft.Xna.Framework.Graphics.IndexBuffer.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsResource
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsResource
  nameWithType: GraphicsResource
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsResource.Dispose()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  commentId: E:Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Disposing
  nameWithType: GraphicsResource.Disposing
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsResource.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: IsDisposed
  nameWithType: GraphicsResource.IsDisposed
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Name
  nameWithType: GraphicsResource.Name
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Tag
  nameWithType: GraphicsResource.Tag
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: ToString()
  nameWithType: GraphicsResource.ToString()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.BufferUsage*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.IndexBuffer.BufferUsage
  isExternal: false
  name: BufferUsage
  nameWithType: IndexBuffer.BufferUsage
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.BufferUsage
- uid: Microsoft.Xna.Framework.Graphics.BufferUsage
  commentId: T:Microsoft.Xna.Framework.Graphics.BufferUsage
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: BufferUsage
  nameWithType: BufferUsage
  fullName: Microsoft.Xna.Framework.Graphics.BufferUsage
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexCount*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexCount
  isExternal: false
  name: IndexCount
  nameWithType: IndexBuffer.IndexCount
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexElementSize*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexElementSize
  isExternal: false
  name: IndexElementSize
  nameWithType: IndexBuffer.IndexElementSize
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexElementSize
- uid: Microsoft.Xna.Framework.Graphics.IndexElementSize
  commentId: T:Microsoft.Xna.Framework.Graphics.IndexElementSize
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: IndexElementSize
  nameWithType: IndexElementSize
  fullName: Microsoft.Xna.Framework.Graphics.IndexElementSize
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.IndexBuffer.#ctor
  isExternal: false
  name: IndexBuffer
  nameWithType: IndexBuffer.IndexBuffer
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.IndexBuffer
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDeviceResetting()
  nameWithType: GraphicsResource.GraphicsDeviceResetting()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: GraphicsResource.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: GraphicsResource.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting
  isExternal: false
  name: GraphicsDeviceResetting
  nameWithType: IndexBuffer.GraphicsDeviceResetting
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData
  isExternal: false
  name: GetData
  nameWithType: IndexBuffer.GetData
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData
  isExternal: false
  name: SetData
  nameWithType: IndexBuffer.SetData
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetData
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetDataInternal*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.IndexBuffer.SetDataInternal
  isExternal: false
  name: SetDataInternal
  nameWithType: IndexBuffer.SetDataInternal
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.SetDataInternal
- uid: Microsoft.Xna.Framework.Graphics.SetDataOptions
  commentId: T:Microsoft.Xna.Framework.Graphics.SetDataOptions
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: SetDataOptions
  nameWithType: SetDataOptions
  fullName: Microsoft.Xna.Framework.Graphics.SetDataOptions
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: GraphicsResource.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.IndexBuffer.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.IndexBuffer.Dispose
  isExternal: false
  name: Dispose
  nameWithType: IndexBuffer.Dispose
  fullName: Microsoft.Xna.Framework.Graphics.IndexBuffer.Dispose
