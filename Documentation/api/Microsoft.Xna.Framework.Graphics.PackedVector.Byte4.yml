### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  commentId: T:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  id: Byte4
  parent: Microsoft.Xna.Framework.Graphics.PackedVector
  children:
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(System.Single,System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(System.Object)
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString
  - Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4
  langs:
  - csharp
  - vb
  name: Byte4
  nameWithType: Byte4
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  type: Struct
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Byte4
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 11
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nPacked vector type containing four 8-bit unsigned integer values, ranging from 0 to 255.\n"
  example: []
  syntax:
    content: 'public struct Byte4 : IPackedVector<uint>, IEquatable<Byte4>, IPackedVector'
    content.vb: >-
      Public Structure Byte4
          Implements IPackedVector(Of UInteger), IEquatable(Of Byte4), IPackedVector
  implements:
  - Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector{System.UInt32}
  - System.IEquatable{Microsoft.Xna.Framework.Graphics.PackedVector.Byte4}
  - Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(Microsoft.Xna.Framework.Vector4)
  id: '#ctor(Microsoft.Xna.Framework.Vector4)'
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: Byte4(Vector4)
  nameWithType: Byte4.Byte4(Vector4)
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Byte4(Microsoft.Xna.Framework.Vector4)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 19
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nInitializes a new instance of the Byte4 class.\n"
  example: []
  syntax:
    content: public Byte4(Vector4 vector)
    parameters:
    - id: vector
      type: Microsoft.Xna.Framework.Vector4
      description: A vector containing the initial values for the components of the Byte4 structure.
    content.vb: Public Sub New(vector As Vector4)
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: Byte4(Single, Single, Single, Single)
  nameWithType: Byte4.Byte4(Single, Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Byte4(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 31
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nInitializes a new instance of the Byte4 class.\n"
  example: []
  syntax:
    content: public Byte4(float x, float y, float z, float w)
    parameters:
    - id: x
      type: System.Single
      description: Initial value for the x component.
    - id: y
      type: System.Single
      description: Initial value for the y component.
    - id: z
      type: System.Single
      description: Initial value for the z component.
    - id: w
      type: System.Single
      description: Initial value for the w component.
    content.vb: Public Sub New(x As Single, y As Single, z As Single, w As Single)
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  id: op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: Inequality(Byte4, Byte4)
  nameWithType: Byte4.Inequality(Byte4, Byte4)
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4, Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Inequality
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 43
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nCompares the current instance of a class to another instance to determine whether they are different.\n"
  example: []
  syntax:
    content: public static bool operator !=(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
      description: The object to the left of the equality operator.
    - id: b
      type: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
      description: The object to the right of the equality operator.
    return:
      type: System.Boolean
      description: true if the objects are different; false otherwise.
    content.vb: Public Shared Operator <>(a As Byte4, b As Byte4) As Boolean
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  id: op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: Equality(Byte4, Byte4)
  nameWithType: Byte4.Equality(Byte4, Byte4)
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4, Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Equality
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 54
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nCompares the current instance of a class to another instance to determine whether they are the same.\n"
  example: []
  syntax:
    content: public static bool operator ==(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
      description: The object to the left of the equality operator.
    - id: b
      type: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
      description: The object to the right of the equality operator.
    return:
      type: System.Boolean
      description: true if the objects are the same; false otherwise.
    content.vb: Public Shared Operator =(a As Byte4, b As Byte4) As Boolean
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue
  commentId: P:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue
  id: PackedValue
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: PackedValue
  nameWithType: Byte4.PackedValue
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PackedValue
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 63
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nDirectly gets or sets the packed representation of the value.\n"
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      public uint PackedValue { get; set; }
    parameters: []
    return:
      type: System.UInt32
      description: The packed representation of the value.
    content.vb: >-
      <CLSCompliant(False)>

      Public Property PackedValue As UInteger
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue*
  implements:
  - Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector{System.UInt32}.PackedValue
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(System.Object)
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Byte4.Equals(Object)
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(System.Object)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 81
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nReturns a value that indicates whether the current instance is equal to a specified object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object with which to make the comparison.
    return:
      type: System.Boolean
      description: true if the current instance is equal to the specified object; false otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  id: Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: Equals(Byte4)
  nameWithType: Byte4.Equals(Byte4)
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 93
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nReturns a value that indicates whether the current instance is equal to a specified object.\n"
  example: []
  syntax:
    content: public bool Equals(Byte4 other)
    parameters:
    - id: other
      type: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
      description: The object with which to make the comparison.
    return:
      type: System.Boolean
      description: true if the current instance is equal to the specified object; false otherwise.
    content.vb: Public Function Equals(other As Byte4) As Boolean
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals*
  implements:
  - System.IEquatable{Microsoft.Xna.Framework.Graphics.PackedVector.Byte4}.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode
  id: GetHashCode
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Byte4.GetHashCode()
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetHashCode
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 102
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nGets the hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Hash code for the instance.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString
  id: ToString
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Byte4.ToString()
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ToString
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 111
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nReturns a string representation of the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: String that represents the object.
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)
  id: Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)
  isEii: true
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: IPackedVector.PackFromVector4(Vector4)
  nameWithType: Byte4.IPackedVector.PackFromVector4(Vector4)
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 139
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nSets the packed representation from a Vector4.\n"
  example: []
  syntax:
    content: void IPackedVector.PackFromVector4(Vector4 vector)
    parameters:
    - id: vector
      type: Microsoft.Xna.Framework.Vector4
      description: The vector to create the packed representation from.
    content.vb: Sub Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(vector As Vector4) Implements IPackedVector.PackFromVector4
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4*
  implements:
  - Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Microsoft.Xna.Framework.Vector4)
  nameWithType.vb: Byte4.Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Vector4)
  name.vb: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Vector4)
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4
  id: ToVector4
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  langs:
  - csharp
  - vb
  name: ToVector4()
  nameWithType: Byte4.ToVector4()
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/PackedVector/Byte4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ToVector4
    path: ../MonoGame.Framework/Graphics/PackedVector/Byte4.cs
    startLine: 148
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics.PackedVector
  summary: "\nExpands the packed representation into a Vector4.\n"
  example: []
  syntax:
    content: public Vector4 ToVector4()
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The expanded vector.
    content.vb: Public Function ToVector4 As Vector4
  overload: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4*
  implements:
  - Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.ToVector4
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Graphics.PackedVector
  commentId: N:Microsoft.Xna.Framework.Graphics.PackedVector
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics.PackedVector
  nameWithType: Microsoft.Xna.Framework.Graphics.PackedVector
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector{System.UInt32}
  commentId: T:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector{System.UInt32}
  parent: Microsoft.Xna.Framework.Graphics.PackedVector
  definition: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1
  name: IPackedVector<UInt32>
  nameWithType: IPackedVector<UInt32>
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector<System.UInt32>
  nameWithType.vb: IPackedVector(Of UInt32)
  fullName.vb: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector(Of System.UInt32)
  name.vb: IPackedVector(Of UInt32)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1
    name: IPackedVector
    nameWithType: IPackedVector
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1
    name: IPackedVector
    nameWithType: IPackedVector
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Microsoft.Xna.Framework.Graphics.PackedVector.Byte4}
  commentId: T:System.IEquatable{Microsoft.Xna.Framework.Graphics.PackedVector.Byte4}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Byte4>
  nameWithType: IEquatable<Byte4>
  fullName: System.IEquatable<Microsoft.Xna.Framework.Graphics.PackedVector.Byte4>
  nameWithType.vb: IEquatable(Of Byte4)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  name.vb: IEquatable(Of Byte4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  commentId: T:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  parent: Microsoft.Xna.Framework.Graphics.PackedVector
  isExternal: false
  name: IPackedVector
  nameWithType: IPackedVector
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1
  commentId: T:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1
  isExternal: false
  name: IPackedVector<TPacked>
  nameWithType: IPackedVector<TPacked>
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector<TPacked>
  nameWithType.vb: IPackedVector(Of TPacked)
  fullName.vb: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector(Of TPacked)
  name.vb: IPackedVector(Of TPacked)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1
    name: IPackedVector
    nameWithType: IPackedVector
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  - name: <
    nameWithType: <
    fullName: <
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1
    name: IPackedVector
    nameWithType: IPackedVector
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor
  isExternal: false
  name: Byte4
  nameWithType: Byte4.Byte4
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Byte4
- uid: Microsoft.Xna.Framework.Vector4
  commentId: T:Microsoft.Xna.Framework.Vector4
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector4
  nameWithType: Vector4
  fullName: Microsoft.Xna.Framework.Vector4
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Inequality*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: Byte4.Inequality
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Inequality
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  commentId: T:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  parent: Microsoft.Xna.Framework.Graphics.PackedVector
  isExternal: false
  name: Byte4
  nameWithType: Byte4
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Equality*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Equality
  isExternal: false
  name: Equality
  nameWithType: Byte4.Equality
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equality
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue
  isExternal: false
  name: PackedValue
  nameWithType: Byte4.PackedValue
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector{System.UInt32}.PackedValue
  commentId: P:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector{System.UInt32}.PackedValue
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector{System.UInt32}
  definition: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1.PackedValue
  name: PackedValue
  nameWithType: IPackedVector<UInt32>.PackedValue
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector<System.UInt32>.PackedValue
  nameWithType.vb: IPackedVector(Of UInt32).PackedValue
  fullName.vb: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector(Of System.UInt32).PackedValue
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1.PackedValue
  commentId: P:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector`1.PackedValue
  isExternal: false
  name: PackedValue
  nameWithType: IPackedVector<TPacked>.PackedValue
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector<TPacked>.PackedValue
  nameWithType.vb: IPackedVector(Of TPacked).PackedValue
  fullName.vb: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector(Of TPacked).PackedValue
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals
  isExternal: false
  name: Equals
  nameWithType: Byte4.Equals
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{Microsoft.Xna.Framework.Graphics.PackedVector.Byte4}.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  commentId: M:System.IEquatable{Microsoft.Xna.Framework.Graphics.PackedVector.Byte4}.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  parent: System.IEquatable{Microsoft.Xna.Framework.Graphics.PackedVector.Byte4}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Byte4)
  nameWithType: IEquatable<Byte4>.Equals(Byte4)
  fullName: System.IEquatable<Microsoft.Xna.Framework.Graphics.PackedVector.Byte4>.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  nameWithType.vb: IEquatable(Of Byte4).Equals(Byte4)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.Graphics.PackedVector.Byte4).Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Byte4>.Equals
    fullName: System.IEquatable<Microsoft.Xna.Framework.Graphics.PackedVector.Byte4>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Byte4).Equals
    fullName: System.IEquatable(Of Microsoft.Xna.Framework.Graphics.PackedVector.Byte4).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: Byte4.GetHashCode
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString
  isExternal: false
  name: ToString
  nameWithType: Byte4.ToString
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4
  isExternal: false
  name: IPackedVector.PackFromVector4
  nameWithType: Byte4.IPackedVector.PackFromVector4
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4
  nameWithType.vb: Byte4.Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4
  name.vb: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  isExternal: false
  name: PackFromVector4(Vector4)
  nameWithType: IPackedVector.PackFromVector4(Vector4)
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Microsoft.Xna.Framework.Vector4)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Microsoft.Xna.Framework.Vector4)
    name: PackFromVector4
    nameWithType: IPackedVector.PackFromVector4
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: Microsoft.Xna.Framework.Vector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4(Microsoft.Xna.Framework.Vector4)
    name: PackFromVector4
    nameWithType: IPackedVector.PackFromVector4
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.PackFromVector4
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: Microsoft.Xna.Framework.Vector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4
  isExternal: false
  name: ToVector4
  nameWithType: Byte4.ToVector4
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4
- uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.ToVector4
  commentId: M:Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.ToVector4
  parent: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector
  isExternal: false
  name: ToVector4()
  nameWithType: IPackedVector.ToVector4()
  fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.ToVector4()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.ToVector4
    name: ToVector4
    nameWithType: IPackedVector.ToVector4
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.ToVector4
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.ToVector4
    name: ToVector4
    nameWithType: IPackedVector.ToVector4
    fullName: Microsoft.Xna.Framework.Graphics.PackedVector.IPackedVector.ToVector4
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
