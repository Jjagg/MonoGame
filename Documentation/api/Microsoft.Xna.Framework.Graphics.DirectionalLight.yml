### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight
  commentId: T:Microsoft.Xna.Framework.Graphics.DirectionalLight
  id: DirectionalLight
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.DirectionalLight.#ctor(Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.DirectionalLight)
  - Microsoft.Xna.Framework.Graphics.DirectionalLight.DiffuseColor
  - Microsoft.Xna.Framework.Graphics.DirectionalLight.Direction
  - Microsoft.Xna.Framework.Graphics.DirectionalLight.Enabled
  - Microsoft.Xna.Framework.Graphics.DirectionalLight.SpecularColor
  langs:
  - csharp
  - vb
  name: DirectionalLight
  nameWithType: DirectionalLight
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/DirectionalLight.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DirectionalLight
    path: ../MonoGame.Framework/Graphics/DirectionalLight.cs
    startLine: 45
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public sealed class DirectionalLight
    content.vb: Public NotInheritable Class DirectionalLight
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.#ctor(Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.DirectionalLight)
  commentId: M:Microsoft.Xna.Framework.Graphics.DirectionalLight.#ctor(Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.DirectionalLight)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.DirectionalLight)'
  parent: Microsoft.Xna.Framework.Graphics.DirectionalLight
  langs:
  - csharp
  - vb
  name: DirectionalLight(EffectParameter, EffectParameter, EffectParameter, DirectionalLight)
  nameWithType: DirectionalLight.DirectionalLight(EffectParameter, EffectParameter, EffectParameter, DirectionalLight)
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.DirectionalLight(Microsoft.Xna.Framework.Graphics.EffectParameter, Microsoft.Xna.Framework.Graphics.EffectParameter, Microsoft.Xna.Framework.Graphics.EffectParameter, Microsoft.Xna.Framework.Graphics.DirectionalLight)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/DirectionalLight.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/DirectionalLight.cs
    startLine: 56
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public DirectionalLight(EffectParameter directionParameter, EffectParameter diffuseColorParameter, EffectParameter specularColorParameter, DirectionalLight cloneSource)
    parameters:
    - id: directionParameter
      type: Microsoft.Xna.Framework.Graphics.EffectParameter
    - id: diffuseColorParameter
      type: Microsoft.Xna.Framework.Graphics.EffectParameter
    - id: specularColorParameter
      type: Microsoft.Xna.Framework.Graphics.EffectParameter
    - id: cloneSource
      type: Microsoft.Xna.Framework.Graphics.DirectionalLight
    content.vb: Public Sub New(directionParameter As EffectParameter, diffuseColorParameter As EffectParameter, specularColorParameter As EffectParameter, cloneSource As DirectionalLight)
  overload: Microsoft.Xna.Framework.Graphics.DirectionalLight.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.DiffuseColor
  commentId: P:Microsoft.Xna.Framework.Graphics.DirectionalLight.DiffuseColor
  id: DiffuseColor
  parent: Microsoft.Xna.Framework.Graphics.DirectionalLight
  langs:
  - csharp
  - vb
  name: DiffuseColor
  nameWithType: DirectionalLight.DiffuseColor
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.DiffuseColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/DirectionalLight.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DiffuseColor
    path: ../MonoGame.Framework/Graphics/DirectionalLight.cs
    startLine: 73
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Vector3 DiffuseColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property DiffuseColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.DirectionalLight.DiffuseColor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.Direction
  commentId: P:Microsoft.Xna.Framework.Graphics.DirectionalLight.Direction
  id: Direction
  parent: Microsoft.Xna.Framework.Graphics.DirectionalLight
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: DirectionalLight.Direction
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.Direction
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/DirectionalLight.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Direction
    path: ../MonoGame.Framework/Graphics/DirectionalLight.cs
    startLine: 84
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Vector3 Direction { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property Direction As Vector3
  overload: Microsoft.Xna.Framework.Graphics.DirectionalLight.Direction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.SpecularColor
  commentId: P:Microsoft.Xna.Framework.Graphics.DirectionalLight.SpecularColor
  id: SpecularColor
  parent: Microsoft.Xna.Framework.Graphics.DirectionalLight
  langs:
  - csharp
  - vb
  name: SpecularColor
  nameWithType: DirectionalLight.SpecularColor
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.SpecularColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/DirectionalLight.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SpecularColor
    path: ../MonoGame.Framework/Graphics/DirectionalLight.cs
    startLine: 95
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Vector3 SpecularColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property SpecularColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.DirectionalLight.SpecularColor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.Enabled
  commentId: P:Microsoft.Xna.Framework.Graphics.DirectionalLight.Enabled
  id: Enabled
  parent: Microsoft.Xna.Framework.Graphics.DirectionalLight
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: DirectionalLight.Enabled
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.Enabled
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/DirectionalLight.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Enabled
    path: ../MonoGame.Framework/Graphics/DirectionalLight.cs
    startLine: 105
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Microsoft.Xna.Framework.Graphics.DirectionalLight.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DirectionalLight.#ctor
  isExternal: false
  name: DirectionalLight
  nameWithType: DirectionalLight.DirectionalLight
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.DirectionalLight
- uid: Microsoft.Xna.Framework.Graphics.EffectParameter
  commentId: T:Microsoft.Xna.Framework.Graphics.EffectParameter
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: EffectParameter
  nameWithType: EffectParameter
  fullName: Microsoft.Xna.Framework.Graphics.EffectParameter
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight
  commentId: T:Microsoft.Xna.Framework.Graphics.DirectionalLight
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: DirectionalLight
  nameWithType: DirectionalLight
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.DiffuseColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DirectionalLight.DiffuseColor
  isExternal: false
  name: DiffuseColor
  nameWithType: DirectionalLight.DiffuseColor
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.DiffuseColor
- uid: Microsoft.Xna.Framework.Vector3
  commentId: T:Microsoft.Xna.Framework.Vector3
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: Microsoft.Xna.Framework.Vector3
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.Direction*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DirectionalLight.Direction
  isExternal: false
  name: Direction
  nameWithType: DirectionalLight.Direction
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.Direction
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.SpecularColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DirectionalLight.SpecularColor
  isExternal: false
  name: SpecularColor
  nameWithType: DirectionalLight.SpecularColor
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.SpecularColor
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight.Enabled*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DirectionalLight.Enabled
  isExternal: false
  name: Enabled
  nameWithType: DirectionalLight.Enabled
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
