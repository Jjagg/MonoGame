### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.CurveLoopType
  commentId: T:Microsoft.Xna.Framework.CurveLoopType
  id: CurveLoopType
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.CurveLoopType.Constant
  - Microsoft.Xna.Framework.CurveLoopType.Cycle
  - Microsoft.Xna.Framework.CurveLoopType.CycleOffset
  - Microsoft.Xna.Framework.CurveLoopType.Linear
  - Microsoft.Xna.Framework.CurveLoopType.Oscillate
  langs:
  - csharp
  - vb
  name: CurveLoopType
  nameWithType: CurveLoopType
  fullName: Microsoft.Xna.Framework.CurveLoopType
  type: Enum
  source:
    remote:
      path: MonoGame.Framework/CurveLoopType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CurveLoopType
    path: ../MonoGame.Framework/CurveLoopType.cs
    startLine: 9
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDefines how the <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref> value is determined for position before first point or after the end point on the <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public enum CurveLoopType
    content.vb: Public Enum CurveLoopType
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.Xna.Framework.CurveLoopType.Constant
  commentId: F:Microsoft.Xna.Framework.CurveLoopType.Constant
  id: Constant
  parent: Microsoft.Xna.Framework.CurveLoopType
  langs:
  - csharp
  - vb
  name: Constant
  nameWithType: CurveLoopType.Constant
  fullName: Microsoft.Xna.Framework.CurveLoopType.Constant
  type: Field
  source:
    remote:
      path: MonoGame.Framework/CurveLoopType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Constant
    path: ../MonoGame.Framework/CurveLoopType.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe value of <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref> will be evaluated as first point for positions before the beginning and end point for positions after the end.\n"
  example: []
  syntax:
    content: Constant = 0
    return:
      type: Microsoft.Xna.Framework.CurveLoopType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.CurveLoopType.Cycle
  commentId: F:Microsoft.Xna.Framework.CurveLoopType.Cycle
  id: Cycle
  parent: Microsoft.Xna.Framework.CurveLoopType
  langs:
  - csharp
  - vb
  name: Cycle
  nameWithType: CurveLoopType.Cycle
  fullName: Microsoft.Xna.Framework.CurveLoopType.Cycle
  type: Field
  source:
    remote:
      path: MonoGame.Framework/CurveLoopType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Cycle
    path: ../MonoGame.Framework/CurveLoopType.cs
    startLine: 18
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe positions will wrap around from the end to beginning of the <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref> for determined the value.\n"
  example: []
  syntax:
    content: Cycle = 1
    return:
      type: Microsoft.Xna.Framework.CurveLoopType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.CurveLoopType.CycleOffset
  commentId: F:Microsoft.Xna.Framework.CurveLoopType.CycleOffset
  id: CycleOffset
  parent: Microsoft.Xna.Framework.CurveLoopType
  langs:
  - csharp
  - vb
  name: CycleOffset
  nameWithType: CurveLoopType.CycleOffset
  fullName: Microsoft.Xna.Framework.CurveLoopType.CycleOffset
  type: Field
  source:
    remote:
      path: MonoGame.Framework/CurveLoopType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CycleOffset
    path: ../MonoGame.Framework/CurveLoopType.cs
    startLine: 24
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe positions will wrap around from the end to beginning of the <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref>.\nThe value will be offset by the difference between the values of first and end <xref href=\"Microsoft.Xna.Framework.CurveKey\" data-throw-if-not-resolved=\"false\"></xref> multiplied by the wrap amount.\nIf the position is before the beginning of the <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref> the difference will be subtracted from its value; otherwise the difference will be added.\n"
  example: []
  syntax:
    content: CycleOffset = 2
    return:
      type: Microsoft.Xna.Framework.CurveLoopType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.CurveLoopType.Oscillate
  commentId: F:Microsoft.Xna.Framework.CurveLoopType.Oscillate
  id: Oscillate
  parent: Microsoft.Xna.Framework.CurveLoopType
  langs:
  - csharp
  - vb
  name: Oscillate
  nameWithType: CurveLoopType.Oscillate
  fullName: Microsoft.Xna.Framework.CurveLoopType.Oscillate
  type: Field
  source:
    remote:
      path: MonoGame.Framework/CurveLoopType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Oscillate
    path: ../MonoGame.Framework/CurveLoopType.cs
    startLine: 28
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe value at the end of the <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref> act as an offset from the same side of the <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref> toward the opposite side.\n"
  example: []
  syntax:
    content: Oscillate = 3
    return:
      type: Microsoft.Xna.Framework.CurveLoopType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.CurveLoopType.Linear
  commentId: F:Microsoft.Xna.Framework.CurveLoopType.Linear
  id: Linear
  parent: Microsoft.Xna.Framework.CurveLoopType
  langs:
  - csharp
  - vb
  name: Linear
  nameWithType: CurveLoopType.Linear
  fullName: Microsoft.Xna.Framework.CurveLoopType.Linear
  type: Field
  source:
    remote:
      path: MonoGame.Framework/CurveLoopType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Linear
    path: ../MonoGame.Framework/CurveLoopType.cs
    startLine: 32
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe linear interpolation will be performed for determined the value. \n"
  example: []
  syntax:
    content: Linear = 4
    return:
      type: Microsoft.Xna.Framework.CurveLoopType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Xna.Framework.Curve
  commentId: T:Microsoft.Xna.Framework.Curve
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Curve
  nameWithType: Curve
  fullName: Microsoft.Xna.Framework.Curve
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.CurveLoopType
  commentId: T:Microsoft.Xna.Framework.CurveLoopType
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: CurveLoopType
  nameWithType: CurveLoopType
  fullName: Microsoft.Xna.Framework.CurveLoopType
- uid: Microsoft.Xna.Framework.CurveKey
  commentId: T:Microsoft.Xna.Framework.CurveKey
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: CurveKey
  nameWithType: CurveKey
  fullName: Microsoft.Xna.Framework.CurveKey
