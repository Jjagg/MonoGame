### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Input.MouseCursor
  commentId: T:Microsoft.Xna.Framework.Input.MouseCursor
  id: MouseCursor
  parent: Microsoft.Xna.Framework.Input
  children:
  - Microsoft.Xna.Framework.Input.MouseCursor.Arrow
  - Microsoft.Xna.Framework.Input.MouseCursor.Crosshair
  - Microsoft.Xna.Framework.Input.MouseCursor.Dispose
  - Microsoft.Xna.Framework.Input.MouseCursor.FromTexture2D(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Input.MouseCursor.Hand
  - Microsoft.Xna.Framework.Input.MouseCursor.Handle
  - Microsoft.Xna.Framework.Input.MouseCursor.IBeam
  - Microsoft.Xna.Framework.Input.MouseCursor.No
  - Microsoft.Xna.Framework.Input.MouseCursor.SizeAll
  - Microsoft.Xna.Framework.Input.MouseCursor.SizeNESW
  - Microsoft.Xna.Framework.Input.MouseCursor.SizeNS
  - Microsoft.Xna.Framework.Input.MouseCursor.SizeNWSE
  - Microsoft.Xna.Framework.Input.MouseCursor.SizeWE
  - Microsoft.Xna.Framework.Input.MouseCursor.Wait
  - Microsoft.Xna.Framework.Input.MouseCursor.WaitArrow
  langs:
  - csharp
  - vb
  name: MouseCursor
  nameWithType: MouseCursor
  fullName: Microsoft.Xna.Framework.Input.MouseCursor
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.SDL.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: MouseCursor
    path: ../MonoGame.Framework/Input/MouseCursor.SDL.cs
    startLine: 11
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nDescribes a mouse cursor.\n"
  example: []
  syntax:
    content: 'public class MouseCursor : IDisposable'
    content.vb: >-
      Public Class MouseCursor
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Arrow
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.Arrow
  id: Arrow
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: Arrow
  nameWithType: MouseCursor.Arrow
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Arrow
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Arrow
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 17
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the default arrow cursor.\n"
  example: []
  syntax:
    content: public static MouseCursor Arrow { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property Arrow As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.Arrow*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.IBeam
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.IBeam
  id: IBeam
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: IBeam
  nameWithType: MouseCursor.IBeam
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.IBeam
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IBeam
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 22
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the cursor that appears when the mouse is over text editing regions.\n"
  example: []
  syntax:
    content: public static MouseCursor IBeam { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property IBeam As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.IBeam*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Wait
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.Wait
  id: Wait
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: Wait
  nameWithType: MouseCursor.Wait
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Wait
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Wait
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 27
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the waiting cursor that appears while the application/system is busy.\n"
  example: []
  syntax:
    content: public static MouseCursor Wait { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property Wait As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.Wait*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Crosshair
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.Crosshair
  id: Crosshair
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: Crosshair
  nameWithType: MouseCursor.Crosshair
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Crosshair
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Crosshair
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 32
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the crosshair (&quot;+&quot;) cursor.\n"
  example: []
  syntax:
    content: public static MouseCursor Crosshair { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property Crosshair As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.Crosshair*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.WaitArrow
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.WaitArrow
  id: WaitArrow
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: WaitArrow
  nameWithType: MouseCursor.WaitArrow
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.WaitArrow
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: WaitArrow
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 37
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the cross between Arrow and Wait cursors.\n"
  example: []
  syntax:
    content: public static MouseCursor WaitArrow { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property WaitArrow As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.WaitArrow*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeNWSE
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.SizeNWSE
  id: SizeNWSE
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: SizeNWSE
  nameWithType: MouseCursor.SizeNWSE
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeNWSE
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SizeNWSE
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 42
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the northwest/southeast (&quot;\\&quot;) cursor.\n"
  example: []
  syntax:
    content: public static MouseCursor SizeNWSE { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property SizeNWSE As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.SizeNWSE*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeNESW
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.SizeNESW
  id: SizeNESW
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: SizeNESW
  nameWithType: MouseCursor.SizeNESW
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeNESW
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SizeNESW
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 47
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the northeast/southwest (&quot;/&quot;) cursor.\n"
  example: []
  syntax:
    content: public static MouseCursor SizeNESW { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property SizeNESW As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.SizeNESW*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeWE
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.SizeWE
  id: SizeWE
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: SizeWE
  nameWithType: MouseCursor.SizeWE
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeWE
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SizeWE
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 52
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the horizontal west/east (&quot;-&quot;) cursor.\n"
  example: []
  syntax:
    content: public static MouseCursor SizeWE { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property SizeWE As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.SizeWE*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeNS
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.SizeNS
  id: SizeNS
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: SizeNS
  nameWithType: MouseCursor.SizeNS
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeNS
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SizeNS
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 57
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the vertical north/south (&quot;|&quot;) cursor.\n"
  example: []
  syntax:
    content: public static MouseCursor SizeNS { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property SizeNS As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.SizeNS*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeAll
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.SizeAll
  id: SizeAll
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: SizeAll
  nameWithType: MouseCursor.SizeAll
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeAll
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SizeAll
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 62
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the size all cursor which points in all directions.\n"
  example: []
  syntax:
    content: public static MouseCursor SizeAll { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property SizeAll As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.SizeAll*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.No
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.No
  id: No
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: No
  nameWithType: MouseCursor.No
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.No
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: No
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 67
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the cursor that points that something is invalid, usually a cross.\n"
  example: []
  syntax:
    content: public static MouseCursor No { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property No As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.No*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Hand
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.Hand
  id: Hand
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: Hand
  nameWithType: MouseCursor.Hand
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Hand
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Hand
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 72
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nGets the hand cursor, usually used for web links.\n"
  example: []
  syntax:
    content: public static MouseCursor Hand { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared ReadOnly Property Hand As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.Hand*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.FromTexture2D(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Input.MouseCursor.FromTexture2D(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
  id: FromTexture2D(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: FromTexture2D(Texture2D, Int32, Int32)
  nameWithType: MouseCursor.FromTexture2D(Texture2D, Int32, Int32)
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.FromTexture2D(Microsoft.Xna.Framework.Graphics.Texture2D, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FromTexture2D
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 80
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  summary: "\nCreates a mouse cursor from the specified texture.\n"
  example: []
  syntax:
    content: public static MouseCursor FromTexture2D(Texture2D texture, int originx, int originy)
    parameters:
    - id: texture
      type: Microsoft.Xna.Framework.Graphics.Texture2D
      description: Texture to use as the cursor image.
    - id: originx
      type: System.Int32
      description: X cordinate of the image that will be used for mouse position.
    - id: originy
      type: System.Int32
      description: Y cordinate of the image that will be used for mouse position.
    return:
      type: Microsoft.Xna.Framework.Input.MouseCursor
    content.vb: Public Shared Function FromTexture2D(texture As Texture2D, originx As Integer, originy As Integer) As MouseCursor
  overload: Microsoft.Xna.Framework.Input.MouseCursor.FromTexture2D*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Handle
  commentId: P:Microsoft.Xna.Framework.Input.MouseCursor.Handle
  id: Handle
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: MouseCursor.Handle
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Handle
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Handle
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 88
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  syntax:
    content: public IntPtr Handle { get; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public ReadOnly Property Handle As IntPtr
  overload: Microsoft.Xna.Framework.Input.MouseCursor.Handle*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Dispose
  commentId: M:Microsoft.Xna.Framework.Input.MouseCursor.Dispose
  id: Dispose
  parent: Microsoft.Xna.Framework.Input.MouseCursor
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MouseCursor.Dispose()
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Dispose()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Input/MouseCursor.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/Input/MouseCursor.cs
    startLine: 102
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Xna.Framework.Input.MouseCursor.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Input
  commentId: N:Microsoft.Xna.Framework.Input
  isExternal: false
  name: Microsoft.Xna.Framework.Input
  nameWithType: Microsoft.Xna.Framework.Input
  fullName: Microsoft.Xna.Framework.Input
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Arrow*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.Arrow
  isExternal: false
  name: Arrow
  nameWithType: MouseCursor.Arrow
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Arrow
- uid: Microsoft.Xna.Framework.Input.MouseCursor
  commentId: T:Microsoft.Xna.Framework.Input.MouseCursor
  parent: Microsoft.Xna.Framework.Input
  isExternal: false
  name: MouseCursor
  nameWithType: MouseCursor
  fullName: Microsoft.Xna.Framework.Input.MouseCursor
- uid: Microsoft.Xna.Framework.Input.MouseCursor.IBeam*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.IBeam
  isExternal: false
  name: IBeam
  nameWithType: MouseCursor.IBeam
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.IBeam
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Wait*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.Wait
  isExternal: false
  name: Wait
  nameWithType: MouseCursor.Wait
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Wait
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Crosshair*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.Crosshair
  isExternal: false
  name: Crosshair
  nameWithType: MouseCursor.Crosshair
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Crosshair
- uid: Microsoft.Xna.Framework.Input.MouseCursor.WaitArrow*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.WaitArrow
  isExternal: false
  name: WaitArrow
  nameWithType: MouseCursor.WaitArrow
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.WaitArrow
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeNWSE*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.SizeNWSE
  isExternal: false
  name: SizeNWSE
  nameWithType: MouseCursor.SizeNWSE
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeNWSE
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeNESW*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.SizeNESW
  isExternal: false
  name: SizeNESW
  nameWithType: MouseCursor.SizeNESW
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeNESW
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeWE*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.SizeWE
  isExternal: false
  name: SizeWE
  nameWithType: MouseCursor.SizeWE
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeWE
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeNS*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.SizeNS
  isExternal: false
  name: SizeNS
  nameWithType: MouseCursor.SizeNS
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeNS
- uid: Microsoft.Xna.Framework.Input.MouseCursor.SizeAll*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.SizeAll
  isExternal: false
  name: SizeAll
  nameWithType: MouseCursor.SizeAll
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.SizeAll
- uid: Microsoft.Xna.Framework.Input.MouseCursor.No*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.No
  isExternal: false
  name: No
  nameWithType: MouseCursor.No
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.No
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Hand*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.Hand
  isExternal: false
  name: Hand
  nameWithType: MouseCursor.Hand
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Hand
- uid: Microsoft.Xna.Framework.Input.MouseCursor.FromTexture2D*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.FromTexture2D
  isExternal: false
  name: FromTexture2D
  nameWithType: MouseCursor.FromTexture2D
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.FromTexture2D
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Handle*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.Handle
  isExternal: false
  name: Handle
  nameWithType: MouseCursor.Handle
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Handle
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Xna.Framework.Input.MouseCursor.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.Input.MouseCursor.Dispose
  isExternal: false
  name: Dispose
  nameWithType: MouseCursor.Dispose
  fullName: Microsoft.Xna.Framework.Input.MouseCursor.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
