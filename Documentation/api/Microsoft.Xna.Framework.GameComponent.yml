### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.GameComponent
  commentId: T:Microsoft.Xna.Framework.GameComponent
  id: GameComponent
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.GameComponent.#ctor(Microsoft.Xna.Framework.Game)
  - Microsoft.Xna.Framework.GameComponent.CompareTo(Microsoft.Xna.Framework.GameComponent)
  - Microsoft.Xna.Framework.GameComponent.Dispose
  - Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.GameComponent.Enabled
  - Microsoft.Xna.Framework.GameComponent.EnabledChanged
  - Microsoft.Xna.Framework.GameComponent.Finalize
  - Microsoft.Xna.Framework.GameComponent.Game
  - Microsoft.Xna.Framework.GameComponent.Initialize
  - Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)
  - Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)
  - Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)
  - Microsoft.Xna.Framework.GameComponent.UpdateOrder
  - Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged
  langs:
  - csharp
  - vb
  name: GameComponent
  nameWithType: GameComponent
  fullName: Microsoft.Xna.Framework.GameComponent
  type: Class
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GameComponent
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 8
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: 'public class GameComponent : IGameComponent, IUpdateable, IComparable<GameComponent>, IDisposable'
    content.vb: >-
      Public Class GameComponent
          Implements IGameComponent, IUpdateable, IComparable(Of GameComponent), IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Xna.Framework.DrawableGameComponent
  implements:
  - Microsoft.Xna.Framework.IGameComponent
  - Microsoft.Xna.Framework.IUpdateable
  - System.IComparable{Microsoft.Xna.Framework.GameComponent}
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.GameComponent.Game
  commentId: P:Microsoft.Xna.Framework.GameComponent.Game
  id: Game
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: Game
  nameWithType: GameComponent.Game
  fullName: Microsoft.Xna.Framework.GameComponent.Game
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Game
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 13
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public Game Game { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Game
    content.vb: Public ReadOnly Property Game As Game
  overload: Microsoft.Xna.Framework.GameComponent.Game*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.GameComponent.Enabled
  commentId: P:Microsoft.Xna.Framework.GameComponent.Enabled
  id: Enabled
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: GameComponent.Enabled
  fullName: Microsoft.Xna.Framework.GameComponent.Enabled
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Enabled
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 15
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Microsoft.Xna.Framework.GameComponent.Enabled*
  implements:
  - Microsoft.Xna.Framework.IUpdateable.Enabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameComponent.UpdateOrder
  commentId: P:Microsoft.Xna.Framework.GameComponent.UpdateOrder
  id: UpdateOrder
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: UpdateOrder
  nameWithType: GameComponent.UpdateOrder
  fullName: Microsoft.Xna.Framework.GameComponent.UpdateOrder
  type: Property
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: UpdateOrder
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 28
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public int UpdateOrder { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property UpdateOrder As Integer
  overload: Microsoft.Xna.Framework.GameComponent.UpdateOrder*
  implements:
  - Microsoft.Xna.Framework.IUpdateable.UpdateOrder
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameComponent.EnabledChanged
  commentId: E:Microsoft.Xna.Framework.GameComponent.EnabledChanged
  id: EnabledChanged
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: EnabledChanged
  nameWithType: GameComponent.EnabledChanged
  fullName: Microsoft.Xna.Framework.GameComponent.EnabledChanged
  type: Event
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnabledChanged
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 41
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public event EventHandler<EventArgs> EnabledChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event EnabledChanged As EventHandler(Of EventArgs)
  implements:
  - Microsoft.Xna.Framework.IUpdateable.EnabledChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged
  commentId: E:Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged
  id: UpdateOrderChanged
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: UpdateOrderChanged
  nameWithType: GameComponent.UpdateOrderChanged
  fullName: Microsoft.Xna.Framework.GameComponent.UpdateOrderChanged
  type: Event
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: UpdateOrderChanged
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 42
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public event EventHandler<EventArgs> UpdateOrderChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event UpdateOrderChanged As EventHandler(Of EventArgs)
  implements:
  - Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameComponent.#ctor(Microsoft.Xna.Framework.Game)
  commentId: M:Microsoft.Xna.Framework.GameComponent.#ctor(Microsoft.Xna.Framework.Game)
  id: '#ctor(Microsoft.Xna.Framework.Game)'
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: GameComponent(Game)
  nameWithType: GameComponent.GameComponent(Game)
  fullName: Microsoft.Xna.Framework.GameComponent.GameComponent(Microsoft.Xna.Framework.Game)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 44
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public GameComponent(Game game)
    parameters:
    - id: game
      type: Microsoft.Xna.Framework.Game
    content.vb: Public Sub New(game As Game)
  overload: Microsoft.Xna.Framework.GameComponent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameComponent.Finalize
  commentId: M:Microsoft.Xna.Framework.GameComponent.Finalize
  id: Finalize
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: GameComponent.Finalize()
  fullName: Microsoft.Xna.Framework.GameComponent.Finalize()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Finalize
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 49
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Microsoft.Xna.Framework.GameComponent.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.GameComponent.Initialize
  commentId: M:Microsoft.Xna.Framework.GameComponent.Initialize
  id: Initialize
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: GameComponent.Initialize()
  fullName: Microsoft.Xna.Framework.GameComponent.Initialize()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Initialize
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 54
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public virtual void Initialize()
    content.vb: Public Overridable Sub Initialize
  overload: Microsoft.Xna.Framework.GameComponent.Initialize*
  implements:
  - Microsoft.Xna.Framework.IGameComponent.Initialize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)
  id: Update(Microsoft.Xna.Framework.GameTime)
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: Update(GameTime)
  nameWithType: GameComponent.Update(GameTime)
  fullName: Microsoft.Xna.Framework.GameComponent.Update(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Update
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 56
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public virtual void Update(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Public Overridable Sub Update(gameTime As GameTime)
  overload: Microsoft.Xna.Framework.GameComponent.Update*
  implements:
  - Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object,System.EventArgs)
  id: OnUpdateOrderChanged(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: OnUpdateOrderChanged(Object, EventArgs)
  nameWithType: GameComponent.OnUpdateOrderChanged(Object, EventArgs)
  fullName: Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged(System.Object, System.EventArgs)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnUpdateOrderChanged
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 58
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected virtual void OnUpdateOrderChanged(object sender, EventArgs args)
    parameters:
    - id: sender
      type: System.Object
    - id: args
      type: System.EventArgs
    content.vb: Protected Overridable Sub OnUpdateOrderChanged(sender As Object, args As EventArgs)
  overload: Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object,System.EventArgs)
  id: OnEnabledChanged(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: OnEnabledChanged(Object, EventArgs)
  nameWithType: GameComponent.OnEnabledChanged(Object, EventArgs)
  fullName: Microsoft.Xna.Framework.GameComponent.OnEnabledChanged(System.Object, System.EventArgs)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnEnabledChanged
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 63
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: protected virtual void OnEnabledChanged(object sender, EventArgs args)
    parameters:
    - id: sender
      type: System.Object
    - id: args
      type: System.EventArgs
    content.vb: Protected Overridable Sub OnEnabledChanged(sender As Object, args As EventArgs)
  overload: Microsoft.Xna.Framework.GameComponent.OnEnabledChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: GameComponent.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 71
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nShuts down the component.\n"
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Microsoft.Xna.Framework.GameComponent.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Xna.Framework.GameComponent.Dispose
  commentId: M:Microsoft.Xna.Framework.GameComponent.Dispose
  id: Dispose
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: GameComponent.Dispose()
  fullName: Microsoft.Xna.Framework.GameComponent.Dispose()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 76
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nShuts down the component.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Xna.Framework.GameComponent.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameComponent.CompareTo(Microsoft.Xna.Framework.GameComponent)
  commentId: M:Microsoft.Xna.Framework.GameComponent.CompareTo(Microsoft.Xna.Framework.GameComponent)
  id: CompareTo(Microsoft.Xna.Framework.GameComponent)
  parent: Microsoft.Xna.Framework.GameComponent
  langs:
  - csharp
  - vb
  name: CompareTo(GameComponent)
  nameWithType: GameComponent.CompareTo(GameComponent)
  fullName: Microsoft.Xna.Framework.GameComponent.CompareTo(Microsoft.Xna.Framework.GameComponent)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameComponent.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CompareTo
    path: ../MonoGame.Framework/GameComponent.cs
    startLine: 84
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public int CompareTo(GameComponent other)
    parameters:
    - id: other
      type: Microsoft.Xna.Framework.GameComponent
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As GameComponent) As Integer
  overload: Microsoft.Xna.Framework.GameComponent.CompareTo*
  implements:
  - System.IComparable{Microsoft.Xna.Framework.GameComponent}.CompareTo(Microsoft.Xna.Framework.GameComponent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.IGameComponent
  commentId: T:Microsoft.Xna.Framework.IGameComponent
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: IGameComponent
  nameWithType: IGameComponent
  fullName: Microsoft.Xna.Framework.IGameComponent
- uid: Microsoft.Xna.Framework.IUpdateable
  commentId: T:Microsoft.Xna.Framework.IUpdateable
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Microsoft.Xna.Framework.IUpdateable
- uid: System.IComparable{Microsoft.Xna.Framework.GameComponent}
  commentId: T:System.IComparable{Microsoft.Xna.Framework.GameComponent}
  parent: System
  definition: System.IComparable`1
  name: IComparable<GameComponent>
  nameWithType: IComparable<GameComponent>
  fullName: System.IComparable<Microsoft.Xna.Framework.GameComponent>
  nameWithType.vb: IComparable(Of GameComponent)
  fullName.vb: System.IComparable(Of Microsoft.Xna.Framework.GameComponent)
  name.vb: IComparable(Of GameComponent)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.GameComponent
    name: GameComponent
    nameWithType: GameComponent
    fullName: Microsoft.Xna.Framework.GameComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.GameComponent
    name: GameComponent
    nameWithType: GameComponent
    fullName: Microsoft.Xna.Framework.GameComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.GameComponent.Game*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.Game
  isExternal: false
  name: Game
  nameWithType: GameComponent.Game
  fullName: Microsoft.Xna.Framework.GameComponent.Game
- uid: Microsoft.Xna.Framework.Game
  commentId: T:Microsoft.Xna.Framework.Game
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Game
  nameWithType: Game
  fullName: Microsoft.Xna.Framework.Game
- uid: Microsoft.Xna.Framework.GameComponent.Enabled*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.Enabled
  isExternal: false
  name: Enabled
  nameWithType: GameComponent.Enabled
  fullName: Microsoft.Xna.Framework.GameComponent.Enabled
- uid: Microsoft.Xna.Framework.IUpdateable.Enabled
  commentId: P:Microsoft.Xna.Framework.IUpdateable.Enabled
  parent: Microsoft.Xna.Framework.IUpdateable
  isExternal: false
  name: Enabled
  nameWithType: IUpdateable.Enabled
  fullName: Microsoft.Xna.Framework.IUpdateable.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.GameComponent.UpdateOrder*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.UpdateOrder
  isExternal: false
  name: UpdateOrder
  nameWithType: GameComponent.UpdateOrder
  fullName: Microsoft.Xna.Framework.GameComponent.UpdateOrder
- uid: Microsoft.Xna.Framework.IUpdateable.UpdateOrder
  commentId: P:Microsoft.Xna.Framework.IUpdateable.UpdateOrder
  parent: Microsoft.Xna.Framework.IUpdateable
  isExternal: false
  name: UpdateOrder
  nameWithType: IUpdateable.UpdateOrder
  fullName: Microsoft.Xna.Framework.IUpdateable.UpdateOrder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.IUpdateable.EnabledChanged
  commentId: E:Microsoft.Xna.Framework.IUpdateable.EnabledChanged
  parent: Microsoft.Xna.Framework.IUpdateable
  isExternal: false
  name: EnabledChanged
  nameWithType: IUpdateable.EnabledChanged
  fullName: Microsoft.Xna.Framework.IUpdateable.EnabledChanged
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged
  commentId: E:Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged
  parent: Microsoft.Xna.Framework.IUpdateable
  isExternal: false
  name: UpdateOrderChanged
  nameWithType: IUpdateable.UpdateOrderChanged
  fullName: Microsoft.Xna.Framework.IUpdateable.UpdateOrderChanged
- uid: Microsoft.Xna.Framework.GameComponent.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.#ctor
  isExternal: false
  name: GameComponent
  nameWithType: GameComponent.GameComponent
  fullName: Microsoft.Xna.Framework.GameComponent.GameComponent
- uid: Microsoft.Xna.Framework.GameComponent.Finalize*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.Finalize
  isExternal: false
  name: Finalize
  nameWithType: GameComponent.Finalize
  fullName: Microsoft.Xna.Framework.GameComponent.Finalize
- uid: Microsoft.Xna.Framework.GameComponent.Initialize*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.Initialize
  isExternal: false
  name: Initialize
  nameWithType: GameComponent.Initialize
  fullName: Microsoft.Xna.Framework.GameComponent.Initialize
- uid: Microsoft.Xna.Framework.IGameComponent.Initialize
  commentId: M:Microsoft.Xna.Framework.IGameComponent.Initialize
  parent: Microsoft.Xna.Framework.IGameComponent
  isExternal: false
  name: Initialize()
  nameWithType: IGameComponent.Initialize()
  fullName: Microsoft.Xna.Framework.IGameComponent.Initialize()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.IGameComponent.Initialize
    name: Initialize
    nameWithType: IGameComponent.Initialize
    fullName: Microsoft.Xna.Framework.IGameComponent.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.IGameComponent.Initialize
    name: Initialize
    nameWithType: IGameComponent.Initialize
    fullName: Microsoft.Xna.Framework.IGameComponent.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.GameComponent.Update*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.Update
  isExternal: false
  name: Update
  nameWithType: GameComponent.Update
  fullName: Microsoft.Xna.Framework.GameComponent.Update
- uid: Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
  parent: Microsoft.Xna.Framework.IUpdateable
  isExternal: false
  name: Update(GameTime)
  nameWithType: IUpdateable.Update(GameTime)
  fullName: Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: IUpdateable.Update
    fullName: Microsoft.Xna.Framework.IUpdateable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.IUpdateable.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: IUpdateable.Update
    fullName: Microsoft.Xna.Framework.IUpdateable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged
  isExternal: false
  name: OnUpdateOrderChanged
  nameWithType: GameComponent.OnUpdateOrderChanged
  fullName: Microsoft.Xna.Framework.GameComponent.OnUpdateOrderChanged
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.Xna.Framework.GameComponent.OnEnabledChanged*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.OnEnabledChanged
  isExternal: false
  name: OnEnabledChanged
  nameWithType: GameComponent.OnEnabledChanged
  fullName: Microsoft.Xna.Framework.GameComponent.OnEnabledChanged
- uid: Microsoft.Xna.Framework.GameComponent.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.Dispose
  isExternal: false
  name: Dispose
  nameWithType: GameComponent.Dispose
  fullName: Microsoft.Xna.Framework.GameComponent.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.GameComponent.CompareTo*
  commentId: Overload:Microsoft.Xna.Framework.GameComponent.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: GameComponent.CompareTo
  fullName: Microsoft.Xna.Framework.GameComponent.CompareTo
- uid: System.IComparable{Microsoft.Xna.Framework.GameComponent}.CompareTo(Microsoft.Xna.Framework.GameComponent)
  commentId: M:System.IComparable{Microsoft.Xna.Framework.GameComponent}.CompareTo(Microsoft.Xna.Framework.GameComponent)
  parent: System.IComparable{Microsoft.Xna.Framework.GameComponent}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(GameComponent)
  nameWithType: IComparable<GameComponent>.CompareTo(GameComponent)
  fullName: System.IComparable<Microsoft.Xna.Framework.GameComponent>.CompareTo(Microsoft.Xna.Framework.GameComponent)
  nameWithType.vb: IComparable(Of GameComponent).CompareTo(GameComponent)
  fullName.vb: System.IComparable(Of Microsoft.Xna.Framework.GameComponent).CompareTo(Microsoft.Xna.Framework.GameComponent)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<GameComponent>.CompareTo
    fullName: System.IComparable<Microsoft.Xna.Framework.GameComponent>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameComponent
    name: GameComponent
    nameWithType: GameComponent
    fullName: Microsoft.Xna.Framework.GameComponent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of GameComponent).CompareTo
    fullName: System.IComparable(Of Microsoft.Xna.Framework.GameComponent).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameComponent
    name: GameComponent
    nameWithType: GameComponent
    fullName: Microsoft.Xna.Framework.GameComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.GameComponent
  commentId: T:Microsoft.Xna.Framework.GameComponent
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: GameComponent
  nameWithType: GameComponent
  fullName: Microsoft.Xna.Framework.GameComponent
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
