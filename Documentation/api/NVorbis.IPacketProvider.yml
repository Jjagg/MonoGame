### YamlMime:ManagedReference
items:
- uid: NVorbis.IPacketProvider
  commentId: T:NVorbis.IPacketProvider
  id: IPacketProvider
  parent: NVorbis
  children:
  - NVorbis.IPacketProvider.CanSeek
  - NVorbis.IPacketProvider.ContainerBits
  - NVorbis.IPacketProvider.FindPacket(System.Int64,System.Func{NVorbis.DataPacket,NVorbis.DataPacket,System.Int32})
  - NVorbis.IPacketProvider.GetGranuleCount
  - NVorbis.IPacketProvider.GetNextPacket
  - NVorbis.IPacketProvider.GetPacket(System.Int32)
  - NVorbis.IPacketProvider.GetTotalPageCount
  - NVorbis.IPacketProvider.ParameterChange
  - NVorbis.IPacketProvider.PeekNextPacket
  - NVorbis.IPacketProvider.SeekToPacket(NVorbis.DataPacket,System.Int32)
  - NVorbis.IPacketProvider.StreamSerial
  langs:
  - csharp
  - vb
  name: IPacketProvider
  nameWithType: IPacketProvider
  fullName: NVorbis.IPacketProvider
  type: Interface
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: IPacketProvider
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 17
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nProvides packets on-demand for the Vorbis stream decoder.\n"
  example: []
  syntax:
    content: 'public interface IPacketProvider : IDisposable'
    content.vb: >-
      Public Interface IPacketProvider
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: NVorbis.IPacketProvider.StreamSerial
  commentId: P:NVorbis.IPacketProvider.StreamSerial
  id: StreamSerial
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: StreamSerial
  nameWithType: IPacketProvider.StreamSerial
  fullName: NVorbis.IPacketProvider.StreamSerial
  type: Property
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: StreamSerial
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 22
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nGets the serial number associated with this stream.\n"
  example: []
  syntax:
    content: int StreamSerial { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property StreamSerial As Integer
  overload: NVorbis.IPacketProvider.StreamSerial*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NVorbis.IPacketProvider.CanSeek
  commentId: P:NVorbis.IPacketProvider.CanSeek
  id: CanSeek
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: IPacketProvider.CanSeek
  fullName: NVorbis.IPacketProvider.CanSeek
  type: Property
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: CanSeek
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 27
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nGets whether seeking is supported on this stream.\n"
  example: []
  syntax:
    content: bool CanSeek { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CanSeek As Boolean
  overload: NVorbis.IPacketProvider.CanSeek*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NVorbis.IPacketProvider.ContainerBits
  commentId: P:NVorbis.IPacketProvider.ContainerBits
  id: ContainerBits
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: ContainerBits
  nameWithType: IPacketProvider.ContainerBits
  fullName: NVorbis.IPacketProvider.ContainerBits
  type: Property
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: ContainerBits
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 32
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nGets the number of bits of overhead in this stream&apos;s container.\n"
  example: []
  syntax:
    content: long ContainerBits { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property ContainerBits As Long
  overload: NVorbis.IPacketProvider.ContainerBits*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NVorbis.IPacketProvider.GetTotalPageCount
  commentId: M:NVorbis.IPacketProvider.GetTotalPageCount
  id: GetTotalPageCount
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: GetTotalPageCount()
  nameWithType: IPacketProvider.GetTotalPageCount()
  fullName: NVorbis.IPacketProvider.GetTotalPageCount()
  type: Method
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: GetTotalPageCount
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 39
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nRetrieves the total number of pages (or frames) this stream uses.\n"
  example: []
  syntax:
    content: int GetTotalPageCount()
    return:
      type: System.Int32
      description: The page count.
    content.vb: Function GetTotalPageCount As Integer
  overload: NVorbis.IPacketProvider.GetTotalPageCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="NVorbis.IPacketProvider.CanSeek" data-throw-if-not-resolved="false"></xref> is <code>False</code>.
- uid: NVorbis.IPacketProvider.GetNextPacket
  commentId: M:NVorbis.IPacketProvider.GetNextPacket
  id: GetNextPacket
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: GetNextPacket()
  nameWithType: IPacketProvider.GetNextPacket()
  fullName: NVorbis.IPacketProvider.GetNextPacket()
  type: Method
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: GetNextPacket
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 45
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nRetrieves the next packet in the stream.\n"
  example: []
  syntax:
    content: DataPacket GetNextPacket()
    return:
      type: NVorbis.DataPacket
      description: The next packet in the stream or <code>null</code> if no more packets.
    content.vb: Function GetNextPacket As DataPacket
  overload: NVorbis.IPacketProvider.GetNextPacket*
- uid: NVorbis.IPacketProvider.PeekNextPacket
  commentId: M:NVorbis.IPacketProvider.PeekNextPacket
  id: PeekNextPacket
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: PeekNextPacket()
  nameWithType: IPacketProvider.PeekNextPacket()
  fullName: NVorbis.IPacketProvider.PeekNextPacket()
  type: Method
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: PeekNextPacket
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 51
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nRetrieves the next packet in the stream but does not advance to the following packet.\n"
  example: []
  syntax:
    content: DataPacket PeekNextPacket()
    return:
      type: NVorbis.DataPacket
      description: The next packet in the stream or <code>null</code> if no more packets.
    content.vb: Function PeekNextPacket As DataPacket
  overload: NVorbis.IPacketProvider.PeekNextPacket*
- uid: NVorbis.IPacketProvider.GetPacket(System.Int32)
  commentId: M:NVorbis.IPacketProvider.GetPacket(System.Int32)
  id: GetPacket(System.Int32)
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: GetPacket(Int32)
  nameWithType: IPacketProvider.GetPacket(Int32)
  fullName: NVorbis.IPacketProvider.GetPacket(System.Int32)
  type: Method
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: GetPacket
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 60
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nRetrieves the packet specified from the stream.\n"
  example: []
  syntax:
    content: DataPacket GetPacket(int packetIndex)
    parameters:
    - id: packetIndex
      type: System.Int32
      description: The index of the packet to retrieve.
    return:
      type: NVorbis.DataPacket
      description: The specified packet.
    content.vb: Function GetPacket(packetIndex As Integer) As DataPacket
  overload: NVorbis.IPacketProvider.GetPacket*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code data-dev-comment-type="paramref" class="paramref">packetIndex</code> is less than 0 or past the end of the stream.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="NVorbis.IPacketProvider.CanSeek" data-throw-if-not-resolved="false"></xref> is <code>False</code>.
- uid: NVorbis.IPacketProvider.GetGranuleCount
  commentId: M:NVorbis.IPacketProvider.GetGranuleCount
  id: GetGranuleCount
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: GetGranuleCount()
  nameWithType: IPacketProvider.GetGranuleCount()
  fullName: NVorbis.IPacketProvider.GetGranuleCount()
  type: Method
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: GetGranuleCount
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 67
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nRetrieves the total number of granules in this Vorbis stream.\n"
  example: []
  syntax:
    content: long GetGranuleCount()
    return:
      type: System.Int64
      description: The number of samples
    content.vb: Function GetGranuleCount As Long
  overload: NVorbis.IPacketProvider.GetGranuleCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="NVorbis.IPacketProvider.CanSeek" data-throw-if-not-resolved="false"></xref> is <code>False</code>.
- uid: NVorbis.IPacketProvider.FindPacket(System.Int64,System.Func{NVorbis.DataPacket,NVorbis.DataPacket,System.Int32})
  commentId: M:NVorbis.IPacketProvider.FindPacket(System.Int64,System.Func{NVorbis.DataPacket,NVorbis.DataPacket,System.Int32})
  id: FindPacket(System.Int64,System.Func{NVorbis.DataPacket,NVorbis.DataPacket,System.Int32})
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: FindPacket(Int64, Func<DataPacket, DataPacket, Int32>)
  nameWithType: IPacketProvider.FindPacket(Int64, Func<DataPacket, DataPacket, Int32>)
  fullName: NVorbis.IPacketProvider.FindPacket(System.Int64, System.Func<NVorbis.DataPacket, NVorbis.DataPacket, System.Int32>)
  type: Method
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: FindPacket
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 76
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nFinds the packet index to the granule position specified in the current stream.\n"
  example: []
  syntax:
    content: DataPacket FindPacket(long granulePos, Func<DataPacket, DataPacket, int> packetGranuleCountCallback)
    parameters:
    - id: granulePos
      type: System.Int64
      description: The granule position to seek to.
    - id: packetGranuleCountCallback
      type: System.Func{NVorbis.DataPacket,NVorbis.DataPacket,System.Int32}
      description: A callback method that takes the current and previous packets and returns the number of granules in the current packet.
    return:
      type: NVorbis.DataPacket
      description: The index of the packet that includes the specified granule position or -1 if none found.
    content.vb: Function FindPacket(granulePos As Long, packetGranuleCountCallback As Func(Of DataPacket, DataPacket, Integer)) As DataPacket
  overload: NVorbis.IPacketProvider.FindPacket*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code data-dev-comment-type="paramref" class="paramref">granulePos</code> is less than 0 or is after the last granule.
  nameWithType.vb: IPacketProvider.FindPacket(Int64, Func(Of DataPacket, DataPacket, Int32))
  fullName.vb: NVorbis.IPacketProvider.FindPacket(System.Int64, System.Func(Of NVorbis.DataPacket, NVorbis.DataPacket, System.Int32))
  name.vb: FindPacket(Int64, Func(Of DataPacket, DataPacket, Int32))
- uid: NVorbis.IPacketProvider.SeekToPacket(NVorbis.DataPacket,System.Int32)
  commentId: M:NVorbis.IPacketProvider.SeekToPacket(NVorbis.DataPacket,System.Int32)
  id: SeekToPacket(NVorbis.DataPacket,System.Int32)
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: SeekToPacket(DataPacket, Int32)
  nameWithType: IPacketProvider.SeekToPacket(DataPacket, Int32)
  fullName: NVorbis.IPacketProvider.SeekToPacket(NVorbis.DataPacket, System.Int32)
  type: Method
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: SeekToPacket
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 83
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nSets the next packet to be returned, applying a pre-roll as necessary.\n"
  example: []
  syntax:
    content: void SeekToPacket(DataPacket packet, int preRoll)
    parameters:
    - id: packet
      type: NVorbis.DataPacket
      description: The packet to key from.
    - id: preRoll
      type: System.Int32
      description: The number of packets to return before the indicated packet.
    content.vb: Sub SeekToPacket(packet As DataPacket, preRoll As Integer)
  overload: NVorbis.IPacketProvider.SeekToPacket*
- uid: NVorbis.IPacketProvider.ParameterChange
  commentId: E:NVorbis.IPacketProvider.ParameterChange
  id: ParameterChange
  parent: NVorbis.IPacketProvider
  langs:
  - csharp
  - vb
  name: ParameterChange
  nameWithType: IPacketProvider.ParameterChange
  fullName: NVorbis.IPacketProvider.ParameterChange
  type: Event
  source:
    remote:
      path: NVorbis/IPacketProvider.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: ParameterChange
    path: ../ThirdParty/NVorbis/NVorbis/IPacketProvider.cs
    startLine: 88
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nOccurs when the stream is about to change parameters.\n"
  example: []
  syntax:
    content: event EventHandler<ParameterChangeEventArgs> ParameterChange
    return:
      type: System.EventHandler{NVorbis.ParameterChangeEventArgs}
    content.vb: Event ParameterChange As EventHandler(Of ParameterChangeEventArgs)
references:
- uid: NVorbis
  commentId: N:NVorbis
  isExternal: false
  name: NVorbis
  nameWithType: NVorbis
  fullName: NVorbis
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: NVorbis.IPacketProvider.StreamSerial*
  commentId: Overload:NVorbis.IPacketProvider.StreamSerial
  isExternal: false
  name: StreamSerial
  nameWithType: IPacketProvider.StreamSerial
  fullName: NVorbis.IPacketProvider.StreamSerial
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NVorbis.IPacketProvider.CanSeek*
  commentId: Overload:NVorbis.IPacketProvider.CanSeek
  isExternal: false
  name: CanSeek
  nameWithType: IPacketProvider.CanSeek
  fullName: NVorbis.IPacketProvider.CanSeek
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NVorbis.IPacketProvider.ContainerBits*
  commentId: Overload:NVorbis.IPacketProvider.ContainerBits
  isExternal: false
  name: ContainerBits
  nameWithType: IPacketProvider.ContainerBits
  fullName: NVorbis.IPacketProvider.ContainerBits
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: NVorbis.IPacketProvider.CanSeek
  commentId: P:NVorbis.IPacketProvider.CanSeek
- uid: NVorbis.IPacketProvider.GetTotalPageCount*
  commentId: Overload:NVorbis.IPacketProvider.GetTotalPageCount
  isExternal: false
  name: GetTotalPageCount
  nameWithType: IPacketProvider.GetTotalPageCount
  fullName: NVorbis.IPacketProvider.GetTotalPageCount
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: NVorbis.IPacketProvider.GetNextPacket*
  commentId: Overload:NVorbis.IPacketProvider.GetNextPacket
  isExternal: false
  name: GetNextPacket
  nameWithType: IPacketProvider.GetNextPacket
  fullName: NVorbis.IPacketProvider.GetNextPacket
- uid: NVorbis.DataPacket
  commentId: T:NVorbis.DataPacket
  parent: NVorbis
  isExternal: false
  name: DataPacket
  nameWithType: DataPacket
  fullName: NVorbis.DataPacket
- uid: NVorbis.IPacketProvider.PeekNextPacket*
  commentId: Overload:NVorbis.IPacketProvider.PeekNextPacket
  isExternal: false
  name: PeekNextPacket
  nameWithType: IPacketProvider.PeekNextPacket
  fullName: NVorbis.IPacketProvider.PeekNextPacket
- uid: NVorbis.IPacketProvider.GetPacket*
  commentId: Overload:NVorbis.IPacketProvider.GetPacket
  isExternal: false
  name: GetPacket
  nameWithType: IPacketProvider.GetPacket
  fullName: NVorbis.IPacketProvider.GetPacket
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: NVorbis.IPacketProvider.GetGranuleCount*
  commentId: Overload:NVorbis.IPacketProvider.GetGranuleCount
  isExternal: false
  name: GetGranuleCount
  nameWithType: IPacketProvider.GetGranuleCount
  fullName: NVorbis.IPacketProvider.GetGranuleCount
- uid: NVorbis.IPacketProvider.FindPacket*
  commentId: Overload:NVorbis.IPacketProvider.FindPacket
  isExternal: false
  name: FindPacket
  nameWithType: IPacketProvider.FindPacket
  fullName: NVorbis.IPacketProvider.FindPacket
- uid: System.Func{NVorbis.DataPacket,NVorbis.DataPacket,System.Int32}
  commentId: T:System.Func{NVorbis.DataPacket,NVorbis.DataPacket,System.Int32}
  parent: System
  definition: System.Func`3
  name: Func<DataPacket, DataPacket, Int32>
  nameWithType: Func<DataPacket, DataPacket, Int32>
  fullName: System.Func<NVorbis.DataPacket, NVorbis.DataPacket, System.Int32>
  nameWithType.vb: Func(Of DataPacket, DataPacket, Int32)
  fullName.vb: System.Func(Of NVorbis.DataPacket, NVorbis.DataPacket, System.Int32)
  name.vb: Func(Of DataPacket, DataPacket, Int32)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NVorbis.DataPacket
    name: DataPacket
    nameWithType: DataPacket
    fullName: NVorbis.DataPacket
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NVorbis.DataPacket
    name: DataPacket
    nameWithType: DataPacket
    fullName: NVorbis.DataPacket
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NVorbis.DataPacket
    name: DataPacket
    nameWithType: DataPacket
    fullName: NVorbis.DataPacket
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NVorbis.DataPacket
    name: DataPacket
    nameWithType: DataPacket
    fullName: NVorbis.DataPacket
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: NVorbis.IPacketProvider.SeekToPacket*
  commentId: Overload:NVorbis.IPacketProvider.SeekToPacket
  isExternal: false
  name: SeekToPacket
  nameWithType: IPacketProvider.SeekToPacket
  fullName: NVorbis.IPacketProvider.SeekToPacket
- uid: System.EventHandler{NVorbis.ParameterChangeEventArgs}
  commentId: T:System.EventHandler{NVorbis.ParameterChangeEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ParameterChangeEventArgs>
  nameWithType: EventHandler<ParameterChangeEventArgs>
  fullName: System.EventHandler<NVorbis.ParameterChangeEventArgs>
  nameWithType.vb: EventHandler(Of ParameterChangeEventArgs)
  fullName.vb: System.EventHandler(Of NVorbis.ParameterChangeEventArgs)
  name.vb: EventHandler(Of ParameterChangeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NVorbis.ParameterChangeEventArgs
    name: ParameterChangeEventArgs
    nameWithType: ParameterChangeEventArgs
    fullName: NVorbis.ParameterChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NVorbis.ParameterChangeEventArgs
    name: ParameterChangeEventArgs
    nameWithType: ParameterChangeEventArgs
    fullName: NVorbis.ParameterChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
