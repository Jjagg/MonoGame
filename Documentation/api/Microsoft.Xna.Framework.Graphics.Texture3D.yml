### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.Texture3D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture3D
  id: Texture3D
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.Texture3D.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat)
  - Microsoft.Xna.Framework.Graphics.Texture3D.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat,System.Boolean)
  - Microsoft.Xna.Framework.Graphics.Texture3D.Depth
  - Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[])
  - Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.Texture3D.Height
  - Microsoft.Xna.Framework.Graphics.Texture3D.SetData``1(``0[])
  - Microsoft.Xna.Framework.Graphics.Texture3D.SetData``1(``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.Texture3D.SetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.Texture3D.Width
  langs:
  - csharp
  - vb
  name: Texture3D
  nameWithType: Texture3D
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.OpenGL.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Texture3D
    path: ../MonoGame.Framework/Graphics/Texture3D.OpenGL.cs
    startLine: 11
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public class Texture3D : Texture, IDisposable'
    content.vb: >-
      Public Class Texture3D
          Inherits Texture
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Graphics.GraphicsResource
  - Microsoft.Xna.Framework.Graphics.Texture
  derivedClasses:
  - Microsoft.Xna.Framework.Graphics.RenderTarget3D
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Xna.Framework.Graphics.Texture.Format
  - Microsoft.Xna.Framework.Graphics.Texture.LevelCount
  - Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  - Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.Width
  commentId: P:Microsoft.Xna.Framework.Graphics.Texture3D.Width
  id: Width
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Texture3D.Width
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.Width
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Width
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 17
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.Width*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.Height
  commentId: P:Microsoft.Xna.Framework.Graphics.Texture3D.Height
  id: Height
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Texture3D.Height
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.Height
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Height
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 22
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.Height*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.Depth
  commentId: P:Microsoft.Xna.Framework.Graphics.Texture3D.Depth
  id: Depth
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: Texture3D.Depth
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.Depth
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Depth
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 27
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public int Depth { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Depth As Integer
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.Depth*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat)
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture3D.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat)'
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: Texture3D(GraphicsDevice, Int32, Int32, Int32, Boolean, SurfaceFormat)
  nameWithType: Texture3D.Texture3D(GraphicsDevice, Int32, Int32, Int32, Boolean, SurfaceFormat)
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.Texture3D(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Int32, System.Int32, System.Int32, System.Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 32
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Texture3D(GraphicsDevice graphicsDevice, int width, int height, int depth, bool mipMap, SurfaceFormat format)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: depth
      type: System.Int32
    - id: mipMap
      type: System.Boolean
    - id: format
      type: Microsoft.Xna.Framework.Graphics.SurfaceFormat
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, width As Integer, height As Integer, depth As Integer, mipMap As Boolean, format As SurfaceFormat)
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat,System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture3D.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat,System.Boolean)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat,System.Boolean)'
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: Texture3D(GraphicsDevice, Int32, Int32, Int32, Boolean, SurfaceFormat, Boolean)
  nameWithType: Texture3D.Texture3D(GraphicsDevice, Int32, Int32, Int32, Boolean, SurfaceFormat, Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.Texture3D(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Int32, System.Int32, System.Int32, System.Boolean, Microsoft.Xna.Framework.Graphics.SurfaceFormat, System.Boolean)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 37
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: protected Texture3D(GraphicsDevice graphicsDevice, int width, int height, int depth, bool mipMap, SurfaceFormat format, bool renderTarget)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: depth
      type: System.Int32
    - id: mipMap
      type: System.Boolean
    - id: format
      type: Microsoft.Xna.Framework.Graphics.SurfaceFormat
    - id: renderTarget
      type: System.Boolean
    content.vb: Protected Sub New(graphicsDevice As GraphicsDevice, width As Integer, height As Integer, depth As Integer, mipMap As Boolean, format As SurfaceFormat, renderTarget As Boolean)
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.SetData``1(``0[])
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture3D.SetData``1(``0[])
  id: SetData``1(``0[])
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: SetData<T>(T[])
  nameWithType: Texture3D.SetData<T>(T[])
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.SetData<T>(T[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetData
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 58
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void SetData<T>(T[] data)where T : struct'
    parameters:
    - id: data
      type: '{T}[]'
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T As Structure)(data As T())
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.SetData*
  nameWithType.vb: Texture3D.SetData(Of T)(T())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Texture3D.SetData(Of T)(T())
  name.vb: SetData(Of T)(T())
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.SetData``1(``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture3D.SetData``1(``0[],System.Int32,System.Int32)
  id: SetData``1(``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: SetData<T>(T[], Int32, Int32)
  nameWithType: Texture3D.SetData<T>(T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.SetData<T>(T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetData
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 65
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void SetData<T>(T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T As Structure)(data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.SetData*
  nameWithType.vb: Texture3D.SetData(Of T)(T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Texture3D.SetData(Of T)(T(), System.Int32, System.Int32)
  name.vb: SetData(Of T)(T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.SetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture3D.SetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)
  id: SetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: SetData<T>(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T[], Int32, Int32)
  nameWithType: Texture3D.SetData<T>(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.SetData<T>(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SetData
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 70
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public void SetData<T>(int level, int left, int top, int right, int bottom, int front, int back, T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: level
      type: System.Int32
    - id: left
      type: System.Int32
    - id: top
      type: System.Int32
    - id: right
      type: System.Int32
    - id: bottom
      type: System.Int32
    - id: front
      type: System.Int32
    - id: back
      type: System.Int32
    - id: data
      type: '{T}[]'
    - id: startIndex
      type: System.Int32
    - id: elementCount
      type: System.Int32
    typeParameters:
    - id: T
    content.vb: Public Sub SetData(Of T As Structure)(level As Integer, left As Integer, top As Integer, right As Integer, bottom As Integer, front As Integer, back As Integer, data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.SetData*
  nameWithType.vb: Texture3D.SetData(Of T)(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Texture3D.SetData(Of T)(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, T(), System.Int32, System.Int32)
  name.vb: SetData(Of T)(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)
  id: GetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: GetData<T>(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T[], Int32, Int32)
  nameWithType: Texture3D.GetData<T>(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.GetData<T>(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetData
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 97
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets a copy of 3D texture data, specifying a mipmap level, source box, start index, and number of elements.\n"
  example: []
  syntax:
    content: 'public void GetData<T>(int level, int left, int top, int right, int bottom, int front, int back, T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: level
      type: System.Int32
      description: Mipmap level.
    - id: left
      type: System.Int32
      description: Position of the left side of the box on the x-axis.
    - id: top
      type: System.Int32
      description: Position of the top of the box on the y-axis.
    - id: right
      type: System.Int32
      description: Position of the right side of the box on the x-axis.
    - id: bottom
      type: System.Int32
      description: Position of the bottom of the box on the y-axis.
    - id: front
      type: System.Int32
      description: Position of the front of the box on the z-axis.
    - id: back
      type: System.Int32
      description: Position of the back of the box on the z-axis.
    - id: data
      type: '{T}[]'
      description: Array of data.
    - id: startIndex
      type: System.Int32
      description: Index of the first element to get.
    - id: elementCount
      type: System.Int32
      description: Number of elements to get.
    typeParameters:
    - id: T
      description: The type of the elements in the array.
    content.vb: Public Sub GetData(Of T As Structure)(level As Integer, left As Integer, top As Integer, right As Integer, bottom As Integer, front As Integer, back As Integer, data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.GetData*
  nameWithType.vb: Texture3D.GetData(Of T)(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Texture3D.GetData(Of T)(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, T(), System.Int32, System.Int32)
  name.vb: GetData(Of T)(Int32, Int32, Int32, Int32, Int32, Int32, Int32, T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[],System.Int32,System.Int32)
  id: GetData``1(``0[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: GetData<T>(T[], Int32, Int32)
  nameWithType: Texture3D.GetData<T>(T[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.GetData<T>(T[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetData
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 110
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets a copy of 3D texture data, specifying a start index and number of elements.\n"
  example: []
  syntax:
    content: 'public void GetData<T>(T[] data, int startIndex, int elementCount)where T : struct'
    parameters:
    - id: data
      type: '{T}[]'
      description: Array of data.
    - id: startIndex
      type: System.Int32
      description: Index of the first element to get.
    - id: elementCount
      type: System.Int32
      description: Number of elements to get.
    typeParameters:
    - id: T
      description: The type of the elements in the array.
    content.vb: Public Sub GetData(Of T As Structure)(data As T(), startIndex As Integer, elementCount As Integer)
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.GetData*
  nameWithType.vb: Texture3D.GetData(Of T)(T(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Texture3D.GetData(Of T)(T(), System.Int32, System.Int32)
  name.vb: GetData(Of T)(T(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[])
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[])
  id: GetData``1(``0[])
  parent: Microsoft.Xna.Framework.Graphics.Texture3D
  langs:
  - csharp
  - vb
  name: GetData<T>(T[])
  nameWithType: Texture3D.GetData<T>(T[])
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.GetData<T>(T[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Texture3D.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetData
    path: ../MonoGame.Framework/Graphics/Texture3D.cs
    startLine: 120
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets a copy of 3D texture data.\n"
  example: []
  syntax:
    content: 'public void GetData<T>(T[] data)where T : struct'
    parameters:
    - id: data
      type: '{T}[]'
      description: Array of data.
    typeParameters:
    - id: T
      description: The type of the elements in the array.
    content.vb: Public Sub GetData(Of T As Structure)(data As T())
  overload: Microsoft.Xna.Framework.Graphics.Texture3D.GetData*
  nameWithType.vb: Texture3D.GetData(Of T)(T())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Texture3D.GetData(Of T)(T())
  name.vb: GetData(Of T)(T())
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsResource
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsResource
  nameWithType: GraphicsResource
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource
- uid: Microsoft.Xna.Framework.Graphics.Texture
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Texture
  nameWithType: Texture
  fullName: Microsoft.Xna.Framework.Graphics.Texture
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.Graphics.Texture.Format
  commentId: P:Microsoft.Xna.Framework.Graphics.Texture.Format
  parent: Microsoft.Xna.Framework.Graphics.Texture
  isExternal: false
  name: Format
  nameWithType: Texture.Format
  fullName: Microsoft.Xna.Framework.Graphics.Texture.Format
- uid: Microsoft.Xna.Framework.Graphics.Texture.LevelCount
  commentId: P:Microsoft.Xna.Framework.Graphics.Texture.LevelCount
  parent: Microsoft.Xna.Framework.Graphics.Texture
  isExternal: false
  name: LevelCount
  nameWithType: Texture.LevelCount
  fullName: Microsoft.Xna.Framework.Graphics.Texture.LevelCount
- uid: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  parent: Microsoft.Xna.Framework.Graphics.Texture
  isExternal: false
  name: GraphicsDeviceResetting()
  nameWithType: Texture.GraphicsDeviceResetting()
  fullName: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: Texture.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: Texture.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.Texture.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.Texture
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Texture.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Texture.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.Texture.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Texture.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Texture.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.Texture.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsResource.Dispose()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  commentId: E:Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Disposing
  nameWithType: GraphicsResource.Disposing
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsResource.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: IsDisposed
  nameWithType: GraphicsResource.IsDisposed
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Name
  nameWithType: GraphicsResource.Name
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Tag
  nameWithType: GraphicsResource.Tag
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: ToString()
  nameWithType: GraphicsResource.ToString()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.Width*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Texture3D.Width
  isExternal: false
  name: Width
  nameWithType: Texture3D.Width
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.Width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.Height*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Texture3D.Height
  isExternal: false
  name: Height
  nameWithType: Texture3D.Height
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.Height
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.Depth*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Texture3D.Depth
  isExternal: false
  name: Depth
  nameWithType: Texture3D.Depth
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.Depth
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Texture3D.#ctor
  isExternal: false
  name: Texture3D
  nameWithType: Texture3D.Texture3D
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.Texture3D
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.SurfaceFormat
  commentId: T:Microsoft.Xna.Framework.Graphics.SurfaceFormat
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: SurfaceFormat
  nameWithType: SurfaceFormat
  fullName: Microsoft.Xna.Framework.Graphics.SurfaceFormat
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.SetData*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Texture3D.SetData
  isExternal: false
  name: SetData
  nameWithType: Texture3D.SetData
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.SetData
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Xna.Framework.Graphics.Texture3D.GetData*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Texture3D.GetData
  isExternal: false
  name: GetData
  nameWithType: Texture3D.GetData
  fullName: Microsoft.Xna.Framework.Graphics.Texture3D.GetData
