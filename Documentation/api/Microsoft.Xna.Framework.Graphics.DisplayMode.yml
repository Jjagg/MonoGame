### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode
  commentId: T:Microsoft.Xna.Framework.Graphics.DisplayMode
  id: DisplayMode
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.DisplayMode.AspectRatio
  - Microsoft.Xna.Framework.Graphics.DisplayMode.Equals(System.Object)
  - Microsoft.Xna.Framework.Graphics.DisplayMode.Format
  - Microsoft.Xna.Framework.Graphics.DisplayMode.GetHashCode
  - Microsoft.Xna.Framework.Graphics.DisplayMode.Height
  - Microsoft.Xna.Framework.Graphics.DisplayMode.op_Equality(Microsoft.Xna.Framework.Graphics.DisplayMode,Microsoft.Xna.Framework.Graphics.DisplayMode)
  - Microsoft.Xna.Framework.Graphics.DisplayMode.op_Inequality(Microsoft.Xna.Framework.Graphics.DisplayMode,Microsoft.Xna.Framework.Graphics.DisplayMode)
  - Microsoft.Xna.Framework.Graphics.DisplayMode.TitleSafeArea
  - Microsoft.Xna.Framework.Graphics.DisplayMode.ToString
  - Microsoft.Xna.Framework.Graphics.DisplayMode.Width
  langs:
  - csharp
  - vb
  name: DisplayMode
  nameWithType: DisplayMode
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DisplayMode
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 36
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: >-
      [DataContract]

      public class DisplayMode
    content.vb: >-
      <DataContract>

      Public Class DisplayMode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.AspectRatio
  commentId: P:Microsoft.Xna.Framework.Graphics.DisplayMode.AspectRatio
  id: AspectRatio
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: AspectRatio
  nameWithType: DisplayMode.AspectRatio
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.AspectRatio
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AspectRatio
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 49
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public float AspectRatio { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property AspectRatio As Single
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.AspectRatio*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.Format
  commentId: P:Microsoft.Xna.Framework.Graphics.DisplayMode.Format
  id: Format
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: DisplayMode.Format
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Format
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Format
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 53
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public SurfaceFormat Format { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.SurfaceFormat
    content.vb: Public ReadOnly Property Format As SurfaceFormat
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.Format*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.Height
  commentId: P:Microsoft.Xna.Framework.Graphics.DisplayMode.Height
  id: Height
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: DisplayMode.Height
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Height
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Height
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 57
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.Height*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.Width
  commentId: P:Microsoft.Xna.Framework.Graphics.DisplayMode.Width
  id: Width
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: DisplayMode.Width
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Width
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Width
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 61
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.Width*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.TitleSafeArea
  commentId: P:Microsoft.Xna.Framework.Graphics.DisplayMode.TitleSafeArea
  id: TitleSafeArea
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: TitleSafeArea
  nameWithType: DisplayMode.TitleSafeArea
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.TitleSafeArea
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TitleSafeArea
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 65
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Rectangle TitleSafeArea { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Public ReadOnly Property TitleSafeArea As Rectangle
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.TitleSafeArea*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.op_Inequality(Microsoft.Xna.Framework.Graphics.DisplayMode,Microsoft.Xna.Framework.Graphics.DisplayMode)
  commentId: M:Microsoft.Xna.Framework.Graphics.DisplayMode.op_Inequality(Microsoft.Xna.Framework.Graphics.DisplayMode,Microsoft.Xna.Framework.Graphics.DisplayMode)
  id: op_Inequality(Microsoft.Xna.Framework.Graphics.DisplayMode,Microsoft.Xna.Framework.Graphics.DisplayMode)
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: Inequality(DisplayMode, DisplayMode)
  nameWithType: DisplayMode.Inequality(DisplayMode, DisplayMode)
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Inequality(Microsoft.Xna.Framework.Graphics.DisplayMode, Microsoft.Xna.Framework.Graphics.DisplayMode)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Inequality
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 84
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public static bool operator !=(DisplayMode left, DisplayMode right)
    parameters:
    - id: left
      type: Microsoft.Xna.Framework.Graphics.DisplayMode
    - id: right
      type: Microsoft.Xna.Framework.Graphics.DisplayMode
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As DisplayMode, right As DisplayMode) As Boolean
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.op_Equality(Microsoft.Xna.Framework.Graphics.DisplayMode,Microsoft.Xna.Framework.Graphics.DisplayMode)
  commentId: M:Microsoft.Xna.Framework.Graphics.DisplayMode.op_Equality(Microsoft.Xna.Framework.Graphics.DisplayMode,Microsoft.Xna.Framework.Graphics.DisplayMode)
  id: op_Equality(Microsoft.Xna.Framework.Graphics.DisplayMode,Microsoft.Xna.Framework.Graphics.DisplayMode)
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: Equality(DisplayMode, DisplayMode)
  nameWithType: DisplayMode.Equality(DisplayMode, DisplayMode)
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Equality(Microsoft.Xna.Framework.Graphics.DisplayMode, Microsoft.Xna.Framework.Graphics.DisplayMode)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Equality
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 89
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public static bool operator ==(DisplayMode left, DisplayMode right)
    parameters:
    - id: left
      type: Microsoft.Xna.Framework.Graphics.DisplayMode
    - id: right
      type: Microsoft.Xna.Framework.Graphics.DisplayMode
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As DisplayMode, right As DisplayMode) As Boolean
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.Equals(System.Object)
  commentId: M:Microsoft.Xna.Framework.Graphics.DisplayMode.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DisplayMode.Equals(Object)
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Equals(System.Object)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 108
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.GetHashCode
  commentId: M:Microsoft.Xna.Framework.Graphics.DisplayMode.GetHashCode
  id: GetHashCode
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DisplayMode.GetHashCode()
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.GetHashCode()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetHashCode
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 113
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.ToString
  commentId: M:Microsoft.Xna.Framework.Graphics.DisplayMode.ToString
  id: ToString
  parent: Microsoft.Xna.Framework.Graphics.DisplayMode
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DisplayMode.ToString()
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.ToString()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/DisplayMode.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ToString
    path: ../MonoGame.Framework/Graphics/DisplayMode.cs
    startLine: 118
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Microsoft.Xna.Framework.Graphics.DisplayMode.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.AspectRatio*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.AspectRatio
  isExternal: false
  name: AspectRatio
  nameWithType: DisplayMode.AspectRatio
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.AspectRatio
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.Format*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.Format
  isExternal: false
  name: Format
  nameWithType: DisplayMode.Format
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Format
- uid: Microsoft.Xna.Framework.Graphics.SurfaceFormat
  commentId: T:Microsoft.Xna.Framework.Graphics.SurfaceFormat
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: SurfaceFormat
  nameWithType: SurfaceFormat
  fullName: Microsoft.Xna.Framework.Graphics.SurfaceFormat
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.Height*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.Height
  isExternal: false
  name: Height
  nameWithType: DisplayMode.Height
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Height
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.Width*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.Width
  isExternal: false
  name: Width
  nameWithType: DisplayMode.Width
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Width
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.TitleSafeArea*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.TitleSafeArea
  isExternal: false
  name: TitleSafeArea
  nameWithType: DisplayMode.TitleSafeArea
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.TitleSafeArea
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.op_Inequality*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: DisplayMode.Inequality
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Inequality
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode
  commentId: T:Microsoft.Xna.Framework.Graphics.DisplayMode
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: DisplayMode
  nameWithType: DisplayMode
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.op_Equality*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.op_Equality
  isExternal: false
  name: Equality
  nameWithType: DisplayMode.Equality
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Equality
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.Equals*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.Equals
  isExternal: false
  name: Equals
  nameWithType: DisplayMode.Equals
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.GetHashCode*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: DisplayMode.GetHashCode
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode.ToString*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.DisplayMode.ToString
  isExternal: false
  name: ToString
  nameWithType: DisplayMode.ToString
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
