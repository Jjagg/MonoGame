### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Vector4
  commentId: T:Microsoft.Xna.Framework.Vector4
  id: Vector4
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector2,System.Single,System.Single)
  - Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector3,System.Single)
  - Microsoft.Xna.Framework.Vector4.#ctor(System.Single)
  - Microsoft.Xna.Framework.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single,System.Single)
  - Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,System.Single,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  - Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  - Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  - Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,System.Single)
  - Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  - Microsoft.Xna.Framework.Vector4.Equals(Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Equals(System.Object)
  - Microsoft.Xna.Framework.Vector4.GetHashCode
  - Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  - Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Length
  - Microsoft.Xna.Framework.Vector4.LengthSquared
  - Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  - Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.LerpPrecise(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  - Microsoft.Xna.Framework.Vector4.LerpPrecise(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,System.Single)
  - Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Normalize
  - Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.One
  - Microsoft.Xna.Framework.Vector4.op_Addition(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.op_Division(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.op_Division(Microsoft.Xna.Framework.Vector4,System.Single)
  - Microsoft.Xna.Framework.Vector4.op_Equality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.op_Inequality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.op_Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.op_Multiply(Microsoft.Xna.Framework.Vector4,System.Single)
  - Microsoft.Xna.Framework.Vector4.op_Multiply(System.Single,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.op_Subtraction(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.op_UnaryNegation(Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  - Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  - Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.ToString
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Matrix)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Quaternion)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[])
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[])
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Vector4.UnitW
  - Microsoft.Xna.Framework.Vector4.UnitX
  - Microsoft.Xna.Framework.Vector4.UnitY
  - Microsoft.Xna.Framework.Vector4.UnitZ
  - Microsoft.Xna.Framework.Vector4.W
  - Microsoft.Xna.Framework.Vector4.X
  - Microsoft.Xna.Framework.Vector4.Y
  - Microsoft.Xna.Framework.Vector4.Z
  - Microsoft.Xna.Framework.Vector4.Zero
  langs:
  - csharp
  - vb
  name: Vector4
  nameWithType: Vector4
  fullName: Microsoft.Xna.Framework.Vector4
  type: Struct
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Vector4
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDescribes a 4D-vector.\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof (Vector4TypeConverter))]

      [DataContract]

      public struct Vector4 : IEquatable<Vector4>
    content.vb: >-
      <TypeConverter(GetType(Vector4TypeConverter))>

      <DataContract>

      Public Structure Vector4
          Implements IEquatable(Of Vector4)
  implements:
  - System.IEquatable{Microsoft.Xna.Framework.Vector4}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.Xna.Framework.Design.Vector4TypeConverter
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Xna.Framework.Vector4.X
  commentId: F:Microsoft.Xna.Framework.Vector4.X
  id: X
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector4.X
  fullName: Microsoft.Xna.Framework.Vector4.X
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: X
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 37
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe x coordinate of this <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float X
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public X As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.Y
  commentId: F:Microsoft.Xna.Framework.Vector4.Y
  id: Y
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector4.Y
  fullName: Microsoft.Xna.Framework.Vector4.Y
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Y
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 43
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe y coordinate of this <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Y
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Y As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.Z
  commentId: F:Microsoft.Xna.Framework.Vector4.Z
  id: Z
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector4.Z
  fullName: Microsoft.Xna.Framework.Vector4.Z
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Z
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 49
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe z coordinate of this <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Z
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Z As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.W
  commentId: F:Microsoft.Xna.Framework.Vector4.W
  id: W
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: W
  nameWithType: Vector4.W
  fullName: Microsoft.Xna.Framework.Vector4.W
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: W
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 55
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe w coordinate of this <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float W
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public W As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.Zero
  commentId: P:Microsoft.Xna.Framework.Vector4.Zero
  id: Zero
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector4.Zero
  fullName: Microsoft.Xna.Framework.Vector4.Zero
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Zero
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 64
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> with components 0, 0, 0, 0.\n"
  example: []
  syntax:
    content: public static Vector4 Zero { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector4
    content.vb: Public Shared ReadOnly Property Zero As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Zero*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Vector4.One
  commentId: P:Microsoft.Xna.Framework.Vector4.One
  id: One
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector4.One
  fullName: Microsoft.Xna.Framework.Vector4.One
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: One
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 72
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> with components 1, 1, 1, 1.\n"
  example: []
  syntax:
    content: public static Vector4 One { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector4
    content.vb: Public Shared ReadOnly Property One As Vector4
  overload: Microsoft.Xna.Framework.Vector4.One*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Vector4.UnitX
  commentId: P:Microsoft.Xna.Framework.Vector4.UnitX
  id: UnitX
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector4.UnitX
  fullName: Microsoft.Xna.Framework.Vector4.UnitX
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: UnitX
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 80
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> with components 1, 0, 0, 0.\n"
  example: []
  syntax:
    content: public static Vector4 UnitX { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector4
    content.vb: Public Shared ReadOnly Property UnitX As Vector4
  overload: Microsoft.Xna.Framework.Vector4.UnitX*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Vector4.UnitY
  commentId: P:Microsoft.Xna.Framework.Vector4.UnitY
  id: UnitY
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector4.UnitY
  fullName: Microsoft.Xna.Framework.Vector4.UnitY
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: UnitY
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 88
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> with components 0, 1, 0, 0.\n"
  example: []
  syntax:
    content: public static Vector4 UnitY { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector4
    content.vb: Public Shared ReadOnly Property UnitY As Vector4
  overload: Microsoft.Xna.Framework.Vector4.UnitY*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Vector4.UnitZ
  commentId: P:Microsoft.Xna.Framework.Vector4.UnitZ
  id: UnitZ
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Vector4.UnitZ
  fullName: Microsoft.Xna.Framework.Vector4.UnitZ
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: UnitZ
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 96
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> with components 0, 0, 1, 0.\n"
  example: []
  syntax:
    content: public static Vector4 UnitZ { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector4
    content.vb: Public Shared ReadOnly Property UnitZ As Vector4
  overload: Microsoft.Xna.Framework.Vector4.UnitZ*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Vector4.UnitW
  commentId: P:Microsoft.Xna.Framework.Vector4.UnitW
  id: UnitW
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: UnitW
  nameWithType: Vector4.UnitW
  fullName: Microsoft.Xna.Framework.Vector4.UnitW
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: UnitW
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 104
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> with components 0, 0, 0, 1.\n"
  example: []
  syntax:
    content: public static Vector4 UnitW { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector4
    content.vb: Public Shared ReadOnly Property UnitW As Vector4
  overload: Microsoft.Xna.Framework.Vector4.UnitW*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Single, Single, Single, Single)
  nameWithType: Vector4.Vector4(Single, Single, Single, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Vector4(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 137
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nConstructs a 3d vector with X, Y, Z and W from four values.\n"
  example: []
  syntax:
    content: public Vector4(float x, float y, float z, float w)
    parameters:
    - id: x
      type: System.Single
      description: The x coordinate in 4d-space.
    - id: y
      type: System.Single
      description: The y coordinate in 4d-space.
    - id: z
      type: System.Single
      description: The z coordinate in 4d-space.
    - id: w
      type: System.Single
      description: The w coordinate in 4d-space.
    content.vb: Public Sub New(x As Single, y As Single, z As Single, w As Single)
  overload: Microsoft.Xna.Framework.Vector4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector2,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector2,System.Single,System.Single)
  id: '#ctor(Microsoft.Xna.Framework.Vector2,System.Single,System.Single)'
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Vector2, Single, Single)
  nameWithType: Vector4.Vector4(Vector2, Single, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Vector4(Microsoft.Xna.Framework.Vector2, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 151
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nConstructs a 3d vector with X and Z from <xref href=\"Microsoft.Xna.Framework.Vector2\" data-throw-if-not-resolved=\"false\"></xref> and Z and W from the scalars.\n"
  example: []
  syntax:
    content: public Vector4(Vector2 value, float z, float w)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector2
      description: The x and y coordinates in 4d-space.
    - id: z
      type: System.Single
      description: The z coordinate in 4d-space.
    - id: w
      type: System.Single
      description: The w coordinate in 4d-space.
    content.vb: Public Sub New(value As Vector2, z As Single, w As Single)
  overload: Microsoft.Xna.Framework.Vector4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector3,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.#ctor(Microsoft.Xna.Framework.Vector3,System.Single)
  id: '#ctor(Microsoft.Xna.Framework.Vector3,System.Single)'
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Vector3, Single)
  nameWithType: Vector4.Vector4(Vector3, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Vector4(Microsoft.Xna.Framework.Vector3, System.Single)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 164
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nConstructs a 3d vector with X, Y, Z from <xref href=\"Microsoft.Xna.Framework.Vector3\" data-throw-if-not-resolved=\"false\"></xref> and W from a scalar.\n"
  example: []
  syntax:
    content: public Vector4(Vector3 value, float w)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector3
      description: The x, y and z coordinates in 4d-space.
    - id: w
      type: System.Single
      description: The w coordinate in 4d-space.
    content.vb: Public Sub New(value As Vector3, w As Single)
  overload: Microsoft.Xna.Framework.Vector4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.#ctor(System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Single)
  nameWithType: Vector4.Vector4(Single)
  fullName: Microsoft.Xna.Framework.Vector4.Vector4(System.Single)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 176
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nConstructs a 4d vector with X, Y, Z and W set to the same value.\n"
  example: []
  syntax:
    content: public Vector4(float value)
    parameters:
    - id: value
      type: System.Single
      description: The x, y, z and w coordinates in 4d-space.
    content.vb: Public Sub New(value As Single)
  overload: Microsoft.Xna.Framework.Vector4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: Add(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Add(Vector4, Vector4)
  nameWithType: Vector4.Add(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Add
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 194
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nPerforms vector addition on <code data-dev-comment-type=\"paramref\" class=\"paramref\">value1</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">value2</code>.\n"
  example: []
  syntax:
    content: public static Vector4 Add(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector to add.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector to add.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the vector addition.
    content.vb: Public Shared Function Add(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Add(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  id: Add(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Add(ref Vector4, ref Vector4, out Vector4)
  nameWithType: Vector4.Add(ref Vector4, ref Vector4, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Add(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Add
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 211
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nPerforms vector addition on <code data-dev-comment-type=\"paramref\" class=\"paramref\">value1</code> and\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">value2</code>, storing the result of the\naddition in <code data-dev-comment-type=\"paramref\" class=\"paramref\">result</code>.\n"
  example: []
  syntax:
    content: public static void Add(ref Vector4 value1, ref Vector4 value2, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector to add.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector to add.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the vector addition.
    content.vb: Public Shared Sub Add(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Add*
  nameWithType.vb: Vector4.Add(ByRef Vector4, ByRef Vector4, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Add(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Add(ByRef Vector4, ByRef Vector4, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single,System.Single)
  id: Barycentric(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Barycentric(Vector4, Vector4, Vector4, Single, Single)
  nameWithType: Vector4.Barycentric(Vector4, Vector4, Vector4, Single, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Barycentric
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 228
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.\n"
  example: []
  syntax:
    content: public static Vector4 Barycentric(Vector4 value1, Vector4 value2, Vector4 value3, float amount1, float amount2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector of 4d-triangle.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector of 4d-triangle.
    - id: value3
      type: Microsoft.Xna.Framework.Vector4
      description: The third vector of 4d-triangle.
    - id: amount1
      type: System.Single
      description: Barycentric scalar <code>b2</code> which represents a weighting factor towards second vector of 4d-triangle.
    - id: amount2
      type: System.Single
      description: Barycentric scalar <code>b3</code> which represents a weighting factor towards third vector of 4d-triangle.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The cartesian translation of barycentric coordinates.
    content.vb: Public Shared Function Barycentric(value1 As Vector4, value2 As Vector4, value3 As Vector4, amount1 As Single, amount2 As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Barycentric*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,System.Single,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Barycentric(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,System.Single,Microsoft.Xna.Framework.Vector4@)
  id: Barycentric(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,System.Single,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Barycentric(ref Vector4, ref Vector4, ref Vector4, Single, Single, out Vector4)
  nameWithType: Vector4.Barycentric(ref Vector4, ref Vector4, ref Vector4, Single, Single, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Barycentric(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, System.Single, System.Single, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Barycentric
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 246
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.\n"
  example: []
  syntax:
    content: public static void Barycentric(ref Vector4 value1, ref Vector4 value2, ref Vector4 value3, float amount1, float amount2, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector of 4d-triangle.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector of 4d-triangle.
    - id: value3
      type: Microsoft.Xna.Framework.Vector4
      description: The third vector of 4d-triangle.
    - id: amount1
      type: System.Single
      description: Barycentric scalar <code>b2</code> which represents a weighting factor towards second vector of 4d-triangle.
    - id: amount2
      type: System.Single
      description: Barycentric scalar <code>b3</code> which represents a weighting factor towards third vector of 4d-triangle.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The cartesian translation of barycentric coordinates as an output parameter.
    content.vb: Public Shared Sub Barycentric(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef value3 As Vector4, amount1 As Single, amount2 As Single, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Barycentric*
  nameWithType.vb: Vector4.Barycentric(ByRef Vector4, ByRef Vector4, ByRef Vector4, Single, Single, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Barycentric(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, System.Single, System.Single, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Barycentric(ByRef Vector4, ByRef Vector4, ByRef Vector4, Single, Single, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  id: CatmullRom(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: CatmullRom(Vector4, Vector4, Vector4, Vector4, Single)
  nameWithType: Vector4.CatmullRom(Vector4, Vector4, Vector4, Vector4, Single)
  fullName: Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CatmullRom
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 263
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains CatmullRom interpolation of the specified vectors.\n"
  example: []
  syntax:
    content: public static Vector4 CatmullRom(Vector4 value1, Vector4 value2, Vector4 value3, Vector4 value4, float amount)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector in interpolation.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector in interpolation.
    - id: value3
      type: Microsoft.Xna.Framework.Vector4
      description: The third vector in interpolation.
    - id: value4
      type: Microsoft.Xna.Framework.Vector4
      description: The fourth vector in interpolation.
    - id: amount
      type: System.Single
      description: Weighting factor.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of CatmullRom interpolation.
    content.vb: Public Shared Function CatmullRom(value1 As Vector4, value2 As Vector4, value3 As Vector4, value4 As Vector4, amount As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.CatmullRom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.CatmullRom(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  id: CatmullRom(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: CatmullRom(ref Vector4, ref Vector4, ref Vector4, ref Vector4, Single, out Vector4)
  nameWithType: Vector4.CatmullRom(ref Vector4, ref Vector4, ref Vector4, ref Vector4, Single, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.CatmullRom(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, System.Single, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CatmullRom
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 281
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains CatmullRom interpolation of the specified vectors.\n"
  example: []
  syntax:
    content: public static void CatmullRom(ref Vector4 value1, ref Vector4 value2, ref Vector4 value3, ref Vector4 value4, float amount, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector in interpolation.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector in interpolation.
    - id: value3
      type: Microsoft.Xna.Framework.Vector4
      description: The third vector in interpolation.
    - id: value4
      type: Microsoft.Xna.Framework.Vector4
      description: The fourth vector in interpolation.
    - id: amount
      type: System.Single
      description: Weighting factor.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of CatmullRom interpolation as an output parameter.
    content.vb: Public Shared Sub CatmullRom(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef value3 As Vector4, ByRef value4 As Vector4, amount As Single, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.CatmullRom*
  nameWithType.vb: Vector4.CatmullRom(ByRef Vector4, ByRef Vector4, ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.CatmullRom(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, System.Single, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: CatmullRom(ByRef Vector4, ByRef Vector4, ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: Clamp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Clamp(Vector4, Vector4, Vector4)
  nameWithType: Vector4.Clamp(Vector4, Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Clamp
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 296
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nClamps the specified value within a range.\n"
  example: []
  syntax:
    content: public static Vector4 Clamp(Vector4 value1, Vector4 min, Vector4 max)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The value to clamp.
    - id: min
      type: Microsoft.Xna.Framework.Vector4
      description: The min value.
    - id: max
      type: Microsoft.Xna.Framework.Vector4
      description: The max value.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The clamped value.
    content.vb: Public Shared Function Clamp(value1 As Vector4, min As Vector4, max As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Clamp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  id: Clamp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Clamp(ref Vector4, ref Vector4, ref Vector4, out Vector4)
  nameWithType: Vector4.Clamp(ref Vector4, ref Vector4, ref Vector4, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Clamp(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Clamp
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 312
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nClamps the specified value within a range.\n"
  example: []
  syntax:
    content: public static void Clamp(ref Vector4 value1, ref Vector4 min, ref Vector4 max, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The value to clamp.
    - id: min
      type: Microsoft.Xna.Framework.Vector4
      description: The min value.
    - id: max
      type: Microsoft.Xna.Framework.Vector4
      description: The max value.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The clamped value as an output parameter.
    content.vb: Public Shared Sub Clamp(ByRef value1 As Vector4, ByRef min As Vector4, ByRef max As Vector4, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Clamp*
  nameWithType.vb: Vector4.Clamp(ByRef Vector4, ByRef Vector4, ByRef Vector4, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Clamp(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Clamp(ByRef Vector4, ByRef Vector4, ByRef Vector4, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: Distance(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Distance(Vector4, Vector4)
  nameWithType: Vector4.Distance(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Distance
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 326
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns the distance between two vectors.\n"
  example: []
  syntax:
    content: public static float Distance(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    return:
      type: System.Single
      description: The distance between two vectors.
    content.vb: Public Shared Function Distance(value1 As Vector4, value2 As Vector4) As Single
  overload: Microsoft.Xna.Framework.Vector4.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Distance(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  id: Distance(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Distance(ref Vector4, ref Vector4, out Single)
  nameWithType: Vector4.Distance(ref Vector4, ref Vector4, out Single)
  fullName: Microsoft.Xna.Framework.Vector4.Distance(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Distance
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 337
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns the distance between two vectors.\n"
  example: []
  syntax:
    content: public static void Distance(ref Vector4 value1, ref Vector4 value2, out float result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    - id: result
      type: System.Single
      description: The distance between two vectors as an output parameter.
    content.vb: Public Shared Sub Distance(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef result As Single)
  overload: Microsoft.Xna.Framework.Vector4.Distance*
  nameWithType.vb: Vector4.Distance(ByRef Vector4, ByRef Vector4, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Distance(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef System.Single)
  name.vb: Distance(ByRef Vector4, ByRef Vector4, ByRef Single)
- uid: Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: DistanceSquared(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector4, Vector4)
  nameWithType: Vector4.DistanceSquared(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DistanceSquared
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 348
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns the squared distance between two vectors.\n"
  example: []
  syntax:
    content: public static float DistanceSquared(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    return:
      type: System.Single
      description: The squared distance between two vectors.
    content.vb: Public Shared Function DistanceSquared(value1 As Vector4, value2 As Vector4) As Single
  overload: Microsoft.Xna.Framework.Vector4.DistanceSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  commentId: M:Microsoft.Xna.Framework.Vector4.DistanceSquared(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  id: DistanceSquared(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: DistanceSquared(ref Vector4, ref Vector4, out Single)
  nameWithType: Vector4.DistanceSquared(ref Vector4, ref Vector4, out Single)
  fullName: Microsoft.Xna.Framework.Vector4.DistanceSquared(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DistanceSquared
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 362
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns the squared distance between two vectors.\n"
  example: []
  syntax:
    content: public static void DistanceSquared(ref Vector4 value1, ref Vector4 value2, out float result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    - id: result
      type: System.Single
      description: The squared distance between two vectors as an output parameter.
    content.vb: Public Shared Sub DistanceSquared(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef result As Single)
  overload: Microsoft.Xna.Framework.Vector4.DistanceSquared*
  nameWithType.vb: Vector4.DistanceSquared(ByRef Vector4, ByRef Vector4, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.DistanceSquared(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef System.Single)
  name.vb: DistanceSquared(ByRef Vector4, ByRef Vector4, ByRef Single)
- uid: Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: Divide(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Divide(Vector4, Vector4)
  nameWithType: Vector4.Divide(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Divide
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 376
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the components of a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by the components of another <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 Divide(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Divisor <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of dividing the vectors.
    content.vb: Public Shared Function Divide(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4,System.Single)
  id: Divide(Microsoft.Xna.Framework.Vector4,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Divide(Vector4, Single)
  nameWithType: Vector4.Divide(Vector4, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Divide
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 391
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the components of a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by a scalar.\n"
  example: []
  syntax:
    content: public static Vector4 Divide(Vector4 value1, float divider)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: divider
      type: System.Single
      description: Divisor scalar.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of dividing a vector by a scalar.
    content.vb: Public Shared Function Divide(value1 As Vector4, divider As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  id: Divide(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Divide(ref Vector4, Single, out Vector4)
  nameWithType: Vector4.Divide(ref Vector4, Single, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Divide(ref Microsoft.Xna.Framework.Vector4, System.Single, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Divide
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 407
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the components of a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by a scalar.\n"
  example: []
  syntax:
    content: public static void Divide(ref Vector4 value1, float divider, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: divider
      type: System.Single
      description: Divisor scalar.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of dividing a vector by a scalar as an output parameter.
    content.vb: Public Shared Sub Divide(ByRef value1 As Vector4, divider As Single, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Divide*
  nameWithType.vb: Vector4.Divide(ByRef Vector4, Single, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Divide(ByRef Microsoft.Xna.Framework.Vector4, System.Single, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Divide(ByRef Vector4, Single, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Divide(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  id: Divide(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Divide(ref Vector4, ref Vector4, out Vector4)
  nameWithType: Vector4.Divide(ref Vector4, ref Vector4, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Divide(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Divide
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 422
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the components of a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by the components of another <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Divide(ref Vector4 value1, ref Vector4 value2, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Divisor <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of dividing the vectors as an output parameter.
    content.vb: Public Shared Sub Divide(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Divide*
  nameWithType.vb: Vector4.Divide(ByRef Vector4, ByRef Vector4, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Divide(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Divide(ByRef Vector4, ByRef Vector4, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: Dot(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Dot(Vector4, Vector4)
  nameWithType: Vector4.Dot(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dot
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 436
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a dot product of two vectors.\n"
  example: []
  syntax:
    content: public static float Dot(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    return:
      type: System.Single
      description: The dot product of two vectors.
    content.vb: Public Shared Function Dot(value1 As Vector4, value2 As Vector4) As Single
  overload: Microsoft.Xna.Framework.Vector4.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Dot(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  id: Dot(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Dot(ref Vector4, ref Vector4, out Single)
  nameWithType: Vector4.Dot(ref Vector4, ref Vector4, out Single)
  fullName: Microsoft.Xna.Framework.Vector4.Dot(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dot
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 447
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a dot product of two vectors.\n"
  example: []
  syntax:
    content: public static void Dot(ref Vector4 value1, ref Vector4 value2, out float result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    - id: result
      type: System.Single
      description: The dot product of two vectors as an output parameter.
    content.vb: Public Shared Sub Dot(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef result As Single)
  overload: Microsoft.Xna.Framework.Vector4.Dot*
  nameWithType.vb: Vector4.Dot(ByRef Vector4, ByRef Vector4, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Dot(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef System.Single)
  name.vb: Dot(ByRef Vector4, ByRef Vector4, ByRef Single)
- uid: Microsoft.Xna.Framework.Vector4.Equals(System.Object)
  commentId: M:Microsoft.Xna.Framework.Vector4.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Vector4.Equals(Object)
  fullName: Microsoft.Xna.Framework.Vector4.Equals(System.Object)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 457
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether current instance is equal to specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.Xna.Framework.Vector4.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Vector4.Equals(Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Equals(Microsoft.Xna.Framework.Vector4)
  id: Equals(Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Equals(Vector4)
  nameWithType: Vector4.Equals(Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Equals(Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 467
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether current instance is equal to specified <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Equals(Vector4 other)
    parameters:
    - id: other
      type: Microsoft.Xna.Framework.Vector4
      description: The <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Function Equals(other As Vector4) As Boolean
  overload: Microsoft.Xna.Framework.Vector4.Equals*
  implements:
  - System.IEquatable{Microsoft.Xna.Framework.Vector4}.Equals(Microsoft.Xna.Framework.Vector4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.GetHashCode
  commentId: M:Microsoft.Xna.Framework.Vector4.GetHashCode
  id: GetHashCode
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector4.GetHashCode()
  fullName: Microsoft.Xna.Framework.Vector4.GetHashCode()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetHashCode
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 479
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets the hash code of this <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Hash code of this <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.Xna.Framework.Vector4.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  id: Hermite(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Hermite(Vector4, Vector4, Vector4, Vector4, Single)
  nameWithType: Vector4.Hermite(Vector4, Vector4, Vector4, Vector4, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Hermite
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 500
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains hermite spline interpolation.\n"
  example: []
  syntax:
    content: public static Vector4 Hermite(Vector4 value1, Vector4 tangent1, Vector4 value2, Vector4 tangent2, float amount)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first position vector.
    - id: tangent1
      type: Microsoft.Xna.Framework.Vector4
      description: The first tangent vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second position vector.
    - id: tangent2
      type: Microsoft.Xna.Framework.Vector4
      description: The second tangent vector.
    - id: amount
      type: System.Single
      description: Weighting factor.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The hermite spline interpolation vector.
    content.vb: Public Shared Function Hermite(value1 As Vector4, tangent1 As Vector4, value2 As Vector4, tangent2 As Vector4, amount As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Hermite*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Hermite(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  id: Hermite(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Hermite(ref Vector4, ref Vector4, ref Vector4, ref Vector4, Single, out Vector4)
  nameWithType: Vector4.Hermite(ref Vector4, ref Vector4, ref Vector4, ref Vector4, Single, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Hermite(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, System.Single, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Hermite
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 517
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains hermite spline interpolation.\n"
  example: []
  syntax:
    content: public static void Hermite(ref Vector4 value1, ref Vector4 tangent1, ref Vector4 value2, ref Vector4 tangent2, float amount, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first position vector.
    - id: tangent1
      type: Microsoft.Xna.Framework.Vector4
      description: The first tangent vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second position vector.
    - id: tangent2
      type: Microsoft.Xna.Framework.Vector4
      description: The second tangent vector.
    - id: amount
      type: System.Single
      description: Weighting factor.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The hermite spline interpolation vector as an output parameter.
    content.vb: Public Shared Sub Hermite(ByRef value1 As Vector4, ByRef tangent1 As Vector4, ByRef value2 As Vector4, ByRef tangent2 As Vector4, amount As Single, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Hermite*
  nameWithType.vb: Vector4.Hermite(ByRef Vector4, ByRef Vector4, ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Hermite(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, System.Single, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Hermite(ByRef Vector4, ByRef Vector4, ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Length
  commentId: M:Microsoft.Xna.Framework.Vector4.Length
  id: Length
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Length()
  nameWithType: Vector4.Length()
  fullName: Microsoft.Xna.Framework.Vector4.Length()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Length
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 529
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns the length of this <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public float Length()
    return:
      type: System.Single
      description: The length of this <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Length As Single
  overload: Microsoft.Xna.Framework.Vector4.Length*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.LengthSquared
  commentId: M:Microsoft.Xna.Framework.Vector4.LengthSquared
  id: LengthSquared
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: LengthSquared()
  nameWithType: Vector4.LengthSquared()
  fullName: Microsoft.Xna.Framework.Vector4.LengthSquared()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: LengthSquared
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 538
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns the squared length of this <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public float LengthSquared()
    return:
      type: System.Single
      description: The squared length of this <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function LengthSquared As Single
  overload: Microsoft.Xna.Framework.Vector4.LengthSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  id: Lerp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Lerp(Vector4, Vector4, Single)
  nameWithType: Vector4.Lerp(Vector4, Vector4, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Lerp
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 550
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains linear interpolation of the specified vectors.\n"
  example: []
  syntax:
    content: public static Vector4 Lerp(Vector4 value1, Vector4 value2, float amount)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    - id: amount
      type: System.Single
      description: Weighting value(between 0.0 and 1.0).
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of linear interpolation of the specified vectors.
    content.vb: Public Shared Function Lerp(value1 As Vector4, value2 As Vector4, amount As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  id: Lerp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Lerp(ref Vector4, ref Vector4, Single, out Vector4)
  nameWithType: Vector4.Lerp(ref Vector4, ref Vector4, Single, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Lerp(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, System.Single, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Lerp
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 566
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains linear interpolation of the specified vectors.\n"
  example: []
  syntax:
    content: public static void Lerp(ref Vector4 value1, ref Vector4 value2, float amount, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    - id: amount
      type: System.Single
      description: Weighting value(between 0.0 and 1.0).
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of linear interpolation of the specified vectors as an output parameter.
    content.vb: Public Shared Sub Lerp(ByRef value1 As Vector4, ByRef value2 As Vector4, amount As Single, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Lerp*
  nameWithType.vb: Vector4.Lerp(ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Lerp(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, System.Single, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Lerp(ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.LerpPrecise(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.LerpPrecise(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  id: LerpPrecise(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: LerpPrecise(Vector4, Vector4, Single)
  nameWithType: Vector4.LerpPrecise(Vector4, Vector4, Single)
  fullName: Microsoft.Xna.Framework.Vector4.LerpPrecise(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: LerpPrecise
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 584
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains linear interpolation of the specified vectors.\nUses <xref href=\"Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> on MathHelper for the interpolation.\nLess efficient but more precise compared to <xref href=\"Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4%2cMicrosoft.Xna.Framework.Vector4%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\nSee remarks section of <xref href=\"Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> on MathHelper for more info.\n"
  example: []
  syntax:
    content: public static Vector4 LerpPrecise(Vector4 value1, Vector4 value2, float amount)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    - id: amount
      type: System.Single
      description: Weighting value(between 0.0 and 1.0).
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of linear interpolation of the specified vectors.
    content.vb: Public Shared Function LerpPrecise(value1 As Vector4, value2 As Vector4, amount As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.LerpPrecise*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.LerpPrecise(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.LerpPrecise(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  id: LerpPrecise(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: LerpPrecise(ref Vector4, ref Vector4, Single, out Vector4)
  nameWithType: Vector4.LerpPrecise(ref Vector4, ref Vector4, Single, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.LerpPrecise(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, System.Single, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: LerpPrecise
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 603
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains linear interpolation of the specified vectors.\nUses <xref href=\"Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> on MathHelper for the interpolation.\nLess efficient but more precise compared to <xref href=\"Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4%40%2cMicrosoft.Xna.Framework.Vector4%40%2cSystem.Single%2cMicrosoft.Xna.Framework.Vector4%40)\" data-throw-if-not-resolved=\"false\"></xref>.\nSee remarks section of <xref href=\"Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> on MathHelper for more info.\n"
  example: []
  syntax:
    content: public static void LerpPrecise(ref Vector4 value1, ref Vector4 value2, float amount, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    - id: amount
      type: System.Single
      description: Weighting value(between 0.0 and 1.0).
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of linear interpolation of the specified vectors as an output parameter.
    content.vb: Public Shared Sub LerpPrecise(ByRef value1 As Vector4, ByRef value2 As Vector4, amount As Single, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.LerpPrecise*
  nameWithType.vb: Vector4.LerpPrecise(ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.LerpPrecise(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, System.Single, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: LerpPrecise(ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: Max(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Max(Vector4, Vector4)
  nameWithType: Vector4.Max(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Max
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 617
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a maximal values from the two vectors.\n"
  example: []
  syntax:
    content: public static Vector4 Max(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> with maximal values from the two vectors.
    content.vb: Public Shared Function Max(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Max(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  id: Max(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Max(ref Vector4, ref Vector4, out Vector4)
  nameWithType: Vector4.Max(ref Vector4, ref Vector4, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Max(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Max
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 632
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a maximal values from the two vectors.\n"
  example: []
  syntax:
    content: public static void Max(ref Vector4 value1, ref Vector4 value2, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> with maximal values from the two vectors as an output parameter.
    content.vb: Public Shared Sub Max(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Max*
  nameWithType.vb: Vector4.Max(ByRef Vector4, ByRef Vector4, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Max(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Max(ByRef Vector4, ByRef Vector4, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: Min(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Min(Vector4, Vector4)
  nameWithType: Vector4.Min(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Min
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 646
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a minimal values from the two vectors.\n"
  example: []
  syntax:
    content: public static Vector4 Min(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> with minimal values from the two vectors.
    content.vb: Public Shared Function Min(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Min(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  id: Min(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Min(ref Vector4, ref Vector4, out Vector4)
  nameWithType: Vector4.Min(ref Vector4, ref Vector4, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Min(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Min
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 661
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a minimal values from the two vectors.\n"
  example: []
  syntax:
    content: public static void Min(ref Vector4 value1, ref Vector4 value2, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: The first vector.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: The second vector.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> with minimal values from the two vectors as an output parameter.
    content.vb: Public Shared Sub Min(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Min*
  nameWithType.vb: Vector4.Min(ByRef Vector4, ByRef Vector4, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Min(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Min(ByRef Vector4, ByRef Vector4, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, Vector4)
  nameWithType: Vector4.Multiply(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Multiply
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 675
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a multiplication of two vectors.\n"
  example: []
  syntax:
    content: public static Vector4 Multiply(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the vector multiplication.
    content.vb: Public Shared Function Multiply(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4,System.Single)
  id: Multiply(Microsoft.Xna.Framework.Vector4,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, Single)
  nameWithType: Vector4.Multiply(Vector4, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Multiply
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 690
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a multiplication of <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> and a scalar.\n"
  example: []
  syntax:
    content: public static Vector4 Multiply(Vector4 value1, float scaleFactor)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: scaleFactor
      type: System.Single
      description: Scalar value.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the vector multiplication with a scalar.
    content.vb: Public Shared Function Multiply(value1 As Vector4, scaleFactor As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  id: Multiply(Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(ref Vector4, Single, out Vector4)
  nameWithType: Vector4.Multiply(ref Vector4, Single, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Multiply(ref Microsoft.Xna.Framework.Vector4, System.Single, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Multiply
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 705
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a multiplication of <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> and a scalar.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Vector4 value1, float scaleFactor, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: scaleFactor
      type: System.Single
      description: Scalar value.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the multiplication with a scalar as an output parameter.
    content.vb: Public Shared Sub Multiply(ByRef value1 As Vector4, scaleFactor As Single, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Multiply*
  nameWithType.vb: Vector4.Multiply(ByRef Vector4, Single, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Multiply(ByRef Microsoft.Xna.Framework.Vector4, System.Single, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Multiply(ByRef Vector4, Single, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  id: Multiply(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(ref Vector4, ref Vector4, out Vector4)
  nameWithType: Vector4.Multiply(ref Vector4, ref Vector4, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Multiply(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Multiply
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 719
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a multiplication of two vectors.\n"
  example: []
  syntax:
    content: public static void Multiply(ref Vector4 value1, ref Vector4 value2, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the vector multiplication as an output parameter.
    content.vb: Public Shared Sub Multiply(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Multiply*
  nameWithType.vb: Vector4.Multiply(ByRef Vector4, ByRef Vector4, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Multiply(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Multiply(ByRef Vector4, ByRef Vector4, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4)
  id: Negate(Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Negate(Vector4)
  nameWithType: Vector4.Negate(Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Negate
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 732
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains the specified vector inversion.\n"
  example: []
  syntax:
    content: public static Vector4 Negate(Vector4 value)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the vector inversion.
    content.vb: Public Shared Function Negate(value As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Negate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Negate(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  id: Negate(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Negate(ref Vector4, out Vector4)
  nameWithType: Vector4.Negate(ref Vector4, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Negate(ref Microsoft.Xna.Framework.Vector4, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Negate
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 743
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains the specified vector inversion.\n"
  example: []
  syntax:
    content: public static void Negate(ref Vector4 value, out Vector4 result)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the vector inversion as an output parameter.
    content.vb: Public Shared Sub Negate(ByRef value As Vector4, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Negate*
  nameWithType.vb: Vector4.Negate(ByRef Vector4, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Negate(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Negate(ByRef Vector4, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Normalize
  commentId: M:Microsoft.Xna.Framework.Vector4.Normalize
  id: Normalize
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector4.Normalize()
  fullName: Microsoft.Xna.Framework.Vector4.Normalize()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Normalize
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 754
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nTurns this <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> to a unit vector with the same direction.\n"
  example: []
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize
  overload: Microsoft.Xna.Framework.Vector4.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4)
  id: Normalize(Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Normalize(Vector4)
  nameWithType: Vector4.Normalize(Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Normalize
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 769
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a normalized values from another vector.\n"
  example: []
  syntax:
    content: public static Vector4 Normalize(Vector4 value)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Unit vector.
    content.vb: Public Shared Function Normalize(value As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Normalize(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  id: Normalize(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Normalize(ref Vector4, out Vector4)
  nameWithType: Vector4.Normalize(ref Vector4, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Normalize(ref Microsoft.Xna.Framework.Vector4, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Normalize
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 781
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a normalized values from another vector.\n"
  example: []
  syntax:
    content: public static void Normalize(ref Vector4 value, out Vector4 result)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: Unit vector as an output parameter.
    content.vb: Public Shared Sub Normalize(ByRef value As Vector4, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Normalize*
  nameWithType.vb: Vector4.Normalize(ByRef Vector4, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Normalize(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Normalize(ByRef Vector4, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  id: SmoothStep(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: SmoothStep(Vector4, Vector4, Single)
  nameWithType: Vector4.SmoothStep(Vector4, Vector4, Single)
  fullName: Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SmoothStep
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 798
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains cubic interpolation of the specified vectors.\n"
  example: []
  syntax:
    content: public static Vector4 SmoothStep(Vector4 value1, Vector4 value2, float amount)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: amount
      type: System.Single
      description: Weighting value.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Cubic interpolation of the specified vectors.
    content.vb: Public Shared Function SmoothStep(value1 As Vector4, value2 As Vector4, amount As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.SmoothStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.SmoothStep(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  id: SmoothStep(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: SmoothStep(ref Vector4, ref Vector4, Single, out Vector4)
  nameWithType: Vector4.SmoothStep(ref Vector4, ref Vector4, Single, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.SmoothStep(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, System.Single, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SmoothStep
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 814
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains cubic interpolation of the specified vectors.\n"
  example: []
  syntax:
    content: public static void SmoothStep(ref Vector4 value1, ref Vector4 value2, float amount, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: amount
      type: System.Single
      description: Weighting value.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: Cubic interpolation of the specified vectors as an output parameter.
    content.vb: Public Shared Sub SmoothStep(ByRef value1 As Vector4, ByRef value2 As Vector4, amount As Single, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.SmoothStep*
  nameWithType.vb: Vector4.SmoothStep(ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.SmoothStep(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, System.Single, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: SmoothStep(ByRef Vector4, ByRef Vector4, Single, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: Subtract(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Subtract(Vector4, Vector4)
  nameWithType: Vector4.Subtract(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Subtract
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 828
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains subtraction of on <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> from a another.\n"
  example: []
  syntax:
    content: public static Vector4 Subtract(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the vector subtraction.
    content.vb: Public Shared Function Subtract(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Subtract(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  id: Subtract(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Subtract(ref Vector4, ref Vector4, out Vector4)
  nameWithType: Vector4.Subtract(ref Vector4, ref Vector4, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Subtract(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Vector4, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Subtract
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 843
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains subtraction of on <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> from a another.\n"
  example: []
  syntax:
    content: public static void Subtract(ref Vector4 value1, ref Vector4 value2, out Vector4 result)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: The result of the vector subtraction as an output parameter.
    content.vb: Public Shared Sub Subtract(ByRef value1 As Vector4, ByRef value2 As Vector4, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Subtract*
  nameWithType.vb: Vector4.Subtract(ByRef Vector4, ByRef Vector4, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Subtract(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Subtract(ByRef Vector4, ByRef Vector4, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)
  id: Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector2, Matrix)
  nameWithType: Vector4.Transform(Vector2, Matrix)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 859
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 2d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 Transform(Vector2 value, Matrix matrix)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector2
      description: Source <xref href="Microsoft.Xna.Framework.Vector2" data-throw-if-not-resolved="false"></xref>.
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The transformation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Transform(value As Vector2, matrix As Matrix) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)
  id: Transform(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Quaternion)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector2, Quaternion)
  nameWithType: Vector4.Transform(Vector2, Quaternion)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Quaternion)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 872
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 2d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 Transform(Vector2 value, Quaternion rotation)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector2
      description: Source <xref href="Microsoft.Xna.Framework.Vector2" data-throw-if-not-resolved="false"></xref>.
    - id: rotation
      type: Microsoft.Xna.Framework.Quaternion
      description: The <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> which contains rotation transformation.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Transform(value As Vector2, rotation As Quaternion) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)
  id: Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Matrix)
  nameWithType: Vector4.Transform(Vector3, Matrix)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 885
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 3d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 Transform(Vector3 value, Matrix matrix)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector3
      description: Source <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref>.
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The transformation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Transform(value As Vector3, matrix As Matrix) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)
  id: Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Quaternion)
  nameWithType: Vector4.Transform(Vector3, Quaternion)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3, Microsoft.Xna.Framework.Quaternion)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 898
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 3d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 Transform(Vector3 value, Quaternion rotation)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector3
      description: Source <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref>.
    - id: rotation
      type: Microsoft.Xna.Framework.Quaternion
      description: The <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> which contains rotation transformation.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Transform(value As Vector3, rotation As Quaternion) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Matrix)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Matrix)
  id: Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Matrix)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector4, Matrix)
  nameWithType: Vector4.Transform(Vector4, Matrix)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Matrix)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 911
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 4d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 Transform(Vector4 value, Matrix matrix)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The transformation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Transform(value As Vector4, matrix As Matrix) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Quaternion)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Quaternion)
  id: Transform(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Quaternion)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector4, Quaternion)
  nameWithType: Vector4.Transform(Vector4, Quaternion)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Quaternion)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 923
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 4d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 Transform(Vector4 value, Quaternion rotation)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: rotation
      type: Microsoft.Xna.Framework.Quaternion
      description: The <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> which contains rotation transformation.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Transform(value As Vector4, rotation As Quaternion) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  id: Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(ref Vector2, ref Matrix, out Vector4)
  nameWithType: Vector4.Transform(ref Vector2, ref Matrix, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(ref Microsoft.Xna.Framework.Vector2, ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 936
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 2d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector2 value, ref Matrix matrix, out Vector4 result)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector2
      description: Source <xref href="Microsoft.Xna.Framework.Vector2" data-throw-if-not-resolved="false"></xref>.
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The transformation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub Transform(ByRef value As Vector2, ByRef matrix As Matrix, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(ByRef Vector2, ByRef Matrix, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(ByRef Microsoft.Xna.Framework.Vector2, ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Transform(ByRef Vector2, ByRef Matrix, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  id: Transform(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(ref Vector2, ref Quaternion, out Vector4)
  nameWithType: Vector4.Transform(ref Vector2, ref Quaternion, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(ref Microsoft.Xna.Framework.Vector2, ref Microsoft.Xna.Framework.Quaternion, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 950
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 2d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector2 value, ref Quaternion rotation, out Vector4 result)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector2
      description: Source <xref href="Microsoft.Xna.Framework.Vector2" data-throw-if-not-resolved="false"></xref>.
    - id: rotation
      type: Microsoft.Xna.Framework.Quaternion
      description: The <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> which contains rotation transformation.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub Transform(ByRef value As Vector2, ByRef rotation As Quaternion, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(ByRef Vector2, ByRef Quaternion, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(ByRef Microsoft.Xna.Framework.Vector2, ByRef Microsoft.Xna.Framework.Quaternion, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Transform(ByRef Vector2, ByRef Quaternion, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  id: Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(ref Vector3, ref Matrix, out Vector4)
  nameWithType: Vector4.Transform(ref Vector3, ref Matrix, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 961
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 3d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector3 value, ref Matrix matrix, out Vector4 result)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector3
      description: Source <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref>.
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The transformation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub Transform(ByRef value As Vector3, ByRef matrix As Matrix, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(ByRef Vector3, ByRef Matrix, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Transform(ByRef Vector3, ByRef Matrix, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  id: Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(ref Vector3, ref Quaternion, out Vector4)
  nameWithType: Vector4.Transform(ref Vector3, ref Quaternion, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(ref Microsoft.Xna.Framework.Vector3, ref Microsoft.Xna.Framework.Quaternion, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 975
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 3d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector3 value, ref Quaternion rotation, out Vector4 result)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector3
      description: Source <xref href="Microsoft.Xna.Framework.Vector3" data-throw-if-not-resolved="false"></xref>.
    - id: rotation
      type: Microsoft.Xna.Framework.Quaternion
      description: The <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> which contains rotation transformation.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub Transform(ByRef value As Vector3, ByRef rotation As Quaternion, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(ByRef Vector3, ByRef Quaternion, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(ByRef Microsoft.Xna.Framework.Vector3, ByRef Microsoft.Xna.Framework.Quaternion, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Transform(ByRef Vector3, ByRef Quaternion, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  id: Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(ref Vector4, ref Matrix, out Vector4)
  nameWithType: Vector4.Transform(ref Vector4, ref Matrix, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Matrix, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 986
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 4d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector4 value, ref Matrix matrix, out Vector4 result)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The transformation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub Transform(ByRef value As Vector4, ByRef matrix As Matrix, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(ByRef Vector4, ByRef Matrix, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Matrix, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Transform(ByRef Vector4, ByRef Matrix, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  id: Transform(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4@)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(ref Vector4, ref Quaternion, out Vector4)
  nameWithType: Vector4.Transform(ref Vector4, ref Quaternion, out Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(ref Microsoft.Xna.Framework.Vector4, ref Microsoft.Xna.Framework.Quaternion, out Microsoft.Xna.Framework.Vector4)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1004
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> that contains a transformation of 4d-vector by the specified <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Transform(ref Vector4 value, ref Quaternion rotation, out Vector4 result)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    - id: rotation
      type: Microsoft.Xna.Framework.Quaternion
      description: The <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> which contains rotation transformation.
    - id: result
      type: Microsoft.Xna.Framework.Vector4
      description: Transformed <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> as an output parameter.
    content.vb: Public Shared Sub Transform(ByRef value As Vector4, ByRef rotation As Quaternion, ByRef result As Vector4)
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(ByRef Vector4, ByRef Quaternion, ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(ByRef Microsoft.Xna.Framework.Vector4, ByRef Microsoft.Xna.Framework.Quaternion, ByRef Microsoft.Xna.Framework.Vector4)
  name.vb: Transform(ByRef Vector4, ByRef Quaternion, ByRef Vector4)
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)
  id: Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector4[], Int32, ref Matrix, Vector4[], Int32, Int32)
  nameWithType: Vector4.Transform(Vector4[], Int32, ref Matrix, Vector4[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[], System.Int32, ref Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Vector4[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1018
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nApply transformation on vectors within array of <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by the specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> and places the results in an another array.\n"
  example: []
  syntax:
    content: public static void Transform(Vector4[] sourceArray, int sourceIndex, ref Matrix matrix, Vector4[] destinationArray, int destinationIndex, int length)
    parameters:
    - id: sourceArray
      type: Microsoft.Xna.Framework.Vector4[]
      description: Source array.
    - id: sourceIndex
      type: System.Int32
      description: The starting index of transformation in the source array.
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The transformation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: destinationArray
      type: Microsoft.Xna.Framework.Vector4[]
      description: Destination array.
    - id: destinationIndex
      type: System.Int32
      description: The starting index in the destination array, where the first <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> should be written.
    - id: length
      type: System.Int32
      description: The number of vectors to be transformed.
    content.vb: Public Shared Sub Transform(sourceArray As Vector4(), sourceIndex As Integer, ByRef matrix As Matrix, destinationArray As Vector4(), destinationIndex As Integer, length As Integer)
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(Vector4(), Int32, ByRef Matrix, Vector4(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4(), System.Int32, ByRef Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Vector4(), System.Int32, System.Int32)
  name.vb: Transform(Vector4(), Int32, ByRef Matrix, Vector4(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)
  id: Transform(Microsoft.Xna.Framework.Vector4[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[],System.Int32,System.Int32)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector4[], Int32, ref Quaternion, Vector4[], Int32, Int32)
  nameWithType: Vector4.Transform(Vector4[], Int32, ref Quaternion, Vector4[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[], System.Int32, ref Microsoft.Xna.Framework.Quaternion, Microsoft.Xna.Framework.Vector4[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1053
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nApply transformation on vectors within array of <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by the specified <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref> and places the results in an another array.\n"
  example: []
  syntax:
    content: public static void Transform(Vector4[] sourceArray, int sourceIndex, ref Quaternion rotation, Vector4[] destinationArray, int destinationIndex, int length)
    parameters:
    - id: sourceArray
      type: Microsoft.Xna.Framework.Vector4[]
      description: Source array.
    - id: sourceIndex
      type: System.Int32
      description: The starting index of transformation in the source array.
    - id: rotation
      type: Microsoft.Xna.Framework.Quaternion
      description: The <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> which contains rotation transformation.
    - id: destinationArray
      type: Microsoft.Xna.Framework.Vector4[]
      description: Destination array.
    - id: destinationIndex
      type: System.Int32
      description: The starting index in the destination array, where the first <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> should be written.
    - id: length
      type: System.Int32
      description: The number of vectors to be transformed.
    content.vb: Public Shared Sub Transform(sourceArray As Vector4(), sourceIndex As Integer, ByRef rotation As Quaternion, destinationArray As Vector4(), destinationIndex As Integer, length As Integer)
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(Vector4(), Int32, ByRef Quaternion, Vector4(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4(), System.Int32, ByRef Microsoft.Xna.Framework.Quaternion, Microsoft.Xna.Framework.Vector4(), System.Int32, System.Int32)
  name.vb: Transform(Vector4(), Int32, ByRef Quaternion, Vector4(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[])
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[])
  id: Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Vector4[])
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector4[], ref Matrix, Vector4[])
  nameWithType: Vector4.Transform(Vector4[], ref Matrix, Vector4[])
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[], ref Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Vector4[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1084
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nApply transformation on all vectors within array of <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by the specified <xref href=\"Microsoft.Xna.Framework.Matrix\" data-throw-if-not-resolved=\"false\"></xref> and places the results in an another array.\n"
  example: []
  syntax:
    content: public static void Transform(Vector4[] sourceArray, ref Matrix matrix, Vector4[] destinationArray)
    parameters:
    - id: sourceArray
      type: Microsoft.Xna.Framework.Vector4[]
      description: Source array.
    - id: matrix
      type: Microsoft.Xna.Framework.Matrix
      description: The transformation <xref href="Microsoft.Xna.Framework.Matrix" data-throw-if-not-resolved="false"></xref>.
    - id: destinationArray
      type: Microsoft.Xna.Framework.Vector4[]
      description: Destination array.
    content.vb: Public Shared Sub Transform(sourceArray As Vector4(), ByRef matrix As Matrix, destinationArray As Vector4())
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(Vector4(), ByRef Matrix, Vector4())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4(), ByRef Microsoft.Xna.Framework.Matrix, Microsoft.Xna.Framework.Vector4())
  name.vb: Transform(Vector4(), ByRef Matrix, Vector4())
- uid: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[])
  commentId: M:Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[])
  id: Transform(Microsoft.Xna.Framework.Vector4[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector4[])
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector4[], ref Quaternion, Vector4[])
  nameWithType: Vector4.Transform(Vector4[], ref Quaternion, Vector4[])
  fullName: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4[], ref Microsoft.Xna.Framework.Quaternion, Microsoft.Xna.Framework.Vector4[])
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Transform
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1106
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nApply transformation on all vectors within array of <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by the specified <xref href=\"Microsoft.Xna.Framework.Quaternion\" data-throw-if-not-resolved=\"false\"></xref> and places the results in an another array.\n"
  example: []
  syntax:
    content: public static void Transform(Vector4[] sourceArray, ref Quaternion rotation, Vector4[] destinationArray)
    parameters:
    - id: sourceArray
      type: Microsoft.Xna.Framework.Vector4[]
      description: Source array.
    - id: rotation
      type: Microsoft.Xna.Framework.Quaternion
      description: The <xref href="Microsoft.Xna.Framework.Quaternion" data-throw-if-not-resolved="false"></xref> which contains rotation transformation.
    - id: destinationArray
      type: Microsoft.Xna.Framework.Vector4[]
      description: Destination array.
    content.vb: Public Shared Sub Transform(sourceArray As Vector4(), ByRef rotation As Quaternion, destinationArray As Vector4())
  overload: Microsoft.Xna.Framework.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(Vector4(), ByRef Quaternion, Vector4())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Vector4.Transform(Microsoft.Xna.Framework.Vector4(), ByRef Microsoft.Xna.Framework.Quaternion, Microsoft.Xna.Framework.Vector4())
  name.vb: Transform(Vector4(), ByRef Quaternion, Vector4())
- uid: Microsoft.Xna.Framework.Vector4.ToString
  commentId: M:Microsoft.Xna.Framework.Vector4.ToString
  id: ToString
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector4.ToString()
  fullName: Microsoft.Xna.Framework.Vector4.ToString()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ToString
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1129
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of this <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> in the format:\n{X:[<xref href=\"Microsoft.Xna.Framework.Vector4.X\" data-throw-if-not-resolved=\"false\"></xref>] Y:[<xref href=\"Microsoft.Xna.Framework.Vector4.Y\" data-throw-if-not-resolved=\"false\"></xref>] Z:[<xref href=\"Microsoft.Xna.Framework.Vector4.Z\" data-throw-if-not-resolved=\"false\"></xref>] W:[<xref href=\"Microsoft.Xna.Framework.Vector4.W\" data-throw-if-not-resolved=\"false\"></xref>]}\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation of this <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Microsoft.Xna.Framework.Vector4.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Vector4.op_UnaryNegation(Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_UnaryNegation(Microsoft.Xna.Framework.Vector4)
  id: op_UnaryNegation(Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: UnaryNegation(Vector4)
  nameWithType: Vector4.UnaryNegation(Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.UnaryNegation(Microsoft.Xna.Framework.Vector4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_UnaryNegation
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1143
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nInverts values in the specified <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 operator -(Vector4 value)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the right of the sub sign.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Result of the inversion.
    content.vb: Public Shared Operator -(value As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.op_Equality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_Equality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: op_Equality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Equality(Vector4, Vector4)
  nameWithType: Vector4.Equality(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Equality(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Equality
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1154
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether two <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> instances are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> instance on the left of the equal sign.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> instance on the right of the equal sign.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Shared Operator =(value1 As Vector4, value2 As Vector4) As Boolean
  overload: Microsoft.Xna.Framework.Vector4.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.op_Inequality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_Inequality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: op_Inequality(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Inequality(Vector4, Vector4)
  nameWithType: Vector4.Inequality(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Inequality(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Inequality
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1168
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether two <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> instances are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> instance on the left of the not equal sign.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> instance on the right of the not equal sign.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are not equal; <code>false</code> otherwise.
    content.vb: Public Shared Operator <>(value1 As Vector4, value2 As Vector4) As Boolean
  overload: Microsoft.Xna.Framework.Vector4.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.op_Addition(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_Addition(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: op_Addition(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Addition(Vector4, Vector4)
  nameWithType: Vector4.Addition(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Addition(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Addition
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1179
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nAdds two vectors.\n"
  example: []
  syntax:
    content: public static Vector4 operator +(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the left of the add sign.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the right of the add sign.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Sum of the vectors.
    content.vb: Public Shared Operator +(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.op_Subtraction(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_Subtraction(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: op_Subtraction(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Subtraction(Vector4, Vector4)
  nameWithType: Vector4.Subtraction(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Subtraction(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Subtraction
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1194
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nSubtracts a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> from a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 operator -(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the left of the sub sign.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the right of the sub sign.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Result of the vector subtraction.
    content.vb: Public Shared Operator -(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.op_Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: op_Multiply(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, Vector4)
  nameWithType: Vector4.Multiply(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Multiply
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1209
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nMultiplies the components of two vectors by each other.\n"
  example: []
  syntax:
    content: public static Vector4 operator *(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the left of the mul sign.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the right of the mul sign.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Result of the vector multiplication.
    content.vb: Public Shared Operator *(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.op_Multiply(Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_Multiply(Microsoft.Xna.Framework.Vector4,System.Single)
  id: op_Multiply(Microsoft.Xna.Framework.Vector4,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, Single)
  nameWithType: Vector4.Multiply(Vector4, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Multiply(Microsoft.Xna.Framework.Vector4, System.Single)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Multiply
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1224
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nMultiplies the components of vector by a scalar.\n"
  example: []
  syntax:
    content: public static Vector4 operator *(Vector4 value, float scaleFactor)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the left of the mul sign.
    - id: scaleFactor
      type: System.Single
      description: Scalar value on the right of the mul sign.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Result of the vector multiplication with a scalar.
    content.vb: Public Shared Operator *(value As Vector4, scaleFactor As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.op_Multiply(System.Single,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_Multiply(System.Single,Microsoft.Xna.Framework.Vector4)
  id: op_Multiply(System.Single,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Single, Vector4)
  nameWithType: Vector4.Multiply(Single, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Multiply(System.Single, Microsoft.Xna.Framework.Vector4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Multiply
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1239
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nMultiplies the components of vector by a scalar.\n"
  example: []
  syntax:
    content: public static Vector4 operator *(float scaleFactor, Vector4 value)
    parameters:
    - id: scaleFactor
      type: System.Single
      description: Scalar value on the left of the mul sign.
    - id: value
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the right of the mul sign.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: Result of the vector multiplication with a scalar.
    content.vb: Public Shared Operator *(scaleFactor As Single, value As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.op_Division(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_Division(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  id: op_Division(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Division(Vector4, Vector4)
  nameWithType: Vector4.Division(Vector4, Vector4)
  fullName: Microsoft.Xna.Framework.Vector4.Division(Microsoft.Xna.Framework.Vector4, Microsoft.Xna.Framework.Vector4)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Division
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1254
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the components of a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by the components of another <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector4 operator /(Vector4 value1, Vector4 value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the left of the div sign.
    - id: value2
      type: Microsoft.Xna.Framework.Vector4
      description: Divisor <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the right of the div sign.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of dividing the vectors.
    content.vb: Public Shared Operator /(value1 As Vector4, value2 As Vector4) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Vector4.op_Division(Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.op_Division(Microsoft.Xna.Framework.Vector4,System.Single)
  id: op_Division(Microsoft.Xna.Framework.Vector4,System.Single)
  parent: Microsoft.Xna.Framework.Vector4
  langs:
  - csharp
  - vb
  name: Division(Vector4, Single)
  nameWithType: Vector4.Division(Vector4, Single)
  fullName: Microsoft.Xna.Framework.Vector4.Division(Microsoft.Xna.Framework.Vector4, System.Single)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/Vector4.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Division
    path: ../MonoGame.Framework/Vector4.cs
    startLine: 1269
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDivides the components of a <xref href=\"Microsoft.Xna.Framework.Vector4\" data-throw-if-not-resolved=\"false\"></xref> by a scalar.\n"
  example: []
  syntax:
    content: public static Vector4 operator /(Vector4 value1, float divider)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.Vector4
      description: Source <xref href="Microsoft.Xna.Framework.Vector4" data-throw-if-not-resolved="false"></xref> on the left of the div sign.
    - id: divider
      type: System.Single
      description: Divisor scalar on the right of the div sign.
    return:
      type: Microsoft.Xna.Framework.Vector4
      description: The result of dividing a vector by a scalar.
    content.vb: Public Shared Operator /(value1 As Vector4, divider As Single) As Vector4
  overload: Microsoft.Xna.Framework.Vector4.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.IEquatable{Microsoft.Xna.Framework.Vector4}
  commentId: T:System.IEquatable{Microsoft.Xna.Framework.Vector4}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Vector4>
  nameWithType: IEquatable<Vector4>
  fullName: System.IEquatable<Microsoft.Xna.Framework.Vector4>
  nameWithType.vb: IEquatable(Of Vector4)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.Vector4)
  name.vb: IEquatable(Of Vector4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: Microsoft.Xna.Framework.Vector4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: Microsoft.Xna.Framework.Vector4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Vector4
  commentId: T:Microsoft.Xna.Framework.Vector4
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector4
  nameWithType: Vector4
  fullName: Microsoft.Xna.Framework.Vector4
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Vector4.Zero*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Zero
  isExternal: false
  name: Zero
  nameWithType: Vector4.Zero
  fullName: Microsoft.Xna.Framework.Vector4.Zero
- uid: Microsoft.Xna.Framework.Vector4.One*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.One
  isExternal: false
  name: One
  nameWithType: Vector4.One
  fullName: Microsoft.Xna.Framework.Vector4.One
- uid: Microsoft.Xna.Framework.Vector4.UnitX*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.UnitX
  isExternal: false
  name: UnitX
  nameWithType: Vector4.UnitX
  fullName: Microsoft.Xna.Framework.Vector4.UnitX
- uid: Microsoft.Xna.Framework.Vector4.UnitY*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.UnitY
  isExternal: false
  name: UnitY
  nameWithType: Vector4.UnitY
  fullName: Microsoft.Xna.Framework.Vector4.UnitY
- uid: Microsoft.Xna.Framework.Vector4.UnitZ*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.UnitZ
  isExternal: false
  name: UnitZ
  nameWithType: Vector4.UnitZ
  fullName: Microsoft.Xna.Framework.Vector4.UnitZ
- uid: Microsoft.Xna.Framework.Vector4.UnitW*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.UnitW
  isExternal: false
  name: UnitW
  nameWithType: Vector4.UnitW
  fullName: Microsoft.Xna.Framework.Vector4.UnitW
- uid: Microsoft.Xna.Framework.Vector4.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.#ctor
  isExternal: false
  name: Vector4
  nameWithType: Vector4.Vector4
  fullName: Microsoft.Xna.Framework.Vector4.Vector4
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework.Vector3
  commentId: T:Microsoft.Xna.Framework.Vector3
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: Microsoft.Xna.Framework.Vector3
- uid: Microsoft.Xna.Framework.Vector4.Add*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Add
  isExternal: false
  name: Add
  nameWithType: Vector4.Add
  fullName: Microsoft.Xna.Framework.Vector4.Add
- uid: Microsoft.Xna.Framework.Vector4.Barycentric*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Barycentric
  isExternal: false
  name: Barycentric
  nameWithType: Vector4.Barycentric
  fullName: Microsoft.Xna.Framework.Vector4.Barycentric
- uid: Microsoft.Xna.Framework.Vector4.CatmullRom*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.CatmullRom
  isExternal: false
  name: CatmullRom
  nameWithType: Vector4.CatmullRom
  fullName: Microsoft.Xna.Framework.Vector4.CatmullRom
- uid: Microsoft.Xna.Framework.Vector4.Clamp*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Clamp
  isExternal: false
  name: Clamp
  nameWithType: Vector4.Clamp
  fullName: Microsoft.Xna.Framework.Vector4.Clamp
- uid: Microsoft.Xna.Framework.Vector4.Distance*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Distance
  isExternal: false
  name: Distance
  nameWithType: Vector4.Distance
  fullName: Microsoft.Xna.Framework.Vector4.Distance
- uid: Microsoft.Xna.Framework.Vector4.DistanceSquared*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.DistanceSquared
  isExternal: false
  name: DistanceSquared
  nameWithType: Vector4.DistanceSquared
  fullName: Microsoft.Xna.Framework.Vector4.DistanceSquared
- uid: Microsoft.Xna.Framework.Vector4.Divide*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Divide
  isExternal: false
  name: Divide
  nameWithType: Vector4.Divide
  fullName: Microsoft.Xna.Framework.Vector4.Divide
- uid: Microsoft.Xna.Framework.Vector4.Dot*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Dot
  isExternal: false
  name: Dot
  nameWithType: Vector4.Dot
  fullName: Microsoft.Xna.Framework.Vector4.Dot
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Vector4.Equals*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Equals
  isExternal: false
  name: Equals
  nameWithType: Vector4.Equals
  fullName: Microsoft.Xna.Framework.Vector4.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{Microsoft.Xna.Framework.Vector4}.Equals(Microsoft.Xna.Framework.Vector4)
  commentId: M:System.IEquatable{Microsoft.Xna.Framework.Vector4}.Equals(Microsoft.Xna.Framework.Vector4)
  parent: System.IEquatable{Microsoft.Xna.Framework.Vector4}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Vector4)
  nameWithType: IEquatable<Vector4>.Equals(Vector4)
  fullName: System.IEquatable<Microsoft.Xna.Framework.Vector4>.Equals(Microsoft.Xna.Framework.Vector4)
  nameWithType.vb: IEquatable(Of Vector4).Equals(Vector4)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.Vector4).Equals(Microsoft.Xna.Framework.Vector4)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Vector4>.Equals
    fullName: System.IEquatable<Microsoft.Xna.Framework.Vector4>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: Microsoft.Xna.Framework.Vector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Vector4).Equals
    fullName: System.IEquatable(Of Microsoft.Xna.Framework.Vector4).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: Microsoft.Xna.Framework.Vector4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Vector4.GetHashCode*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: Vector4.GetHashCode
  fullName: Microsoft.Xna.Framework.Vector4.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Vector4.Hermite*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Hermite
  isExternal: false
  name: Hermite
  nameWithType: Vector4.Hermite
  fullName: Microsoft.Xna.Framework.Vector4.Hermite
- uid: Microsoft.Xna.Framework.Vector4.Length*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Length
  isExternal: false
  name: Length
  nameWithType: Vector4.Length
  fullName: Microsoft.Xna.Framework.Vector4.Length
- uid: Microsoft.Xna.Framework.Vector4.LengthSquared*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.LengthSquared
  isExternal: false
  name: LengthSquared
  nameWithType: Vector4.LengthSquared
  fullName: Microsoft.Xna.Framework.Vector4.LengthSquared
- uid: Microsoft.Xna.Framework.Vector4.Lerp*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Lerp
  isExternal: false
  name: Lerp
  nameWithType: Vector4.Lerp
  fullName: Microsoft.Xna.Framework.Vector4.Lerp
- uid: Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)
- uid: Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
  commentId: M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4,System.Single)
- uid: Microsoft.Xna.Framework.Vector4.LerpPrecise*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.LerpPrecise
  isExternal: false
  name: LerpPrecise
  nameWithType: Vector4.LerpPrecise
  fullName: Microsoft.Xna.Framework.Vector4.LerpPrecise
- uid: Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
  commentId: M:Microsoft.Xna.Framework.Vector4.Lerp(Microsoft.Xna.Framework.Vector4@,Microsoft.Xna.Framework.Vector4@,System.Single,Microsoft.Xna.Framework.Vector4@)
- uid: Microsoft.Xna.Framework.Vector4.Max*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Max
  isExternal: false
  name: Max
  nameWithType: Vector4.Max
  fullName: Microsoft.Xna.Framework.Vector4.Max
- uid: Microsoft.Xna.Framework.Vector4.Min*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Min
  isExternal: false
  name: Min
  nameWithType: Vector4.Min
  fullName: Microsoft.Xna.Framework.Vector4.Min
- uid: Microsoft.Xna.Framework.Vector4.Multiply*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Multiply
  isExternal: false
  name: Multiply
  nameWithType: Vector4.Multiply
  fullName: Microsoft.Xna.Framework.Vector4.Multiply
- uid: Microsoft.Xna.Framework.Vector4.Negate*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Negate
  isExternal: false
  name: Negate
  nameWithType: Vector4.Negate
  fullName: Microsoft.Xna.Framework.Vector4.Negate
- uid: Microsoft.Xna.Framework.Vector4.Normalize*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Normalize
  isExternal: false
  name: Normalize
  nameWithType: Vector4.Normalize
  fullName: Microsoft.Xna.Framework.Vector4.Normalize
- uid: Microsoft.Xna.Framework.Vector4.SmoothStep*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.SmoothStep
  isExternal: false
  name: SmoothStep
  nameWithType: Vector4.SmoothStep
  fullName: Microsoft.Xna.Framework.Vector4.SmoothStep
- uid: Microsoft.Xna.Framework.Vector4.Subtract*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Subtract
  isExternal: false
  name: Subtract
  nameWithType: Vector4.Subtract
  fullName: Microsoft.Xna.Framework.Vector4.Subtract
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: Microsoft.Xna.Framework.Vector4.Transform*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.Transform
  isExternal: false
  name: Transform
  nameWithType: Vector4.Transform
  fullName: Microsoft.Xna.Framework.Vector4.Transform
- uid: Microsoft.Xna.Framework.Quaternion
  commentId: T:Microsoft.Xna.Framework.Quaternion
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: Microsoft.Xna.Framework.Quaternion
- uid: Microsoft.Xna.Framework.Vector4[]
  name: Vector4[]
  nameWithType: Vector4[]
  fullName: Microsoft.Xna.Framework.Vector4[]
  nameWithType.vb: Vector4()
  fullName.vb: Microsoft.Xna.Framework.Vector4()
  name.vb: Vector4()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: Microsoft.Xna.Framework.Vector4
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: Microsoft.Xna.Framework.Vector4
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Vector4.X
  commentId: F:Microsoft.Xna.Framework.Vector4.X
- uid: Microsoft.Xna.Framework.Vector4.Y
  commentId: F:Microsoft.Xna.Framework.Vector4.Y
- uid: Microsoft.Xna.Framework.Vector4.Z
  commentId: F:Microsoft.Xna.Framework.Vector4.Z
- uid: Microsoft.Xna.Framework.Vector4.W
  commentId: F:Microsoft.Xna.Framework.Vector4.W
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Vector4.ToString*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.ToString
  isExternal: false
  name: ToString
  nameWithType: Vector4.ToString
  fullName: Microsoft.Xna.Framework.Vector4.ToString
- uid: Microsoft.Xna.Framework.Vector4.op_UnaryNegation*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.op_UnaryNegation
  isExternal: false
  name: UnaryNegation
  nameWithType: Vector4.UnaryNegation
  fullName: Microsoft.Xna.Framework.Vector4.UnaryNegation
- uid: Microsoft.Xna.Framework.Vector4.op_Equality*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.op_Equality
  isExternal: false
  name: Equality
  nameWithType: Vector4.Equality
  fullName: Microsoft.Xna.Framework.Vector4.Equality
- uid: Microsoft.Xna.Framework.Vector4.op_Inequality*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: Vector4.Inequality
  fullName: Microsoft.Xna.Framework.Vector4.Inequality
- uid: Microsoft.Xna.Framework.Vector4.op_Addition*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.op_Addition
  isExternal: false
  name: Addition
  nameWithType: Vector4.Addition
  fullName: Microsoft.Xna.Framework.Vector4.Addition
- uid: Microsoft.Xna.Framework.Vector4.op_Subtraction*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.op_Subtraction
  isExternal: false
  name: Subtraction
  nameWithType: Vector4.Subtraction
  fullName: Microsoft.Xna.Framework.Vector4.Subtraction
- uid: Microsoft.Xna.Framework.Vector4.op_Multiply*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.op_Multiply
  isExternal: false
  name: Multiply
  nameWithType: Vector4.Multiply
  fullName: Microsoft.Xna.Framework.Vector4.Multiply
- uid: Microsoft.Xna.Framework.Vector4.op_Division*
  commentId: Overload:Microsoft.Xna.Framework.Vector4.op_Division
  isExternal: false
  name: Division
  nameWithType: Vector4.Division
  fullName: Microsoft.Xna.Framework.Vector4.Division
