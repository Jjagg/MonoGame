### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager
  commentId: T:Microsoft.Xna.Framework.Content.ContentTypeReaderManager
  id: ContentTypeReaderManager
  parent: Microsoft.Xna.Framework.Content
  children:
  - Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator(System.String,System.Func{Microsoft.Xna.Framework.Content.ContentTypeReader})
  - Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ClearTypeCreators
  - Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader(System.Type)
  - Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType(System.String)
  langs:
  - csharp
  - vb
  name: ContentTypeReaderManager
  nameWithType: ContentTypeReaderManager
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReaderManager.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ContentTypeReaderManager
    path: ../MonoGame.Framework/Content/ContentTypeReaderManager.cs
    startLine: 36
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: public sealed class ContentTypeReaderManager
    content.vb: Public NotInheritable Class ContentTypeReaderManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader(System.Type)
  commentId: M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader(System.Type)
  id: GetTypeReader(System.Type)
  parent: Microsoft.Xna.Framework.Content.ContentTypeReaderManager
  langs:
  - csharp
  - vb
  name: GetTypeReader(Type)
  nameWithType: ContentTypeReaderManager.GetTypeReader(Type)
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader(System.Type)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReaderManager.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetTypeReader
    path: ../MonoGame.Framework/Content/ContentTypeReaderManager.cs
    startLine: 54
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: public ContentTypeReader GetTypeReader(Type targetType)
    parameters:
    - id: targetType
      type: System.Type
    return:
      type: Microsoft.Xna.Framework.Content.ContentTypeReader
    content.vb: Public Function GetTypeReader(targetType As Type) As ContentTypeReader
  overload: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType(System.String)
  commentId: M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType(System.String)
  id: PrepareType(System.String)
  parent: Microsoft.Xna.Framework.Content.ContentTypeReaderManager
  langs:
  - csharp
  - vb
  name: PrepareType(String)
  nameWithType: ContentTypeReaderManager.PrepareType(String)
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType(System.String)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReaderManager.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PrepareType
    path: ../MonoGame.Framework/Content/ContentTypeReaderManager.cs
    startLine: 227
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  summary: "\nRemoves Version, Culture and PublicKeyToken from a type string.\n"
  remarks: "\nSupports multiple generic types (e.g. Dictionary&lt;TKey,TValue>) and nested generic types (e.g. List&lt;List&lt;int>>).\n"
  example: []
  syntax:
    content: public static string PrepareType(string type)
    parameters:
    - id: type
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n"
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Shared Function PrepareType(type As String) As String
  overload: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator(System.String,System.Func{Microsoft.Xna.Framework.Content.ContentTypeReader})
  commentId: M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator(System.String,System.Func{Microsoft.Xna.Framework.Content.ContentTypeReader})
  id: AddTypeCreator(System.String,System.Func{Microsoft.Xna.Framework.Content.ContentTypeReader})
  parent: Microsoft.Xna.Framework.Content.ContentTypeReaderManager
  langs:
  - csharp
  - vb
  name: AddTypeCreator(String, Func<ContentTypeReader>)
  nameWithType: ContentTypeReaderManager.AddTypeCreator(String, Func<ContentTypeReader>)
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator(System.String, System.Func<Microsoft.Xna.Framework.Content.ContentTypeReader>)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReaderManager.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AddTypeCreator
    path: ../MonoGame.Framework/Content/ContentTypeReaderManager.cs
    startLine: 263
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  summary: "\nAdds the type creator.\n"
  example: []
  syntax:
    content: public static void AddTypeCreator(string typeString, Func<ContentTypeReader> createFunction)
    parameters:
    - id: typeString
      type: System.String
      description: "\nType string.\n"
    - id: createFunction
      type: System.Func{Microsoft.Xna.Framework.Content.ContentTypeReader}
      description: "\nCreate function.\n"
    content.vb: Public Shared Sub AddTypeCreator(typeString As String, createFunction As Func(Of ContentTypeReader))
  overload: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator*
  nameWithType.vb: ContentTypeReaderManager.AddTypeCreator(String, Func(Of ContentTypeReader))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator(System.String, System.Func(Of Microsoft.Xna.Framework.Content.ContentTypeReader))
  name.vb: AddTypeCreator(String, Func(Of ContentTypeReader))
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ClearTypeCreators
  commentId: M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ClearTypeCreators
  id: ClearTypeCreators
  parent: Microsoft.Xna.Framework.Content.ContentTypeReaderManager
  langs:
  - csharp
  - vb
  name: ClearTypeCreators()
  nameWithType: ContentTypeReaderManager.ClearTypeCreators()
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ClearTypeCreators()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Content/ContentTypeReaderManager.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ClearTypeCreators
    path: ../MonoGame.Framework/Content/ContentTypeReaderManager.cs
    startLine: 269
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Content
  syntax:
    content: public static void ClearTypeCreators()
    content.vb: Public Shared Sub ClearTypeCreators
  overload: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ClearTypeCreators*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Xna.Framework.Content
  commentId: N:Microsoft.Xna.Framework.Content
  isExternal: false
  name: Microsoft.Xna.Framework.Content
  nameWithType: Microsoft.Xna.Framework.Content
  fullName: Microsoft.Xna.Framework.Content
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader
  isExternal: false
  name: GetTypeReader
  nameWithType: ContentTypeReaderManager.GetTypeReader
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.GetTypeReader
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Xna.Framework.Content.ContentTypeReader
  commentId: T:Microsoft.Xna.Framework.Content.ContentTypeReader
  parent: Microsoft.Xna.Framework.Content
  isExternal: false
  name: ContentTypeReader
  nameWithType: ContentTypeReader
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType
  isExternal: false
  name: PrepareType
  nameWithType: ContentTypeReaderManager.PrepareType
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator
  isExternal: false
  name: AddTypeCreator
  nameWithType: ContentTypeReaderManager.AddTypeCreator
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator
- uid: System.Func{Microsoft.Xna.Framework.Content.ContentTypeReader}
  commentId: T:System.Func{Microsoft.Xna.Framework.Content.ContentTypeReader}
  parent: System
  definition: System.Func`1
  name: Func<ContentTypeReader>
  nameWithType: Func<ContentTypeReader>
  fullName: System.Func<Microsoft.Xna.Framework.Content.ContentTypeReader>
  nameWithType.vb: Func(Of ContentTypeReader)
  fullName.vb: System.Func(Of Microsoft.Xna.Framework.Content.ContentTypeReader)
  name.vb: Func(Of ContentTypeReader)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Content.ContentTypeReader
    name: ContentTypeReader
    nameWithType: ContentTypeReader
    fullName: Microsoft.Xna.Framework.Content.ContentTypeReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Content.ContentTypeReader
    name: ContentTypeReader
    nameWithType: ContentTypeReader
    fullName: Microsoft.Xna.Framework.Content.ContentTypeReader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ClearTypeCreators*
  commentId: Overload:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ClearTypeCreators
  isExternal: false
  name: ClearTypeCreators
  nameWithType: ContentTypeReaderManager.ClearTypeCreators
  fullName: Microsoft.Xna.Framework.Content.ContentTypeReaderManager.ClearTypeCreators
