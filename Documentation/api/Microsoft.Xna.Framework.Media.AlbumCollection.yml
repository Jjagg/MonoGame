### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Media.AlbumCollection
  commentId: T:Microsoft.Xna.Framework.Media.AlbumCollection
  id: AlbumCollection
  parent: Microsoft.Xna.Framework.Media
  children:
  - Microsoft.Xna.Framework.Media.AlbumCollection.#ctor(System.Collections.Generic.List{Microsoft.Xna.Framework.Media.Album})
  - Microsoft.Xna.Framework.Media.AlbumCollection.Count
  - Microsoft.Xna.Framework.Media.AlbumCollection.Dispose
  - Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed
  - Microsoft.Xna.Framework.Media.AlbumCollection.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: AlbumCollection
  nameWithType: AlbumCollection
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Media/AlbumCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AlbumCollection
    path: ../MonoGame.Framework/Media/AlbumCollection.cs
    startLine: 10
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: 'public sealed class AlbumCollection : IDisposable'
    content.vb: >-
      Public NotInheritable Class AlbumCollection
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.Count
  commentId: P:Microsoft.Xna.Framework.Media.AlbumCollection.Count
  id: Count
  parent: Microsoft.Xna.Framework.Media.AlbumCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: AlbumCollection.Count
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.Count
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/AlbumCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Count
    path: ../MonoGame.Framework/Media/AlbumCollection.cs
    startLine: 17
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the number of Album objects in the AlbumCollection.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Microsoft.Xna.Framework.Media.AlbumCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed
  commentId: P:Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed
  id: IsDisposed
  parent: Microsoft.Xna.Framework.Media.AlbumCollection
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: AlbumCollection.IsDisposed
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/AlbumCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsDisposed
    path: ../MonoGame.Framework/Media/AlbumCollection.cs
    startLine: 28
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets a value indicating whether the object is disposed.\n"
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.#ctor(System.Collections.Generic.List{Microsoft.Xna.Framework.Media.Album})
  commentId: M:Microsoft.Xna.Framework.Media.AlbumCollection.#ctor(System.Collections.Generic.List{Microsoft.Xna.Framework.Media.Album})
  id: '#ctor(System.Collections.Generic.List{Microsoft.Xna.Framework.Media.Album})'
  parent: Microsoft.Xna.Framework.Media.AlbumCollection
  langs:
  - csharp
  - vb
  name: AlbumCollection(List<Album>)
  nameWithType: AlbumCollection.AlbumCollection(List<Album>)
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.AlbumCollection(System.Collections.Generic.List<Microsoft.Xna.Framework.Media.Album>)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Media/AlbumCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Media/AlbumCollection.cs
    startLine: 36
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: public AlbumCollection(List<Album> albums)
    parameters:
    - id: albums
      type: System.Collections.Generic.List{Microsoft.Xna.Framework.Media.Album}
    content.vb: Public Sub New(albums As List(Of Album))
  overload: Microsoft.Xna.Framework.Media.AlbumCollection.#ctor*
  nameWithType.vb: AlbumCollection.AlbumCollection(List(Of Album))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Media.AlbumCollection.AlbumCollection(System.Collections.Generic.List(Of Microsoft.Xna.Framework.Media.Album))
  name.vb: AlbumCollection(List(Of Album))
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.Item(System.Int32)
  commentId: P:Microsoft.Xna.Framework.Media.AlbumCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Xna.Framework.Media.AlbumCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: AlbumCollection.Item[Int32]
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/AlbumCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: this[]
    path: ../MonoGame.Framework/Media/AlbumCollection.cs
    startLine: 45
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the Album at the specified index in the AlbumCollection.\n"
  example: []
  syntax:
    content: public Album this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Index of the Album to get.
    return:
      type: Microsoft.Xna.Framework.Media.Album
    content.vb: Public ReadOnly Property Item(index As Integer) As Album
  overload: Microsoft.Xna.Framework.Media.AlbumCollection.Item*
  nameWithType.vb: AlbumCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Xna.Framework.Media.AlbumCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.Dispose
  commentId: M:Microsoft.Xna.Framework.Media.AlbumCollection.Dispose
  id: Dispose
  parent: Microsoft.Xna.Framework.Media.AlbumCollection
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AlbumCollection.Dispose()
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.Dispose()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/AlbumCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/Media/AlbumCollection.cs
    startLine: 56
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nImmediately releases the unmanaged resources used by this object.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Xna.Framework.Media.AlbumCollection.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Media
  commentId: N:Microsoft.Xna.Framework.Media
  isExternal: false
  name: Microsoft.Xna.Framework.Media
  nameWithType: Microsoft.Xna.Framework.Media
  fullName: Microsoft.Xna.Framework.Media
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.Count*
  commentId: Overload:Microsoft.Xna.Framework.Media.AlbumCollection.Count
  isExternal: false
  name: Count
  nameWithType: AlbumCollection.Count
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed*
  commentId: Overload:Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed
  isExternal: false
  name: IsDisposed
  nameWithType: AlbumCollection.IsDisposed
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Media.AlbumCollection.#ctor
  isExternal: false
  name: AlbumCollection
  nameWithType: AlbumCollection.AlbumCollection
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.AlbumCollection
- uid: System.Collections.Generic.List{Microsoft.Xna.Framework.Media.Album}
  commentId: T:System.Collections.Generic.List{Microsoft.Xna.Framework.Media.Album}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Album>
  nameWithType: List<Album>
  fullName: System.Collections.Generic.List<Microsoft.Xna.Framework.Media.Album>
  nameWithType.vb: List(Of Album)
  fullName.vb: System.Collections.Generic.List(Of Microsoft.Xna.Framework.Media.Album)
  name.vb: List(Of Album)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Media.Album
    name: Album
    nameWithType: Album
    fullName: Microsoft.Xna.Framework.Media.Album
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Media.Album
    name: Album
    nameWithType: Album
    fullName: Microsoft.Xna.Framework.Media.Album
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.Item*
  commentId: Overload:Microsoft.Xna.Framework.Media.AlbumCollection.Item
  isExternal: false
  name: Item
  nameWithType: AlbumCollection.Item
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.Item
- uid: Microsoft.Xna.Framework.Media.Album
  commentId: T:Microsoft.Xna.Framework.Media.Album
  parent: Microsoft.Xna.Framework.Media
  isExternal: false
  name: Album
  nameWithType: Album
  fullName: Microsoft.Xna.Framework.Media.Album
- uid: Microsoft.Xna.Framework.Media.AlbumCollection.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.Media.AlbumCollection.Dispose
  isExternal: false
  name: Dispose
  nameWithType: AlbumCollection.Dispose
  fullName: Microsoft.Xna.Framework.Media.AlbumCollection.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
