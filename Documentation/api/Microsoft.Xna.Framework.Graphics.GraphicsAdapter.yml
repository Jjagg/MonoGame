### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  id: GraphicsAdapter
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Adapters
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Description
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Dispose
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsProfileSupported(Microsoft.Xna.Framework.Graphics.GraphicsProfile)
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.SupportedDisplayModes
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseDriverType
  - Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseReferenceDevice
  langs:
  - csharp
  - vb
  name: GraphicsAdapter
  nameWithType: GraphicsAdapter
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GraphicsAdapter
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 21
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public sealed class GraphicsAdapter : IDisposable'
    content.vb: >-
      Public NotInheritable Class GraphicsAdapter
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Dispose
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Dispose
  id: Dispose
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: GraphicsAdapter.Dispose()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Dispose()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 61
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Description
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Description
  id: Description
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: GraphicsAdapter.Description
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Description
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Description
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 66
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode
  id: CurrentDisplayMode
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: CurrentDisplayMode
  nameWithType: GraphicsAdapter.CurrentDisplayMode
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CurrentDisplayMode
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 68
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public DisplayMode CurrentDisplayMode { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.DisplayMode
    content.vb: Public ReadOnly Property CurrentDisplayMode As DisplayMode
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter
  id: DefaultAdapter
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: DefaultAdapter
  nameWithType: GraphicsAdapter.DefaultAdapter
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DefaultAdapter
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 101
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public static GraphicsAdapter DefaultAdapter { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
    content.vb: Public Shared ReadOnly Property DefaultAdapter As GraphicsAdapter
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Adapters
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Adapters
  id: Adapters
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: Adapters
  nameWithType: GraphicsAdapter.Adapters
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Adapters
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Adapters
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 106
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public static ReadOnlyCollection<GraphicsAdapter> Adapters { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Xna.Framework.Graphics.GraphicsAdapter}
    content.vb: Public Shared ReadOnly Property Adapters As ReadOnlyCollection(Of GraphicsAdapter)
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Adapters*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseReferenceDevice
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseReferenceDevice
  id: UseReferenceDevice
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: UseReferenceDevice
  nameWithType: GraphicsAdapter.UseReferenceDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseReferenceDevice
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: UseReferenceDevice
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 133
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nUsed to request creation of the reference graphics device, \nor the default hardware accelerated device (when set to false).\n"
  remarks: "\nThis only works on DirectX platforms where a reference graphics\ndevice is available and must be defined before the graphics device\nis created. It defaults to false.\n"
  example: []
  syntax:
    content: public static bool UseReferenceDevice { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property UseReferenceDevice As Boolean
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseReferenceDevice*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseDriverType
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseDriverType
  id: UseDriverType
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: UseDriverType
  nameWithType: GraphicsAdapter.UseDriverType
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseDriverType
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: UseDriverType
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 146
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nUsed to request creation of a specific kind of driver.\n"
  remarks: "\nThese values only work on DirectX platforms and must be defined before the graphics device\nis created. <xref href=\"Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DriverType.Hardware\" data-throw-if-not-resolved=\"false\"></xref> by default.\n"
  example: []
  syntax:
    content: public static GraphicsAdapter.DriverType UseDriverType { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DriverType
    content.vb: Public Shared Property UseDriverType As GraphicsAdapter.DriverType
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseDriverType*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.SupportedDisplayModes
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.SupportedDisplayModes
  id: SupportedDisplayModes
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: SupportedDisplayModes
  nameWithType: GraphicsAdapter.SupportedDisplayModes
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.SupportedDisplayModes
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SupportedDisplayModes
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 259
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public DisplayModeCollection SupportedDisplayModes { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.DisplayModeCollection
    content.vb: Public ReadOnly Property SupportedDisplayModes As DisplayModeCollection
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.SupportedDisplayModes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen
  id: IsWideScreen
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: IsWideScreen
  nameWithType: GraphicsAdapter.IsWideScreen
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsWideScreen
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 339
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> indicating whether\n<xref href=\"Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode\" data-throw-if-not-resolved=\"false\"></xref> has a\nWidth:Height ratio corresponding to a widescreen <xref href=\"Microsoft.Xna.Framework.Graphics.DisplayMode\" data-throw-if-not-resolved=\"false\"></xref>.\nCommon widescreen modes include 16:9, 16:10 and 2:1.\n"
  example: []
  syntax:
    content: public bool IsWideScreen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsWideScreen As Boolean
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsProfileSupported(Microsoft.Xna.Framework.Graphics.GraphicsProfile)
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsProfileSupported(Microsoft.Xna.Framework.Graphics.GraphicsProfile)
  id: IsProfileSupported(Microsoft.Xna.Framework.Graphics.GraphicsProfile)
  parent: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  langs:
  - csharp
  - vb
  name: IsProfileSupported(GraphicsProfile)
  nameWithType: GraphicsAdapter.IsProfileSupported(GraphicsProfile)
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsProfileSupported(Microsoft.Xna.Framework.Graphics.GraphicsProfile)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsProfileSupported
    path: ../MonoGame.Framework/Graphics/GraphicsAdapter.Legacy.cs
    startLine: 352
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public bool IsProfileSupported(GraphicsProfile graphicsProfile)
    parameters:
    - id: graphicsProfile
      type: Microsoft.Xna.Framework.Graphics.GraphicsProfile
    return:
      type: System.Boolean
    content.vb: Public Function IsProfileSupported(graphicsProfile As GraphicsProfile) As Boolean
  overload: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsProfileSupported*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Dispose
  isExternal: false
  name: Dispose
  nameWithType: GraphicsAdapter.Dispose
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Description*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Description
  isExternal: false
  name: Description
  nameWithType: GraphicsAdapter.Description
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode
  isExternal: false
  name: CurrentDisplayMode
  nameWithType: GraphicsAdapter.CurrentDisplayMode
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode
- uid: Microsoft.Xna.Framework.Graphics.DisplayMode
  commentId: T:Microsoft.Xna.Framework.Graphics.DisplayMode
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: DisplayMode
  nameWithType: DisplayMode
  fullName: Microsoft.Xna.Framework.Graphics.DisplayMode
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter
  isExternal: false
  name: DefaultAdapter
  nameWithType: GraphicsAdapter.DefaultAdapter
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsAdapter
  nameWithType: GraphicsAdapter
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Adapters*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Adapters
  isExternal: false
  name: Adapters
  nameWithType: GraphicsAdapter.Adapters
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.Adapters
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Xna.Framework.Graphics.GraphicsAdapter}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.Xna.Framework.Graphics.GraphicsAdapter}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<GraphicsAdapter>
  nameWithType: ReadOnlyCollection<GraphicsAdapter>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.Xna.Framework.Graphics.GraphicsAdapter>
  nameWithType.vb: ReadOnlyCollection(Of GraphicsAdapter)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.Xna.Framework.Graphics.GraphicsAdapter)
  name.vb: ReadOnlyCollection(Of GraphicsAdapter)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
    name: GraphicsAdapter
    nameWithType: GraphicsAdapter
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
    name: GraphicsAdapter
    nameWithType: GraphicsAdapter
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseReferenceDevice*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseReferenceDevice
  isExternal: false
  name: UseReferenceDevice
  nameWithType: GraphicsAdapter.UseReferenceDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseReferenceDevice
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DriverType.Hardware
  commentId: F:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DriverType.Hardware
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseDriverType*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseDriverType
  isExternal: false
  name: UseDriverType
  nameWithType: GraphicsAdapter.UseDriverType
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.UseDriverType
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DriverType
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DriverType
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsAdapter.DriverType
  nameWithType: GraphicsAdapter.DriverType
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DriverType
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.SupportedDisplayModes*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.SupportedDisplayModes
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: GraphicsAdapter.SupportedDisplayModes
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.SupportedDisplayModes
- uid: Microsoft.Xna.Framework.Graphics.DisplayModeCollection
  commentId: T:Microsoft.Xna.Framework.Graphics.DisplayModeCollection
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: DisplayModeCollection
  nameWithType: DisplayModeCollection
  fullName: Microsoft.Xna.Framework.Graphics.DisplayModeCollection
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen
  isExternal: false
  name: IsWideScreen
  nameWithType: GraphicsAdapter.IsWideScreen
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen
- uid: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsProfileSupported*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsProfileSupported
  isExternal: false
  name: IsProfileSupported
  nameWithType: GraphicsAdapter.IsProfileSupported
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsProfileSupported
- uid: Microsoft.Xna.Framework.Graphics.GraphicsProfile
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsProfile
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsProfile
  nameWithType: GraphicsProfile
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsProfile
