### YamlMime:ManagedReference
items:
- uid: NVorbis.IContainerReader
  commentId: T:NVorbis.IContainerReader
  id: IContainerReader
  parent: NVorbis
  children:
  - NVorbis.IContainerReader.CanSeek
  - NVorbis.IContainerReader.FindNextStream
  - NVorbis.IContainerReader.GetTotalPageCount
  - NVorbis.IContainerReader.Init
  - NVorbis.IContainerReader.NewStream
  - NVorbis.IContainerReader.PagesRead
  - NVorbis.IContainerReader.StreamSerials
  - NVorbis.IContainerReader.WasteBits
  langs:
  - csharp
  - vb
  name: IContainerReader
  nameWithType: IContainerReader
  fullName: NVorbis.IContainerReader
  type: Interface
  source:
    remote:
      path: NVorbis/IContainerReader.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: IContainerReader
    path: ../ThirdParty/NVorbis/NVorbis/IContainerReader.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nProvides a interface for a Vorbis logical stream container.\n"
  example: []
  syntax:
    content: 'public interface IContainerReader : IDisposable'
    content.vb: >-
      Public Interface IContainerReader
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: NVorbis.IContainerReader.StreamSerials
  commentId: P:NVorbis.IContainerReader.StreamSerials
  id: StreamSerials
  parent: NVorbis.IContainerReader
  langs:
  - csharp
  - vb
  name: StreamSerials
  nameWithType: IContainerReader.StreamSerials
  fullName: NVorbis.IContainerReader.StreamSerials
  type: Property
  source:
    remote:
      path: NVorbis/IContainerReader.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: StreamSerials
    path: ../ThirdParty/NVorbis/NVorbis/IContainerReader.cs
    startLine: 19
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nGets the list of stream serials found in the container so far.\n"
  example: []
  syntax:
    content: int[] StreamSerials { get; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: ReadOnly Property StreamSerials As Integer()
  overload: NVorbis.IContainerReader.StreamSerials*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NVorbis.IContainerReader.CanSeek
  commentId: P:NVorbis.IContainerReader.CanSeek
  id: CanSeek
  parent: NVorbis.IContainerReader
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: IContainerReader.CanSeek
  fullName: NVorbis.IContainerReader.CanSeek
  type: Property
  source:
    remote:
      path: NVorbis/IContainerReader.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: CanSeek
    path: ../ThirdParty/NVorbis/NVorbis/IContainerReader.cs
    startLine: 24
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nGets whether the container supports seeking.\n"
  example: []
  syntax:
    content: bool CanSeek { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CanSeek As Boolean
  overload: NVorbis.IContainerReader.CanSeek*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NVorbis.IContainerReader.WasteBits
  commentId: P:NVorbis.IContainerReader.WasteBits
  id: WasteBits
  parent: NVorbis.IContainerReader
  langs:
  - csharp
  - vb
  name: WasteBits
  nameWithType: IContainerReader.WasteBits
  fullName: NVorbis.IContainerReader.WasteBits
  type: Property
  source:
    remote:
      path: NVorbis/IContainerReader.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: WasteBits
    path: ../ThirdParty/NVorbis/NVorbis/IContainerReader.cs
    startLine: 29
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nGets the number of bits in the container that are not associated with a logical stream.\n"
  example: []
  syntax:
    content: long WasteBits { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property WasteBits As Long
  overload: NVorbis.IContainerReader.WasteBits*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NVorbis.IContainerReader.PagesRead
  commentId: P:NVorbis.IContainerReader.PagesRead
  id: PagesRead
  parent: NVorbis.IContainerReader
  langs:
  - csharp
  - vb
  name: PagesRead
  nameWithType: IContainerReader.PagesRead
  fullName: NVorbis.IContainerReader.PagesRead
  type: Property
  source:
    remote:
      path: NVorbis/IContainerReader.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: PagesRead
    path: ../ThirdParty/NVorbis/NVorbis/IContainerReader.cs
    startLine: 34
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nGets the number of pages that have been read in the container.\n"
  example: []
  syntax:
    content: int PagesRead { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property PagesRead As Integer
  overload: NVorbis.IContainerReader.PagesRead*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: NVorbis.IContainerReader.NewStream
  commentId: E:NVorbis.IContainerReader.NewStream
  id: NewStream
  parent: NVorbis.IContainerReader
  langs:
  - csharp
  - vb
  name: NewStream
  nameWithType: IContainerReader.NewStream
  fullName: NVorbis.IContainerReader.NewStream
  type: Event
  source:
    remote:
      path: NVorbis/IContainerReader.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: NewStream
    path: ../ThirdParty/NVorbis/NVorbis/IContainerReader.cs
    startLine: 39
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nEvent raised when a new logical stream is found in the container.\n"
  example: []
  syntax:
    content: event EventHandler<NewStreamEventArgs> NewStream
    return:
      type: System.EventHandler{NVorbis.NewStreamEventArgs}
    content.vb: Event NewStream As EventHandler(Of NewStreamEventArgs)
- uid: NVorbis.IContainerReader.Init
  commentId: M:NVorbis.IContainerReader.Init
  id: Init
  parent: NVorbis.IContainerReader
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: IContainerReader.Init()
  fullName: NVorbis.IContainerReader.Init()
  type: Method
  source:
    remote:
      path: NVorbis/IContainerReader.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: Init
    path: ../ThirdParty/NVorbis/NVorbis/IContainerReader.cs
    startLine: 45
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nInitializes the container and finds the first stream.\n"
  example: []
  syntax:
    content: bool Init()
    return:
      type: System.Boolean
      description: <code>True</code> if a valid logical stream is found, otherwise <code>False</code>.
    content.vb: Function Init As Boolean
  overload: NVorbis.IContainerReader.Init*
- uid: NVorbis.IContainerReader.FindNextStream
  commentId: M:NVorbis.IContainerReader.FindNextStream
  id: FindNextStream
  parent: NVorbis.IContainerReader
  langs:
  - csharp
  - vb
  name: FindNextStream()
  nameWithType: IContainerReader.FindNextStream()
  fullName: NVorbis.IContainerReader.FindNextStream()
  type: Method
  source:
    remote:
      path: NVorbis/IContainerReader.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: FindNextStream
    path: ../ThirdParty/NVorbis/NVorbis/IContainerReader.cs
    startLine: 52
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nFinds the next new stream in the container.\n"
  example: []
  syntax:
    content: bool FindNextStream()
    return:
      type: System.Boolean
      description: <code>True</code> if a new stream was found, otherwise <code>False</code>.
    content.vb: Function FindNextStream As Boolean
  overload: NVorbis.IContainerReader.FindNextStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="NVorbis.IContainerReader.CanSeek" data-throw-if-not-resolved="false"></xref> is <code>False</code>.
- uid: NVorbis.IContainerReader.GetTotalPageCount
  commentId: M:NVorbis.IContainerReader.GetTotalPageCount
  id: GetTotalPageCount
  parent: NVorbis.IContainerReader
  langs:
  - csharp
  - vb
  name: GetTotalPageCount()
  nameWithType: IContainerReader.GetTotalPageCount()
  fullName: NVorbis.IContainerReader.GetTotalPageCount()
  type: Method
  source:
    remote:
      path: NVorbis/IContainerReader.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: GetTotalPageCount
    path: ../ThirdParty/NVorbis/NVorbis/IContainerReader.cs
    startLine: 59
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nRetrieves the total number of pages in the container.\n"
  example: []
  syntax:
    content: int GetTotalPageCount()
    return:
      type: System.Int32
      description: The total number of pages.
    content.vb: Function GetTotalPageCount As Integer
  overload: NVorbis.IContainerReader.GetTotalPageCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="NVorbis.IContainerReader.CanSeek" data-throw-if-not-resolved="false"></xref> is <code>False</code>.
references:
- uid: NVorbis
  commentId: N:NVorbis
  isExternal: false
  name: NVorbis
  nameWithType: NVorbis
  fullName: NVorbis
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: NVorbis.IContainerReader.StreamSerials*
  commentId: Overload:NVorbis.IContainerReader.StreamSerials
  isExternal: false
  name: StreamSerials
  nameWithType: IContainerReader.StreamSerials
  fullName: NVorbis.IContainerReader.StreamSerials
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NVorbis.IContainerReader.CanSeek*
  commentId: Overload:NVorbis.IContainerReader.CanSeek
  isExternal: false
  name: CanSeek
  nameWithType: IContainerReader.CanSeek
  fullName: NVorbis.IContainerReader.CanSeek
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NVorbis.IContainerReader.WasteBits*
  commentId: Overload:NVorbis.IContainerReader.WasteBits
  isExternal: false
  name: WasteBits
  nameWithType: IContainerReader.WasteBits
  fullName: NVorbis.IContainerReader.WasteBits
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: NVorbis.IContainerReader.PagesRead*
  commentId: Overload:NVorbis.IContainerReader.PagesRead
  isExternal: false
  name: PagesRead
  nameWithType: IContainerReader.PagesRead
  fullName: NVorbis.IContainerReader.PagesRead
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EventHandler{NVorbis.NewStreamEventArgs}
  commentId: T:System.EventHandler{NVorbis.NewStreamEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<NewStreamEventArgs>
  nameWithType: EventHandler<NewStreamEventArgs>
  fullName: System.EventHandler<NVorbis.NewStreamEventArgs>
  nameWithType.vb: EventHandler(Of NewStreamEventArgs)
  fullName.vb: System.EventHandler(Of NVorbis.NewStreamEventArgs)
  name.vb: EventHandler(Of NewStreamEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NVorbis.NewStreamEventArgs
    name: NewStreamEventArgs
    nameWithType: NewStreamEventArgs
    fullName: NVorbis.NewStreamEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NVorbis.NewStreamEventArgs
    name: NewStreamEventArgs
    nameWithType: NewStreamEventArgs
    fullName: NVorbis.NewStreamEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NVorbis.IContainerReader.Init*
  commentId: Overload:NVorbis.IContainerReader.Init
  isExternal: false
  name: Init
  nameWithType: IContainerReader.Init
  fullName: NVorbis.IContainerReader.Init
- uid: NVorbis.IContainerReader.CanSeek
  commentId: P:NVorbis.IContainerReader.CanSeek
  parent: NVorbis.IContainerReader
  isExternal: false
  name: CanSeek
  nameWithType: IContainerReader.CanSeek
  fullName: NVorbis.IContainerReader.CanSeek
- uid: NVorbis.IContainerReader.FindNextStream*
  commentId: Overload:NVorbis.IContainerReader.FindNextStream
  isExternal: false
  name: FindNextStream
  nameWithType: IContainerReader.FindNextStream
  fullName: NVorbis.IContainerReader.FindNextStream
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: NVorbis.IContainerReader
  commentId: T:NVorbis.IContainerReader
  parent: NVorbis
  isExternal: false
  name: IContainerReader
  nameWithType: IContainerReader
  fullName: NVorbis.IContainerReader
- uid: NVorbis.IContainerReader.GetTotalPageCount*
  commentId: Overload:NVorbis.IContainerReader.GetTotalPageCount
  isExternal: false
  name: GetTotalPageCount
  nameWithType: IContainerReader.GetTotalPageCount
  fullName: NVorbis.IContainerReader.GetTotalPageCount
