### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.CurveKey
  commentId: T:Microsoft.Xna.Framework.CurveKey
  id: CurveKey
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.CurveKey.#ctor
  - Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single)
  - Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single)
  - Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.CurveContinuity)
  - Microsoft.Xna.Framework.CurveKey.Clone
  - Microsoft.Xna.Framework.CurveKey.CompareTo(Microsoft.Xna.Framework.CurveKey)
  - Microsoft.Xna.Framework.CurveKey.Continuity
  - Microsoft.Xna.Framework.CurveKey.Equals(Microsoft.Xna.Framework.CurveKey)
  - Microsoft.Xna.Framework.CurveKey.Equals(System.Object)
  - Microsoft.Xna.Framework.CurveKey.GetHashCode
  - Microsoft.Xna.Framework.CurveKey.op_Equality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)
  - Microsoft.Xna.Framework.CurveKey.op_Inequality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)
  - Microsoft.Xna.Framework.CurveKey.Position
  - Microsoft.Xna.Framework.CurveKey.TangentIn
  - Microsoft.Xna.Framework.CurveKey.TangentOut
  - Microsoft.Xna.Framework.CurveKey.Value
  langs:
  - csharp
  - vb
  name: CurveKey
  nameWithType: CurveKey
  fullName: Microsoft.Xna.Framework.CurveKey
  type: Class
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CurveKey
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nKey point on the <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class CurveKey : IEquatable<CurveKey>, IComparable<CurveKey>
    content.vb: >-
      <DataContract>

      Public Class CurveKey
          Implements IEquatable(Of CurveKey), IComparable(Of CurveKey)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Microsoft.Xna.Framework.CurveKey}
  - System.IComparable{Microsoft.Xna.Framework.CurveKey}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.CurveKey.Continuity
  commentId: P:Microsoft.Xna.Framework.CurveKey.Continuity
  id: Continuity
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: Continuity
  nameWithType: CurveKey.Continuity
  fullName: Microsoft.Xna.Framework.CurveKey.Continuity
  type: Property
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Continuity
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 32
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets or sets the indicator whether the segment between this point and the next point on the curve is discrete or continuous.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public CurveContinuity Continuity { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.CurveContinuity
    content.vb: >-
      <DataMember>

      Public Property Continuity As CurveContinuity
  overload: Microsoft.Xna.Framework.CurveKey.Continuity*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.Position
  commentId: P:Microsoft.Xna.Framework.CurveKey.Position
  id: Position
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: CurveKey.Position
  fullName: Microsoft.Xna.Framework.CurveKey.Position
  type: Property
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Position
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 42
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets a position of the key on the curve.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Position { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public ReadOnly Property Position As Single
  overload: Microsoft.Xna.Framework.CurveKey.Position*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.CurveKey.TangentIn
  commentId: P:Microsoft.Xna.Framework.CurveKey.TangentIn
  id: TangentIn
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: TangentIn
  nameWithType: CurveKey.TangentIn
  fullName: Microsoft.Xna.Framework.CurveKey.TangentIn
  type: Property
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TangentIn
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 51
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets or sets a tangent when approaching this point from the previous point on the curve.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float TangentIn { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Property TangentIn As Single
  overload: Microsoft.Xna.Framework.CurveKey.TangentIn*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.TangentOut
  commentId: P:Microsoft.Xna.Framework.CurveKey.TangentOut
  id: TangentOut
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: TangentOut
  nameWithType: CurveKey.TangentOut
  fullName: Microsoft.Xna.Framework.CurveKey.TangentOut
  type: Property
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TangentOut
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 61
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets or sets a tangent when leaving this point to the next point on the curve.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float TangentOut { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Property TangentOut As Single
  overload: Microsoft.Xna.Framework.CurveKey.TangentOut*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.Value
  commentId: P:Microsoft.Xna.Framework.CurveKey.Value
  id: Value
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CurveKey.Value
  fullName: Microsoft.Xna.Framework.CurveKey.Value
  type: Property
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Value
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 71
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nGets a value of this point.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Value { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Property Value As Single
  overload: Microsoft.Xna.Framework.CurveKey.Value*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.#ctor
  commentId: M:Microsoft.Xna.Framework.CurveKey.#ctor
  id: '#ctor'
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: CurveKey()
  nameWithType: CurveKey.CurveKey()
  fullName: Microsoft.Xna.Framework.CurveKey.CurveKey()
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 85
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new instance of <xref href=\"Microsoft.Xna.Framework.CurveKey\" data-throw-if-not-resolved=\"false\"></xref> class with position: 0 and value: 0.\n"
  example: []
  syntax:
    content: public CurveKey()
    content.vb: Public Sub New
  overload: Microsoft.Xna.Framework.CurveKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: CurveKey(Single, Single)
  nameWithType: CurveKey.CurveKey(Single, Single)
  fullName: Microsoft.Xna.Framework.CurveKey.CurveKey(System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 95
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new instance of <xref href=\"Microsoft.Xna.Framework.CurveKey\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CurveKey(float position, float value)
    parameters:
    - id: position
      type: System.Single
      description: Position on the curve.
    - id: value
      type: System.Single
      description: Value of the control point.
    content.vb: Public Sub New(position As Single, value As Single)
  overload: Microsoft.Xna.Framework.CurveKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: CurveKey(Single, Single, Single, Single)
  nameWithType: CurveKey.CurveKey(Single, Single, Single, Single)
  fullName: Microsoft.Xna.Framework.CurveKey.CurveKey(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 108
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new instance of <xref href=\"Microsoft.Xna.Framework.CurveKey\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CurveKey(float position, float value, float tangentIn, float tangentOut)
    parameters:
    - id: position
      type: System.Single
      description: Position on the curve.
    - id: value
      type: System.Single
      description: Value of the control point.
    - id: tangentIn
      type: System.Single
      description: Tangent approaching point from the previous point on the curve.
    - id: tangentOut
      type: System.Single
      description: Tangent leaving point toward next point on the curve.
    content.vb: Public Sub New(position As Single, value As Single, tangentIn As Single, tangentOut As Single)
  overload: Microsoft.Xna.Framework.CurveKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.CurveContinuity)
  commentId: M:Microsoft.Xna.Framework.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.CurveContinuity)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.CurveContinuity)'
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: CurveKey(Single, Single, Single, Single, CurveContinuity)
  nameWithType: CurveKey.CurveKey(Single, Single, Single, Single, CurveContinuity)
  fullName: Microsoft.Xna.Framework.CurveKey.CurveKey(System.Single, System.Single, System.Single, System.Single, Microsoft.Xna.Framework.CurveContinuity)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 122
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a new instance of <xref href=\"Microsoft.Xna.Framework.CurveKey\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CurveKey(float position, float value, float tangentIn, float tangentOut, CurveContinuity continuity)
    parameters:
    - id: position
      type: System.Single
      description: Position on the curve.
    - id: value
      type: System.Single
      description: Value of the control point.
    - id: tangentIn
      type: System.Single
      description: Tangent approaching point from the previous point on the curve.
    - id: tangentOut
      type: System.Single
      description: Tangent leaving point toward next point on the curve.
    - id: continuity
      type: Microsoft.Xna.Framework.CurveContinuity
      description: Indicates whether the curve is discrete or continuous.
    content.vb: Public Sub New(position As Single, value As Single, tangentIn As Single, tangentOut As Single, continuity As CurveContinuity)
  overload: Microsoft.Xna.Framework.CurveKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.op_Inequality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)
  commentId: M:Microsoft.Xna.Framework.CurveKey.op_Inequality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)
  id: op_Inequality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: Inequality(CurveKey, CurveKey)
  nameWithType: CurveKey.Inequality(CurveKey, CurveKey)
  fullName: Microsoft.Xna.Framework.CurveKey.Inequality(Microsoft.Xna.Framework.CurveKey, Microsoft.Xna.Framework.CurveKey)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Inequality
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 140
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\n\nCompares whether two <xref href=\"Microsoft.Xna.Framework.CurveKey\" data-throw-if-not-resolved=\"false\"></xref> instances are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(CurveKey value1, CurveKey value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.CurveKey
      description: <xref href="Microsoft.Xna.Framework.CurveKey" data-throw-if-not-resolved="false"></xref> instance on the left of the not equal sign.
    - id: value2
      type: Microsoft.Xna.Framework.CurveKey
      description: <xref href="Microsoft.Xna.Framework.CurveKey" data-throw-if-not-resolved="false"></xref> instance on the right of the not equal sign.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are not equal; <code>false</code> otherwise.
    content.vb: Public Shared Operator <>(value1 As CurveKey, value2 As CurveKey) As Boolean
  overload: Microsoft.Xna.Framework.CurveKey.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.CurveKey.op_Equality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)
  commentId: M:Microsoft.Xna.Framework.CurveKey.op_Equality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)
  id: op_Equality(Microsoft.Xna.Framework.CurveKey,Microsoft.Xna.Framework.CurveKey)
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: Equality(CurveKey, CurveKey)
  nameWithType: CurveKey.Equality(CurveKey, CurveKey)
  fullName: Microsoft.Xna.Framework.CurveKey.Equality(Microsoft.Xna.Framework.CurveKey, Microsoft.Xna.Framework.CurveKey)
  type: Operator
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: op_Equality
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 151
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCompares whether two <xref href=\"Microsoft.Xna.Framework.CurveKey\" data-throw-if-not-resolved=\"false\"></xref> instances are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(CurveKey value1, CurveKey value2)
    parameters:
    - id: value1
      type: Microsoft.Xna.Framework.CurveKey
      description: <xref href="Microsoft.Xna.Framework.CurveKey" data-throw-if-not-resolved="false"></xref> instance on the left of the equal sign.
    - id: value2
      type: Microsoft.Xna.Framework.CurveKey
      description: <xref href="Microsoft.Xna.Framework.CurveKey" data-throw-if-not-resolved="false"></xref> instance on the right of the equal sign.
    return:
      type: System.Boolean
      description: <code>true</code> if the instances are equal; <code>false</code> otherwise.
    content.vb: Public Shared Operator =(value1 As CurveKey, value2 As CurveKey) As Boolean
  overload: Microsoft.Xna.Framework.CurveKey.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Xna.Framework.CurveKey.Clone
  commentId: M:Microsoft.Xna.Framework.CurveKey.Clone
  id: Clone
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: CurveKey.Clone()
  fullName: Microsoft.Xna.Framework.CurveKey.Clone()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Clone
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 170
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a copy of this key.\n"
  example: []
  syntax:
    content: public CurveKey Clone()
    return:
      type: Microsoft.Xna.Framework.CurveKey
      description: A copy of this key.
    content.vb: Public Function Clone As CurveKey
  overload: Microsoft.Xna.Framework.CurveKey.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.CompareTo(Microsoft.Xna.Framework.CurveKey)
  commentId: M:Microsoft.Xna.Framework.CurveKey.CompareTo(Microsoft.Xna.Framework.CurveKey)
  id: CompareTo(Microsoft.Xna.Framework.CurveKey)
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: CompareTo(CurveKey)
  nameWithType: CurveKey.CompareTo(CurveKey)
  fullName: Microsoft.Xna.Framework.CurveKey.CompareTo(Microsoft.Xna.Framework.CurveKey)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CompareTo
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 177
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public int CompareTo(CurveKey other)
    parameters:
    - id: other
      type: Microsoft.Xna.Framework.CurveKey
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As CurveKey) As Integer
  overload: Microsoft.Xna.Framework.CurveKey.CompareTo*
  implements:
  - System.IComparable{Microsoft.Xna.Framework.CurveKey}.CompareTo(Microsoft.Xna.Framework.CurveKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.Equals(Microsoft.Xna.Framework.CurveKey)
  commentId: M:Microsoft.Xna.Framework.CurveKey.Equals(Microsoft.Xna.Framework.CurveKey)
  id: Equals(Microsoft.Xna.Framework.CurveKey)
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: Equals(CurveKey)
  nameWithType: CurveKey.Equals(CurveKey)
  fullName: Microsoft.Xna.Framework.CurveKey.Equals(Microsoft.Xna.Framework.CurveKey)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 182
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public bool Equals(CurveKey other)
    parameters:
    - id: other
      type: Microsoft.Xna.Framework.CurveKey
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As CurveKey) As Boolean
  overload: Microsoft.Xna.Framework.CurveKey.Equals*
  implements:
  - System.IEquatable{Microsoft.Xna.Framework.CurveKey}.Equals(Microsoft.Xna.Framework.CurveKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.CurveKey.Equals(System.Object)
  commentId: M:Microsoft.Xna.Framework.CurveKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: CurveKey.Equals(Object)
  fullName: Microsoft.Xna.Framework.CurveKey.Equals(System.Object)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Equals
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 187
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.Xna.Framework.CurveKey.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.CurveKey.GetHashCode
  commentId: M:Microsoft.Xna.Framework.CurveKey.GetHashCode
  id: GetHashCode
  parent: Microsoft.Xna.Framework.CurveKey
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CurveKey.GetHashCode()
  fullName: Microsoft.Xna.Framework.CurveKey.GetHashCode()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/CurveKey.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetHashCode
    path: ../MonoGame.Framework/CurveKey.cs
    startLine: 192
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Microsoft.Xna.Framework.CurveKey.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Xna.Framework.Curve
  commentId: T:Microsoft.Xna.Framework.Curve
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Curve
  nameWithType: Curve
  fullName: Microsoft.Xna.Framework.Curve
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.Xna.Framework.CurveKey}
  commentId: T:System.IEquatable{Microsoft.Xna.Framework.CurveKey}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<CurveKey>
  nameWithType: IEquatable<CurveKey>
  fullName: System.IEquatable<Microsoft.Xna.Framework.CurveKey>
  nameWithType.vb: IEquatable(Of CurveKey)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.CurveKey)
  name.vb: IEquatable(Of CurveKey)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.CurveKey
    name: CurveKey
    nameWithType: CurveKey
    fullName: Microsoft.Xna.Framework.CurveKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.CurveKey
    name: CurveKey
    nameWithType: CurveKey
    fullName: Microsoft.Xna.Framework.CurveKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{Microsoft.Xna.Framework.CurveKey}
  commentId: T:System.IComparable{Microsoft.Xna.Framework.CurveKey}
  parent: System
  definition: System.IComparable`1
  name: IComparable<CurveKey>
  nameWithType: IComparable<CurveKey>
  fullName: System.IComparable<Microsoft.Xna.Framework.CurveKey>
  nameWithType.vb: IComparable(Of CurveKey)
  fullName.vb: System.IComparable(Of Microsoft.Xna.Framework.CurveKey)
  name.vb: IComparable(Of CurveKey)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.CurveKey
    name: CurveKey
    nameWithType: CurveKey
    fullName: Microsoft.Xna.Framework.CurveKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.CurveKey
    name: CurveKey
    nameWithType: CurveKey
    fullName: Microsoft.Xna.Framework.CurveKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.CurveKey.Continuity*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.Continuity
  isExternal: false
  name: Continuity
  nameWithType: CurveKey.Continuity
  fullName: Microsoft.Xna.Framework.CurveKey.Continuity
- uid: Microsoft.Xna.Framework.CurveContinuity
  commentId: T:Microsoft.Xna.Framework.CurveContinuity
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: CurveContinuity
  nameWithType: CurveContinuity
  fullName: Microsoft.Xna.Framework.CurveContinuity
- uid: Microsoft.Xna.Framework.CurveKey.Position*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.Position
  isExternal: false
  name: Position
  nameWithType: CurveKey.Position
  fullName: Microsoft.Xna.Framework.CurveKey.Position
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.CurveKey.TangentIn*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.TangentIn
  isExternal: false
  name: TangentIn
  nameWithType: CurveKey.TangentIn
  fullName: Microsoft.Xna.Framework.CurveKey.TangentIn
- uid: Microsoft.Xna.Framework.CurveKey.TangentOut*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.TangentOut
  isExternal: false
  name: TangentOut
  nameWithType: CurveKey.TangentOut
  fullName: Microsoft.Xna.Framework.CurveKey.TangentOut
- uid: Microsoft.Xna.Framework.CurveKey.Value*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.Value
  isExternal: false
  name: Value
  nameWithType: CurveKey.Value
  fullName: Microsoft.Xna.Framework.CurveKey.Value
- uid: Microsoft.Xna.Framework.CurveKey
  commentId: T:Microsoft.Xna.Framework.CurveKey
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: CurveKey
  nameWithType: CurveKey
  fullName: Microsoft.Xna.Framework.CurveKey
- uid: Microsoft.Xna.Framework.CurveKey.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.#ctor
  isExternal: false
  name: CurveKey
  nameWithType: CurveKey.CurveKey
  fullName: Microsoft.Xna.Framework.CurveKey.CurveKey
- uid: Microsoft.Xna.Framework.CurveKey.op_Inequality*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: CurveKey.Inequality
  fullName: Microsoft.Xna.Framework.CurveKey.Inequality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.CurveKey.op_Equality*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.op_Equality
  isExternal: false
  name: Equality
  nameWithType: CurveKey.Equality
  fullName: Microsoft.Xna.Framework.CurveKey.Equality
- uid: Microsoft.Xna.Framework.CurveKey.Clone*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.Clone
  isExternal: false
  name: Clone
  nameWithType: CurveKey.Clone
  fullName: Microsoft.Xna.Framework.CurveKey.Clone
- uid: Microsoft.Xna.Framework.CurveKey.CompareTo*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: CurveKey.CompareTo
  fullName: Microsoft.Xna.Framework.CurveKey.CompareTo
- uid: System.IComparable{Microsoft.Xna.Framework.CurveKey}.CompareTo(Microsoft.Xna.Framework.CurveKey)
  commentId: M:System.IComparable{Microsoft.Xna.Framework.CurveKey}.CompareTo(Microsoft.Xna.Framework.CurveKey)
  parent: System.IComparable{Microsoft.Xna.Framework.CurveKey}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(CurveKey)
  nameWithType: IComparable<CurveKey>.CompareTo(CurveKey)
  fullName: System.IComparable<Microsoft.Xna.Framework.CurveKey>.CompareTo(Microsoft.Xna.Framework.CurveKey)
  nameWithType.vb: IComparable(Of CurveKey).CompareTo(CurveKey)
  fullName.vb: System.IComparable(Of Microsoft.Xna.Framework.CurveKey).CompareTo(Microsoft.Xna.Framework.CurveKey)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<CurveKey>.CompareTo
    fullName: System.IComparable<Microsoft.Xna.Framework.CurveKey>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.CurveKey
    name: CurveKey
    nameWithType: CurveKey
    fullName: Microsoft.Xna.Framework.CurveKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of CurveKey).CompareTo
    fullName: System.IComparable(Of Microsoft.Xna.Framework.CurveKey).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.CurveKey
    name: CurveKey
    nameWithType: CurveKey
    fullName: Microsoft.Xna.Framework.CurveKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.CurveKey.Equals*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.Equals
  isExternal: false
  name: Equals
  nameWithType: CurveKey.Equals
  fullName: Microsoft.Xna.Framework.CurveKey.Equals
- uid: System.IEquatable{Microsoft.Xna.Framework.CurveKey}.Equals(Microsoft.Xna.Framework.CurveKey)
  commentId: M:System.IEquatable{Microsoft.Xna.Framework.CurveKey}.Equals(Microsoft.Xna.Framework.CurveKey)
  parent: System.IEquatable{Microsoft.Xna.Framework.CurveKey}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(CurveKey)
  nameWithType: IEquatable<CurveKey>.Equals(CurveKey)
  fullName: System.IEquatable<Microsoft.Xna.Framework.CurveKey>.Equals(Microsoft.Xna.Framework.CurveKey)
  nameWithType.vb: IEquatable(Of CurveKey).Equals(CurveKey)
  fullName.vb: System.IEquatable(Of Microsoft.Xna.Framework.CurveKey).Equals(Microsoft.Xna.Framework.CurveKey)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<CurveKey>.Equals
    fullName: System.IEquatable<Microsoft.Xna.Framework.CurveKey>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.CurveKey
    name: CurveKey
    nameWithType: CurveKey
    fullName: Microsoft.Xna.Framework.CurveKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of CurveKey).Equals
    fullName: System.IEquatable(Of Microsoft.Xna.Framework.CurveKey).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.CurveKey
    name: CurveKey
    nameWithType: CurveKey
    fullName: Microsoft.Xna.Framework.CurveKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.CurveKey.GetHashCode*
  commentId: Overload:Microsoft.Xna.Framework.CurveKey.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: CurveKey.GetHashCode
  fullName: Microsoft.Xna.Framework.CurveKey.GetHashCode
