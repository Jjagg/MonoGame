### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect
  commentId: T:Microsoft.Xna.Framework.Graphics.BasicEffect
  id: BasicEffect
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.BasicEffect)
  - Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  - Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha
  - Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor
  - Microsoft.Xna.Framework.Graphics.BasicEffect.Clone
  - Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor
  - Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0
  - Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1
  - Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2
  - Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor
  - Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting
  - Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor
  - Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled
  - Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd
  - Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart
  - Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled
  - Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply
  - Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting
  - Microsoft.Xna.Framework.Graphics.BasicEffect.Projection
  - Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor
  - Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower
  - Microsoft.Xna.Framework.Graphics.BasicEffect.Texture
  - Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled
  - Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled
  - Microsoft.Xna.Framework.Graphics.BasicEffect.View
  - Microsoft.Xna.Framework.Graphics.BasicEffect.World
  langs:
  - csharp
  - vb
  name: BasicEffect
  nameWithType: BasicEffect
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: BasicEffect
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 20
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nBuilt-in effect that supports optional texturing, vertex coloring, fog, and lighting.\n"
  example: []
  syntax:
    content: 'public class BasicEffect : Effect, IDisposable, IEffectMatrices, IEffectLights, IEffectFog'
    content.vb: >-
      Public Class BasicEffect
          Inherits Effect
          Implements IDisposable, IEffectMatrices, IEffectLights, IEffectFog
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Graphics.GraphicsResource
  - Microsoft.Xna.Framework.Graphics.Effect
  implements:
  - System.IDisposable
  - Microsoft.Xna.Framework.Graphics.IEffectMatrices
  - Microsoft.Xna.Framework.Graphics.IEffectLights
  - Microsoft.Xna.Framework.Graphics.IEffectFog
  inheritedMembers:
  - Microsoft.Xna.Framework.Graphics.Effect.Parameters
  - Microsoft.Xna.Framework.Graphics.Effect.Techniques
  - Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  - Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.World
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.World
  id: World
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: World
  nameWithType: BasicEffect.World
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.World
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: World
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 76
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the world matrix.\n"
  example: []
  syntax:
    content: public Matrix World { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Property World As Matrix
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.World*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectMatrices.World
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.View
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.View
  id: View
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: View
  nameWithType: BasicEffect.View
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.View
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: View
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 91
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the view matrix.\n"
  example: []
  syntax:
    content: public Matrix View { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Property View As Matrix
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.View*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectMatrices.View
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.Projection
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.Projection
  id: Projection
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: Projection
  nameWithType: BasicEffect.Projection
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.Projection
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Projection
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 106
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the projection matrix.\n"
  example: []
  syntax:
    content: public Matrix Projection { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Property Projection As Matrix
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.Projection*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectMatrices.Projection
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor
  id: DiffuseColor
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: DiffuseColor
  nameWithType: BasicEffect.DiffuseColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DiffuseColor
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 121
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the material diffuse color (range 0 to 1).\n"
  example: []
  syntax:
    content: public Vector3 DiffuseColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property DiffuseColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor
  id: EmissiveColor
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: EmissiveColor
  nameWithType: BasicEffect.EmissiveColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EmissiveColor
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 136
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the material emissive color (range 0 to 1).\n"
  example: []
  syntax:
    content: public Vector3 EmissiveColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property EmissiveColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor
  id: SpecularColor
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: SpecularColor
  nameWithType: BasicEffect.SpecularColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SpecularColor
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 151
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the material specular color (range 0 to 1).\n"
  example: []
  syntax:
    content: public Vector3 SpecularColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property SpecularColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower
  id: SpecularPower
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: SpecularPower
  nameWithType: BasicEffect.SpecularPower
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: SpecularPower
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 161
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the material specular power.\n"
  example: []
  syntax:
    content: public float SpecularPower { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property SpecularPower As Single
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha
  id: Alpha
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: Alpha
  nameWithType: BasicEffect.Alpha
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Alpha
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 171
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the material alpha.\n"
  example: []
  syntax:
    content: public float Alpha { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Alpha As Single
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled
  id: LightingEnabled
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: LightingEnabled
  nameWithType: BasicEffect.LightingEnabled
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: LightingEnabled
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 183
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nToggles the rendering of lighting.\n"
  example: []
  syntax:
    content: public bool LightingEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LightingEnabled As Boolean
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting
  id: PreferPerPixelLighting
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: PreferPerPixelLighting
  nameWithType: BasicEffect.PreferPerPixelLighting
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PreferPerPixelLighting
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 201
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the per-pixel lighting prefer flag.\n"
  example: []
  syntax:
    content: public bool PreferPerPixelLighting { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PreferPerPixelLighting As Boolean
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor
  id: AmbientLightColor
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: AmbientLightColor
  nameWithType: BasicEffect.AmbientLightColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AmbientLightColor
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 217
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nThe floating point ambient light color.\n"
  example: []
  syntax:
    content: public Vector3 AmbientLightColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property AmbientLightColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.AmbientLightColor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0
  id: DirectionalLight0
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: DirectionalLight0
  nameWithType: BasicEffect.DirectionalLight0
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DirectionalLight0
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 230
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nReturns the first directional light.\n"
  example: []
  syntax:
    content: public DirectionalLight DirectionalLight0 { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.DirectionalLight
    content.vb: Public ReadOnly Property DirectionalLight0 As DirectionalLight
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight0
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1
  id: DirectionalLight1
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: DirectionalLight1
  nameWithType: BasicEffect.DirectionalLight1
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DirectionalLight1
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 234
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nReturns the second directional light.\n"
  example: []
  syntax:
    content: public DirectionalLight DirectionalLight1 { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.DirectionalLight
    content.vb: Public ReadOnly Property DirectionalLight1 As DirectionalLight
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight1
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2
  id: DirectionalLight2
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: DirectionalLight2
  nameWithType: BasicEffect.DirectionalLight2
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DirectionalLight2
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 238
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nReturns the third directional light.\n"
  example: []
  syntax:
    content: public DirectionalLight DirectionalLight2 { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.DirectionalLight
    content.vb: Public ReadOnly Property DirectionalLight2 As DirectionalLight
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight2
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled
  id: FogEnabled
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: FogEnabled
  nameWithType: BasicEffect.FogEnabled
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FogEnabled
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 242
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nUsed to toggle the rendering of fog.\n"
  example: []
  syntax:
    content: public bool FogEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FogEnabled As Boolean
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart
  id: FogStart
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: FogStart
  nameWithType: BasicEffect.FogStart
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FogStart
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 258
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nThe world space distance from the camera at which fogging begins.\n"
  remarks: "\nFogStart should be less than FogEnd.  If FogEnd and FogStart are the\nsame value everything is fully fogged.\n"
  example: []
  syntax:
    content: public float FogStart { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property FogStart As Single
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectFog.FogStart
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd
  id: FogEnd
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: FogEnd
  nameWithType: BasicEffect.FogEnd
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FogEnd
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 271
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nThe world space distance from the camera at which fogging is fully applied.\n"
  remarks: "\nFogEnd should be greater than FogStart.  If FogEnd and FogStart \nare the same value everything is fully fogged.\n"
  example: []
  syntax:
    content: public float FogEnd { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property FogEnd As Single
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnd
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor
  id: FogColor
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: FogColor
  nameWithType: BasicEffect.FogColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FogColor
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 284
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nThe floating point fog color.\n"
  example: []
  syntax:
    content: public Vector3 FogColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property FogColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectFog.FogColor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled
  id: TextureEnabled
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: TextureEnabled
  nameWithType: BasicEffect.TextureEnabled
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TextureEnabled
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 294
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets whether texturing is enabled.\n"
  example: []
  syntax:
    content: public bool TextureEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TextureEnabled As Boolean
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.Texture
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.Texture
  id: Texture
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: BasicEffect.Texture
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.Texture
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Texture
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 312
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the current texture.\n"
  example: []
  syntax:
    content: public Texture2D Texture { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.Texture2D
    content.vb: Public Property Texture As Texture2D
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.Texture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled
  id: VertexColorEnabled
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: VertexColorEnabled
  nameWithType: BasicEffect.VertexColorEnabled
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: VertexColorEnabled
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 322
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets whether vertex color is enabled.\n"
  example: []
  syntax:
    content: public bool VertexColorEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property VertexColorEnabled As Boolean
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  commentId: M:Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)'
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: BasicEffect(GraphicsDevice)
  nameWithType: BasicEffect.BasicEffect(GraphicsDevice)
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.BasicEffect(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 344
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCreates a new BasicEffect with default parameter settings.\n"
  example: []
  syntax:
    content: public BasicEffect(GraphicsDevice device)
    parameters:
    - id: device
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    content.vb: Public Sub New(device As GraphicsDevice)
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.BasicEffect)
  commentId: M:Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.BasicEffect)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.BasicEffect)'
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: BasicEffect(BasicEffect)
  nameWithType: BasicEffect.BasicEffect(BasicEffect)
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.BasicEffect(Microsoft.Xna.Framework.Graphics.BasicEffect)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 357
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCreates a new BasicEffect by cloning parameter settings from an existing instance.\n"
  example: []
  syntax:
    content: protected BasicEffect(BasicEffect cloneSource)
    parameters:
    - id: cloneSource
      type: Microsoft.Xna.Framework.Graphics.BasicEffect
    content.vb: Protected Sub New(cloneSource As BasicEffect)
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.Clone
  commentId: M:Microsoft.Xna.Framework.Graphics.BasicEffect.Clone
  id: Clone
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: BasicEffect.Clone()
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.Clone()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Clone
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 386
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCreates a clone of the current BasicEffect instance.\n"
  example: []
  syntax:
    content: public override Effect Clone()
    return:
      type: Microsoft.Xna.Framework.Graphics.Effect
    content.vb: Public Overrides Function Clone As Effect
  overridden: Microsoft.Xna.Framework.Graphics.Effect.Clone
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting
  commentId: M:Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting
  id: EnableDefaultLighting
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: EnableDefaultLighting()
  nameWithType: BasicEffect.EnableDefaultLighting()
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnableDefaultLighting
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 393
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nInitializes the lights to the standard key/fill/back lighting rig.\n"
  example: []
  syntax:
    content: public void EnableDefaultLighting()
    content.vb: Public Sub EnableDefaultLighting
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply
  commentId: M:Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply
  id: OnApply
  parent: Microsoft.Xna.Framework.Graphics.BasicEffect
  langs:
  - csharp
  - vb
  name: OnApply()
  nameWithType: BasicEffect.OnApply()
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/BasicEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnApply
    path: ../MonoGame.Framework/Graphics/Effect/BasicEffect.cs
    startLine: 438
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nLazily computes derived parameter values immediately before applying the effect.\n"
  example: []
  syntax:
    content: protected override void OnApply()
    content.vb: Protected Overrides Sub OnApply
  overridden: Microsoft.Xna.Framework.Graphics.Effect.OnApply
  overload: Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsResource
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsResource
  nameWithType: GraphicsResource
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource
- uid: Microsoft.Xna.Framework.Graphics.Effect
  commentId: T:Microsoft.Xna.Framework.Graphics.Effect
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: Microsoft.Xna.Framework.Graphics.Effect
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.Graphics.IEffectMatrices
  commentId: T:Microsoft.Xna.Framework.Graphics.IEffectMatrices
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: IEffectMatrices
  nameWithType: IEffectMatrices
  fullName: Microsoft.Xna.Framework.Graphics.IEffectMatrices
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights
  commentId: T:Microsoft.Xna.Framework.Graphics.IEffectLights
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: IEffectLights
  nameWithType: IEffectLights
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog
  commentId: T:Microsoft.Xna.Framework.Graphics.IEffectFog
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: IEffectFog
  nameWithType: IEffectFog
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog
- uid: Microsoft.Xna.Framework.Graphics.Effect.Parameters
  commentId: P:Microsoft.Xna.Framework.Graphics.Effect.Parameters
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: Parameters
  nameWithType: Effect.Parameters
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Parameters
- uid: Microsoft.Xna.Framework.Graphics.Effect.Techniques
  commentId: P:Microsoft.Xna.Framework.Graphics.Effect.Techniques
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: Techniques
  nameWithType: Effect.Techniques
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Techniques
- uid: Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  commentId: P:Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: CurrentTechnique
  nameWithType: Effect.CurrentTechnique
  fullName: Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
- uid: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Effect.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Effect.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.Effect.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Effect.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.Effect.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: GraphicsDeviceResetting()
  nameWithType: Effect.GraphicsDeviceResetting()
  fullName: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: Effect.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: Effect.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsResource.Dispose()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  commentId: E:Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Disposing
  nameWithType: GraphicsResource.Disposing
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsResource.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: IsDisposed
  nameWithType: GraphicsResource.IsDisposed
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Name
  nameWithType: GraphicsResource.Name
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Tag
  nameWithType: GraphicsResource.Tag
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: ToString()
  nameWithType: GraphicsResource.ToString()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.World*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.World
  isExternal: false
  name: World
  nameWithType: BasicEffect.World
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.World
- uid: Microsoft.Xna.Framework.Graphics.IEffectMatrices.World
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectMatrices.World
  parent: Microsoft.Xna.Framework.Graphics.IEffectMatrices
  isExternal: false
  name: World
  nameWithType: IEffectMatrices.World
  fullName: Microsoft.Xna.Framework.Graphics.IEffectMatrices.World
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.View*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.View
  isExternal: false
  name: View
  nameWithType: BasicEffect.View
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.View
- uid: Microsoft.Xna.Framework.Graphics.IEffectMatrices.View
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectMatrices.View
  parent: Microsoft.Xna.Framework.Graphics.IEffectMatrices
  isExternal: false
  name: View
  nameWithType: IEffectMatrices.View
  fullName: Microsoft.Xna.Framework.Graphics.IEffectMatrices.View
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.Projection*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.Projection
  isExternal: false
  name: Projection
  nameWithType: BasicEffect.Projection
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.Projection
- uid: Microsoft.Xna.Framework.Graphics.IEffectMatrices.Projection
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectMatrices.Projection
  parent: Microsoft.Xna.Framework.Graphics.IEffectMatrices
  isExternal: false
  name: Projection
  nameWithType: IEffectMatrices.Projection
  fullName: Microsoft.Xna.Framework.Graphics.IEffectMatrices.Projection
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor
  isExternal: false
  name: DiffuseColor
  nameWithType: BasicEffect.DiffuseColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor
- uid: Microsoft.Xna.Framework.Vector3
  commentId: T:Microsoft.Xna.Framework.Vector3
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: Microsoft.Xna.Framework.Vector3
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor
  isExternal: false
  name: EmissiveColor
  nameWithType: BasicEffect.EmissiveColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor
  isExternal: false
  name: SpecularColor
  nameWithType: BasicEffect.SpecularColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower
  isExternal: false
  name: SpecularPower
  nameWithType: BasicEffect.SpecularPower
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha
  isExternal: false
  name: Alpha
  nameWithType: BasicEffect.Alpha
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled
  isExternal: false
  name: LightingEnabled
  nameWithType: BasicEffect.LightingEnabled
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: LightingEnabled
  nameWithType: IEffectLights.LightingEnabled
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting
  isExternal: false
  name: PreferPerPixelLighting
  nameWithType: BasicEffect.PreferPerPixelLighting
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor
  isExternal: false
  name: AmbientLightColor
  nameWithType: BasicEffect.AmbientLightColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.AmbientLightColor
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.AmbientLightColor
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: AmbientLightColor
  nameWithType: IEffectLights.AmbientLightColor
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.AmbientLightColor
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0
  isExternal: false
  name: DirectionalLight0
  nameWithType: BasicEffect.DirectionalLight0
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight0
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight0
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: DirectionalLight0
  nameWithType: IEffectLights.DirectionalLight0
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight0
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight
  commentId: T:Microsoft.Xna.Framework.Graphics.DirectionalLight
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: DirectionalLight
  nameWithType: DirectionalLight
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1
  isExternal: false
  name: DirectionalLight1
  nameWithType: BasicEffect.DirectionalLight1
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight1
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight1
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: DirectionalLight1
  nameWithType: IEffectLights.DirectionalLight1
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight1
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2
  isExternal: false
  name: DirectionalLight2
  nameWithType: BasicEffect.DirectionalLight2
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight2
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight2
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: DirectionalLight2
  nameWithType: IEffectLights.DirectionalLight2
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight2
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled
  isExternal: false
  name: FogEnabled
  nameWithType: BasicEffect.FogEnabled
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnabled
  parent: Microsoft.Xna.Framework.Graphics.IEffectFog
  isExternal: false
  name: FogEnabled
  nameWithType: IEffectFog.FogEnabled
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnabled
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart
  isExternal: false
  name: FogStart
  nameWithType: BasicEffect.FogStart
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog.FogStart
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogStart
  parent: Microsoft.Xna.Framework.Graphics.IEffectFog
  isExternal: false
  name: FogStart
  nameWithType: IEffectFog.FogStart
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog.FogStart
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd
  isExternal: false
  name: FogEnd
  nameWithType: BasicEffect.FogEnd
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnd
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnd
  parent: Microsoft.Xna.Framework.Graphics.IEffectFog
  isExternal: false
  name: FogEnd
  nameWithType: IEffectFog.FogEnd
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnd
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor
  isExternal: false
  name: FogColor
  nameWithType: BasicEffect.FogColor
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog.FogColor
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogColor
  parent: Microsoft.Xna.Framework.Graphics.IEffectFog
  isExternal: false
  name: FogColor
  nameWithType: IEffectFog.FogColor
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog.FogColor
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled
  isExternal: false
  name: TextureEnabled
  nameWithType: BasicEffect.TextureEnabled
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.Texture*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.Texture
  isExternal: false
  name: Texture
  nameWithType: BasicEffect.Texture
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.Texture
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled
  isExternal: false
  name: VertexColorEnabled
  nameWithType: BasicEffect.VertexColorEnabled
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor
  isExternal: false
  name: BasicEffect
  nameWithType: BasicEffect.BasicEffect
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.BasicEffect
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect
  commentId: T:Microsoft.Xna.Framework.Graphics.BasicEffect
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: BasicEffect
  nameWithType: BasicEffect
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect
- uid: Microsoft.Xna.Framework.Graphics.Effect.Clone
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.Clone
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: Clone()
  nameWithType: Effect.Clone()
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Clone()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.Clone
    name: Clone
    nameWithType: Effect.Clone
    fullName: Microsoft.Xna.Framework.Graphics.Effect.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.Clone
    name: Clone
    nameWithType: Effect.Clone
    fullName: Microsoft.Xna.Framework.Graphics.Effect.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.Clone*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.Clone
  isExternal: false
  name: Clone
  nameWithType: BasicEffect.Clone
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.Clone
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting
  isExternal: false
  name: EnableDefaultLighting
  nameWithType: BasicEffect.EnableDefaultLighting
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  commentId: M:Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: EnableDefaultLighting()
  nameWithType: IEffectLights.EnableDefaultLighting()
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
    name: EnableDefaultLighting
    nameWithType: IEffectLights.EnableDefaultLighting
    fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
    name: EnableDefaultLighting
    nameWithType: IEffectLights.EnableDefaultLighting
    fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.Effect.OnApply
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.OnApply
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: OnApply()
  nameWithType: Effect.OnApply()
  fullName: Microsoft.Xna.Framework.Graphics.Effect.OnApply()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.OnApply
    name: OnApply
    nameWithType: Effect.OnApply
    fullName: Microsoft.Xna.Framework.Graphics.Effect.OnApply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.OnApply
    name: OnApply
    nameWithType: Effect.OnApply
    fullName: Microsoft.Xna.Framework.Graphics.Effect.OnApply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply
  isExternal: false
  name: OnApply
  nameWithType: BasicEffect.OnApply
  fullName: Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply
