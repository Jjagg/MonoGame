### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample
  commentId: T:Microsoft.Xna.Framework.Input.Touch.GestureSample
  id: GestureSample
  parent: Microsoft.Xna.Framework.Input.Touch
  children:
  - Microsoft.Xna.Framework.Input.Touch.GestureSample.#ctor(Microsoft.Xna.Framework.Input.Touch.GestureType,System.TimeSpan,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta
  - Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta2
  - Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType
  - Microsoft.Xna.Framework.Input.Touch.GestureSample.Position
  - Microsoft.Xna.Framework.Input.Touch.GestureSample.Position2
  - Microsoft.Xna.Framework.Input.Touch.GestureSample.Timestamp
  langs:
  - csharp
  - vb
  name: GestureSample
  nameWithType: GestureSample
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample
  type: Struct
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureSample.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GestureSample
    path: ../MonoGame.Framework/Input/Touch/GestureSample.cs
    startLine: 48
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nRepresents data from a multi-touch gesture over a span of time.\n"
  example: []
  syntax:
    content: public struct GestureSample
    content.vb: Public Structure GestureSample
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType
  commentId: P:Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType
  id: GestureType
  parent: Microsoft.Xna.Framework.Input.Touch.GestureSample
  langs:
  - csharp
  - vb
  name: GestureType
  nameWithType: GestureSample.GestureType
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureSample.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GestureType
    path: ../MonoGame.Framework/Input/Touch/GestureSample.cs
    startLine: 63
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets the type of the gesture.\n"
  example: []
  syntax:
    content: public GestureType GestureType { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
    content.vb: Public ReadOnly Property GestureType As GestureType
  overload: Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Timestamp
  commentId: P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Timestamp
  id: Timestamp
  parent: Microsoft.Xna.Framework.Input.Touch.GestureSample
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: GestureSample.Timestamp
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Timestamp
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureSample.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Timestamp
    path: ../MonoGame.Framework/Input/Touch/GestureSample.cs
    startLine: 74
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets the starting time for this multi-touch gesture sample.\n"
  example: []
  syntax:
    content: public TimeSpan Timestamp { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property Timestamp As TimeSpan
  overload: Microsoft.Xna.Framework.Input.Touch.GestureSample.Timestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position
  commentId: P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Position
  id: Position
  parent: Microsoft.Xna.Framework.Input.Touch.GestureSample
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: GestureSample.Position
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureSample.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Position
    path: ../MonoGame.Framework/Input/Touch/GestureSample.cs
    startLine: 85
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets the position of the first touch-point in the gesture sample.\n"
  example: []
  syntax:
    content: public Vector2 Position { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property Position As Vector2
  overload: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position2
  commentId: P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Position2
  id: Position2
  parent: Microsoft.Xna.Framework.Input.Touch.GestureSample
  langs:
  - csharp
  - vb
  name: Position2
  nameWithType: GestureSample.Position2
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position2
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureSample.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Position2
    path: ../MonoGame.Framework/Input/Touch/GestureSample.cs
    startLine: 96
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets the position of the second touch-point in the gesture sample.\n"
  example: []
  syntax:
    content: public Vector2 Position2 { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property Position2 As Vector2
  overload: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position2*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta
  commentId: P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta
  id: Delta
  parent: Microsoft.Xna.Framework.Input.Touch.GestureSample
  langs:
  - csharp
  - vb
  name: Delta
  nameWithType: GestureSample.Delta
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureSample.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Delta
    path: ../MonoGame.Framework/Input/Touch/GestureSample.cs
    startLine: 107
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets the delta information for the first touch-point in the gesture sample.\n"
  example: []
  syntax:
    content: public Vector2 Delta { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property Delta As Vector2
  overload: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta2
  commentId: P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta2
  id: Delta2
  parent: Microsoft.Xna.Framework.Input.Touch.GestureSample
  langs:
  - csharp
  - vb
  name: Delta2
  nameWithType: GestureSample.Delta2
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta2
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureSample.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Delta2
    path: ../MonoGame.Framework/Input/Touch/GestureSample.cs
    startLine: 118
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets the delta information for the second touch-point in the gesture sample.\n"
  example: []
  syntax:
    content: public Vector2 Delta2 { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property Delta2 As Vector2
  overload: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta2*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.#ctor(Microsoft.Xna.Framework.Input.Touch.GestureType,System.TimeSpan,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:Microsoft.Xna.Framework.Input.Touch.GestureSample.#ctor(Microsoft.Xna.Framework.Input.Touch.GestureType,System.TimeSpan,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: '#ctor(Microsoft.Xna.Framework.Input.Touch.GestureType,System.TimeSpan,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)'
  parent: Microsoft.Xna.Framework.Input.Touch.GestureSample
  langs:
  - csharp
  - vb
  name: GestureSample(GestureType, TimeSpan, Vector2, Vector2, Vector2, Vector2)
  nameWithType: GestureSample.GestureSample(GestureType, TimeSpan, Vector2, Vector2, Vector2, Vector2)
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureSample(Microsoft.Xna.Framework.Input.Touch.GestureType, System.TimeSpan, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/GestureSample.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Input/Touch/GestureSample.cs
    startLine: 136
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nInitializes a new <xref href=\"Microsoft.Xna.Framework.Input.Touch.GestureSample\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public GestureSample(GestureType gestureType, TimeSpan timestamp, Vector2 position, Vector2 position2, Vector2 delta, Vector2 delta2)
    parameters:
    - id: gestureType
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
      description: <xref href="Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType" data-throw-if-not-resolved="false"></xref>
    - id: timestamp
      type: System.TimeSpan
      description: ''
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: ''
    - id: position2
      type: Microsoft.Xna.Framework.Vector2
      description: ''
    - id: delta
      type: Microsoft.Xna.Framework.Vector2
      description: ''
    - id: delta2
      type: Microsoft.Xna.Framework.Vector2
      description: ''
    content.vb: Public Sub New(gestureType As GestureType, timestamp As TimeSpan, position As Vector2, position2 As Vector2, delta As Vector2, delta2 As Vector2)
  overload: Microsoft.Xna.Framework.Input.Touch.GestureSample.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Input.Touch
  commentId: N:Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: Microsoft.Xna.Framework.Input.Touch
  nameWithType: Microsoft.Xna.Framework.Input.Touch
  fullName: Microsoft.Xna.Framework.Input.Touch
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType
  isExternal: false
  name: GestureType
  nameWithType: GestureSample.GestureType
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType
  commentId: T:Microsoft.Xna.Framework.Input.Touch.GestureType
  parent: Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: GestureType
  nameWithType: GestureType
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Timestamp*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.GestureSample.Timestamp
  isExternal: false
  name: Timestamp
  nameWithType: GestureSample.Timestamp
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Timestamp
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.GestureSample.Position
  isExternal: false
  name: Position
  nameWithType: GestureSample.Position
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position2*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.GestureSample.Position2
  isExternal: false
  name: Position2
  nameWithType: GestureSample.Position2
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Position2
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta
  isExternal: false
  name: Delta
  nameWithType: GestureSample.Delta
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta2*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta2
  isExternal: false
  name: Delta2
  nameWithType: GestureSample.Delta2
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta2
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample
  commentId: T:Microsoft.Xna.Framework.Input.Touch.GestureSample
  parent: Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: GestureSample
  nameWithType: GestureSample
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType
  commentId: P:Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.GestureSample.#ctor
  isExternal: false
  name: GestureSample
  nameWithType: GestureSample.GestureSample
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureSample
