### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.PrimitiveType
  commentId: T:Microsoft.Xna.Framework.Graphics.PrimitiveType
  id: PrimitiveType
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.PrimitiveType.LineList
  - Microsoft.Xna.Framework.Graphics.PrimitiveType.LineStrip
  - Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleList
  - Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleStrip
  langs:
  - csharp
  - vb
  name: PrimitiveType
  nameWithType: PrimitiveType
  fullName: Microsoft.Xna.Framework.Graphics.PrimitiveType
  type: Enum
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PrimitiveType
    path: ../MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
    startLine: 9
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nDefines how vertex data is ordered.\n"
  example: []
  syntax:
    content: public enum PrimitiveType
    content.vb: Public Enum PrimitiveType
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleList
  commentId: F:Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleList
  id: TriangleList
  parent: Microsoft.Xna.Framework.Graphics.PrimitiveType
  langs:
  - csharp
  - vb
  name: TriangleList
  nameWithType: PrimitiveType.TriangleList
  fullName: Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleList
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TriangleList
    path: ../MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nRenders the specified vertices as a sequence of isolated triangles. Each group of three vertices defines a separate triangle. Back-face culling is affected by the current winding-order render state.\n"
  example: []
  syntax:
    content: TriangleList = 0
    return:
      type: Microsoft.Xna.Framework.Graphics.PrimitiveType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleStrip
  commentId: F:Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleStrip
  id: TriangleStrip
  parent: Microsoft.Xna.Framework.Graphics.PrimitiveType
  langs:
  - csharp
  - vb
  name: TriangleStrip
  nameWithType: PrimitiveType.TriangleStrip
  fullName: Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleStrip
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TriangleStrip
    path: ../MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
    startLine: 19
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nRenders the vertices as a triangle strip. The back-face culling flag is flipped automatically on even-numbered triangles.\n"
  example: []
  syntax:
    content: TriangleStrip = 1
    return:
      type: Microsoft.Xna.Framework.Graphics.PrimitiveType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Graphics.PrimitiveType.LineList
  commentId: F:Microsoft.Xna.Framework.Graphics.PrimitiveType.LineList
  id: LineList
  parent: Microsoft.Xna.Framework.Graphics.PrimitiveType
  langs:
  - csharp
  - vb
  name: LineList
  nameWithType: PrimitiveType.LineList
  fullName: Microsoft.Xna.Framework.Graphics.PrimitiveType.LineList
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: LineList
    path: ../MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
    startLine: 24
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nRenders the vertices as a list of isolated straight line segments; the count may be any positive integer.\n"
  example: []
  syntax:
    content: LineList = 2
    return:
      type: Microsoft.Xna.Framework.Graphics.PrimitiveType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Graphics.PrimitiveType.LineStrip
  commentId: F:Microsoft.Xna.Framework.Graphics.PrimitiveType.LineStrip
  id: LineStrip
  parent: Microsoft.Xna.Framework.Graphics.PrimitiveType
  langs:
  - csharp
  - vb
  name: LineStrip
  nameWithType: PrimitiveType.LineStrip
  fullName: Microsoft.Xna.Framework.Graphics.PrimitiveType.LineStrip
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: LineStrip
    path: ../MonoGame.Framework/Graphics/Vertices/PrimitiveType.cs
    startLine: 29
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nRenders the vertices as a single polyline; the count may be any positive integer.\n"
  example: []
  syntax:
    content: LineStrip = 3
    return:
      type: Microsoft.Xna.Framework.Graphics.PrimitiveType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: Microsoft.Xna.Framework.Graphics.PrimitiveType
  commentId: T:Microsoft.Xna.Framework.Graphics.PrimitiveType
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: PrimitiveType
  nameWithType: PrimitiveType
  fullName: Microsoft.Xna.Framework.Graphics.PrimitiveType
