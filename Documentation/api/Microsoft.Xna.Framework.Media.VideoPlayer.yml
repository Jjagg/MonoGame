### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Media.VideoPlayer
  commentId: T:Microsoft.Xna.Framework.Media.VideoPlayer
  id: VideoPlayer
  parent: Microsoft.Xna.Framework.Media
  children:
  - Microsoft.Xna.Framework.Media.VideoPlayer.#ctor
  - Microsoft.Xna.Framework.Media.VideoPlayer.Dispose
  - Microsoft.Xna.Framework.Media.VideoPlayer.GetTexture
  - Microsoft.Xna.Framework.Media.VideoPlayer.IsDisposed
  - Microsoft.Xna.Framework.Media.VideoPlayer.IsLooped
  - Microsoft.Xna.Framework.Media.VideoPlayer.IsMuted
  - Microsoft.Xna.Framework.Media.VideoPlayer.Pause
  - Microsoft.Xna.Framework.Media.VideoPlayer.Play(Microsoft.Xna.Framework.Media.Video)
  - Microsoft.Xna.Framework.Media.VideoPlayer.PlayPosition
  - Microsoft.Xna.Framework.Media.VideoPlayer.Resume
  - Microsoft.Xna.Framework.Media.VideoPlayer.State
  - Microsoft.Xna.Framework.Media.VideoPlayer.Stop
  - Microsoft.Xna.Framework.Media.VideoPlayer.Video
  - Microsoft.Xna.Framework.Media.VideoPlayer.Volume
  langs:
  - csharp
  - vb
  name: VideoPlayer
  nameWithType: VideoPlayer
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.MacOS.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: VideoPlayer
    path: ../MonoGame.Framework/Media/VideoPlayer.MacOS.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: 'public sealed class VideoPlayer : IDisposable'
    content.vb: >-
      Public NotInheritable Class VideoPlayer
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.IsDisposed
  commentId: P:Microsoft.Xna.Framework.Media.VideoPlayer.IsDisposed
  id: IsDisposed
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: VideoPlayer.IsDisposed
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.IsDisposed
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsDisposed
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 31
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets a value that indicates whether the object is disposed.\n"
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.IsDisposed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.IsLooped
  commentId: P:Microsoft.Xna.Framework.Media.VideoPlayer.IsLooped
  id: IsLooped
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: IsLooped
  nameWithType: VideoPlayer.IsLooped
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.IsLooped
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsLooped
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 36
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets a value that indicates whether the player is playing video in a loop.\n"
  example: []
  syntax:
    content: public bool IsLooped { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsLooped As Boolean
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.IsLooped*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.IsMuted
  commentId: P:Microsoft.Xna.Framework.Media.VideoPlayer.IsMuted
  id: IsMuted
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: IsMuted
  nameWithType: VideoPlayer.IsMuted
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.IsMuted
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsMuted
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 52
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets or sets the muted setting for the video player.\n"
  example: []
  syntax:
    content: public bool IsMuted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsMuted As Boolean
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.IsMuted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.PlayPosition
  commentId: P:Microsoft.Xna.Framework.Media.VideoPlayer.PlayPosition
  id: PlayPosition
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: PlayPosition
  nameWithType: VideoPlayer.PlayPosition
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.PlayPosition
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PlayPosition
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 68
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the play position within the currently playing video.\n"
  example: []
  syntax:
    content: public TimeSpan PlayPosition { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property PlayPosition As TimeSpan
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.PlayPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.State
  commentId: P:Microsoft.Xna.Framework.Media.VideoPlayer.State
  id: State
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: State
  nameWithType: VideoPlayer.State
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.State
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: State
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 82
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the media playback state, MediaState.\n"
  example: []
  syntax:
    content: public MediaState State { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Media.MediaState
    content.vb: Public ReadOnly Property State As MediaState
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Video
  commentId: P:Microsoft.Xna.Framework.Media.VideoPlayer.Video
  id: Video
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: Video
  nameWithType: VideoPlayer.Video
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Video
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Video
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 96
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nGets the Video that is currently playing.\n"
  example: []
  syntax:
    content: public Video Video { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Media.Video
    content.vb: Public ReadOnly Property Video As Video
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.Video*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Volume
  commentId: P:Microsoft.Xna.Framework.Media.VideoPlayer.Volume
  id: Volume
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: Volume
  nameWithType: VideoPlayer.Volume
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Volume
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Volume
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 101
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nVideo player volume, from 0.0f (silence) to 1.0f (full volume relative to the current device volume).\n"
  example: []
  syntax:
    content: public float Volume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Volume As Single
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.Volume*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.#ctor
  commentId: M:Microsoft.Xna.Framework.Media.VideoPlayer.#ctor
  id: '#ctor'
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: VideoPlayer()
  nameWithType: VideoPlayer.VideoPlayer()
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.VideoPlayer()
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 121
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  syntax:
    content: public VideoPlayer()
    content.vb: Public Sub New
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.GetTexture
  commentId: M:Microsoft.Xna.Framework.Media.VideoPlayer.GetTexture
  id: GetTexture
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: GetTexture()
  nameWithType: VideoPlayer.GetTexture()
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.GetTexture()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetTexture
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 135
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nRetrieves a Texture2D containing the current frame of video being played.\n"
  example: []
  syntax:
    content: public Texture2D GetTexture()
    return:
      type: Microsoft.Xna.Framework.Graphics.Texture2D
      description: The current frame of video.
    content.vb: Public Function GetTexture As Texture2D
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.GetTexture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if no video is set on the player
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: >-
      Thrown if the platform was unable to get a texture in a reasonable amount of time. Often the platform specific media code is running

      in a different thread or process. Note: This may be a change from XNA behaviour
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Pause
  commentId: M:Microsoft.Xna.Framework.Media.VideoPlayer.Pause
  id: Pause
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: Pause()
  nameWithType: VideoPlayer.Pause()
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Pause()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Pause
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 171
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nPauses the currently playing video.\n"
  example: []
  syntax:
    content: public void Pause()
    content.vb: Public Sub Pause
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.Pause*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Play(Microsoft.Xna.Framework.Media.Video)
  commentId: M:Microsoft.Xna.Framework.Media.VideoPlayer.Play(Microsoft.Xna.Framework.Media.Video)
  id: Play(Microsoft.Xna.Framework.Media.Video)
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: Play(Video)
  nameWithType: VideoPlayer.Play(Video)
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Play(Microsoft.Xna.Framework.Media.Video)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Play
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 185
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nPlays a Video.\n"
  example: []
  syntax:
    content: public void Play(Video video)
    parameters:
    - id: video
      type: Microsoft.Xna.Framework.Media.Video
      description: Video to play.
    content.vb: Public Sub Play(video As Video)
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.Play*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Resume
  commentId: M:Microsoft.Xna.Framework.Media.VideoPlayer.Resume
  id: Resume
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: VideoPlayer.Resume()
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Resume()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Resume
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 243
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nResumes a paused video.\n"
  example: []
  syntax:
    content: public void Resume()
    content.vb: Public Sub Resume
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.Resume*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Stop
  commentId: M:Microsoft.Xna.Framework.Media.VideoPlayer.Stop
  id: Stop
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: VideoPlayer.Stop()
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Stop()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Stop
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 268
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nStops playing a video.\n"
  example: []
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Dispose
  commentId: M:Microsoft.Xna.Framework.Media.VideoPlayer.Dispose
  id: Dispose
  parent: Microsoft.Xna.Framework.Media.VideoPlayer
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: VideoPlayer.Dispose()
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Dispose()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Media/VideoPlayer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/Media/VideoPlayer.cs
    startLine: 285
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Media
  summary: "\nImmediately releases the unmanaged resources used by this object.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Xna.Framework.Media.VideoPlayer.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Media
  commentId: N:Microsoft.Xna.Framework.Media
  isExternal: false
  name: Microsoft.Xna.Framework.Media
  nameWithType: Microsoft.Xna.Framework.Media
  fullName: Microsoft.Xna.Framework.Media
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.IsDisposed*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.IsDisposed
  isExternal: false
  name: IsDisposed
  nameWithType: VideoPlayer.IsDisposed
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.IsDisposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.IsLooped*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.IsLooped
  isExternal: false
  name: IsLooped
  nameWithType: VideoPlayer.IsLooped
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.IsLooped
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.IsMuted*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.IsMuted
  isExternal: false
  name: IsMuted
  nameWithType: VideoPlayer.IsMuted
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.IsMuted
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.PlayPosition*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.PlayPosition
  isExternal: false
  name: PlayPosition
  nameWithType: VideoPlayer.PlayPosition
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.PlayPosition
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.State*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.State
  isExternal: false
  name: State
  nameWithType: VideoPlayer.State
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.State
- uid: Microsoft.Xna.Framework.Media.MediaState
  commentId: T:Microsoft.Xna.Framework.Media.MediaState
  parent: Microsoft.Xna.Framework.Media
  isExternal: false
  name: MediaState
  nameWithType: MediaState
  fullName: Microsoft.Xna.Framework.Media.MediaState
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Video*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.Video
  isExternal: false
  name: Video
  nameWithType: VideoPlayer.Video
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Video
- uid: Microsoft.Xna.Framework.Media.Video
  commentId: T:Microsoft.Xna.Framework.Media.Video
  parent: Microsoft.Xna.Framework.Media
  isExternal: false
  name: Video
  nameWithType: Video
  fullName: Microsoft.Xna.Framework.Media.Video
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Volume*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.Volume
  isExternal: false
  name: Volume
  nameWithType: VideoPlayer.Volume
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Volume
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.#ctor
  isExternal: false
  name: VideoPlayer
  nameWithType: VideoPlayer.VideoPlayer
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.VideoPlayer
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.GetTexture*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.GetTexture
  isExternal: false
  name: GetTexture
  nameWithType: VideoPlayer.GetTexture
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.GetTexture
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Pause*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.Pause
  isExternal: false
  name: Pause
  nameWithType: VideoPlayer.Pause
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Pause
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Play*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.Play
  isExternal: false
  name: Play
  nameWithType: VideoPlayer.Play
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Play
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Resume*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.Resume
  isExternal: false
  name: Resume
  nameWithType: VideoPlayer.Resume
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Resume
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Stop*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.Stop
  isExternal: false
  name: Stop
  nameWithType: VideoPlayer.Stop
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Stop
- uid: Microsoft.Xna.Framework.Media.VideoPlayer.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.Media.VideoPlayer.Dispose
  isExternal: false
  name: Dispose
  nameWithType: VideoPlayer.Dispose
  fullName: Microsoft.Xna.Framework.Media.VideoPlayer.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
