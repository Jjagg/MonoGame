### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  commentId: T:Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  id: TouchPanelState
  parent: Microsoft.Xna.Framework.Input.Touch
  children:
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayHeight
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayOrientation
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayWidth
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnabledGestures
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseGestures
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseTouchPoint
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetCapabilities
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetState
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.IsGestureAvailable
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReadGesture
  - Microsoft.Xna.Framework.Input.Touch.TouchPanelState.WindowHandle
  langs:
  - csharp
  - vb
  name: TouchPanelState
  nameWithType: TouchPanelState
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: TouchPanelState
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 9
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  syntax:
    content: public class TouchPanelState
    content.vb: Public Class TouchPanelState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.WindowHandle
  commentId: P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.WindowHandle
  id: WindowHandle
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: WindowHandle
  nameWithType: TouchPanelState.WindowHandle
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.WindowHandle
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: WindowHandle
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 67
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nThe window handle of the touch panel. Purely for Xna compatibility.\n"
  example: []
  syntax:
    content: public IntPtr WindowHandle { get; set; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public Property WindowHandle As IntPtr
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.WindowHandle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetCapabilities
  commentId: M:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetCapabilities
  id: GetCapabilities
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: GetCapabilities()
  nameWithType: TouchPanelState.GetCapabilities()
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetCapabilities()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetCapabilities
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 73
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nReturns capabilities of touch panel device.\n"
  example: []
  syntax:
    content: public TouchPanelCapabilities GetCapabilities()
    return:
      type: Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities
      description: <xref href="Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetCapabilities As TouchPanelCapabilities
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetCapabilities*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetState
  commentId: M:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetState
  id: GetState
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: GetState()
  nameWithType: TouchPanelState.GetState()
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetState()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetState
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 134
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  syntax:
    content: public TouchCollection GetState()
    return:
      type: Microsoft.Xna.Framework.Input.Touch.TouchCollection
    content.vb: Public Function GetState As TouchCollection
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayHeight
  commentId: P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayHeight
  id: DisplayHeight
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: DisplayHeight
  nameWithType: TouchPanelState.DisplayHeight
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayHeight
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DisplayHeight
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 269
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets or sets the display height of the touch panel.\n"
  example: []
  syntax:
    content: public int DisplayHeight { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DisplayHeight As Integer
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayHeight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayOrientation
  commentId: P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayOrientation
  id: DisplayOrientation
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: DisplayOrientation
  nameWithType: TouchPanelState.DisplayOrientation
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayOrientation
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DisplayOrientation
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 285
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets or sets the display orientation of the touch panel.\n"
  example: []
  syntax:
    content: public DisplayOrientation DisplayOrientation { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.DisplayOrientation
    content.vb: Public Property DisplayOrientation As DisplayOrientation
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayOrientation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayWidth
  commentId: P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayWidth
  id: DisplayWidth
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: DisplayWidth
  nameWithType: TouchPanelState.DisplayWidth
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayWidth
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DisplayWidth
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 290
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets or sets the display width of the touch panel.\n"
  example: []
  syntax:
    content: public int DisplayWidth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DisplayWidth As Integer
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayWidth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnabledGestures
  commentId: P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnabledGestures
  id: EnabledGestures
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: EnabledGestures
  nameWithType: TouchPanelState.EnabledGestures
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnabledGestures
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnabledGestures
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 306
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nGets or sets enabled gestures.\n"
  example: []
  syntax:
    content: public GestureType EnabledGestures { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureType
    content.vb: Public Property EnabledGestures As GestureType
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnabledGestures*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseTouchPoint
  commentId: P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseTouchPoint
  id: EnableMouseTouchPoint
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: EnableMouseTouchPoint
  nameWithType: TouchPanelState.EnableMouseTouchPoint
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseTouchPoint
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnableMouseTouchPoint
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 308
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  syntax:
    content: public bool EnableMouseTouchPoint { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableMouseTouchPoint As Boolean
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseTouchPoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseGestures
  commentId: P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseGestures
  id: EnableMouseGestures
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: EnableMouseGestures
  nameWithType: TouchPanelState.EnableMouseGestures
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseGestures
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnableMouseGestures
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 310
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  syntax:
    content: public bool EnableMouseGestures { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableMouseGestures As Boolean
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseGestures*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.IsGestureAvailable
  commentId: P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.IsGestureAvailable
  id: IsGestureAvailable
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: IsGestureAvailable
  nameWithType: TouchPanelState.IsGestureAvailable
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.IsGestureAvailable
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsGestureAvailable
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 315
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nReturns true if a touch gesture is available.\n"
  example: []
  syntax:
    content: public bool IsGestureAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsGestureAvailable As Boolean
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.IsGestureAvailable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReadGesture
  commentId: M:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReadGesture
  id: ReadGesture
  parent: Microsoft.Xna.Framework.Input.Touch.TouchPanelState
  langs:
  - csharp
  - vb
  name: ReadGesture()
  nameWithType: TouchPanelState.ReadGesture()
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReadGesture()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Input/Touch/TouchPanelState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ReadGesture
    path: ../MonoGame.Framework/Input/Touch/TouchPanelState.cs
    startLine: 330
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Input.Touch
  summary: "\nReturns the next available gesture on touch panel device.\n"
  example: []
  syntax:
    content: public GestureSample ReadGesture()
    return:
      type: Microsoft.Xna.Framework.Input.Touch.GestureSample
      description: <xref href="Microsoft.Xna.Framework.Input.Touch.GestureSample" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ReadGesture As GestureSample
  overload: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReadGesture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Input.Touch
  commentId: N:Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: Microsoft.Xna.Framework.Input.Touch
  nameWithType: Microsoft.Xna.Framework.Input.Touch
  fullName: Microsoft.Xna.Framework.Input.Touch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.WindowHandle*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.WindowHandle
  isExternal: false
  name: WindowHandle
  nameWithType: TouchPanelState.WindowHandle
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.WindowHandle
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities
  commentId: T:Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities
  parent: Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: TouchPanelCapabilities
  nameWithType: TouchPanelCapabilities
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetCapabilities*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetCapabilities
  isExternal: false
  name: GetCapabilities
  nameWithType: TouchPanelState.GetCapabilities
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetCapabilities
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetState*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetState
  isExternal: false
  name: GetState
  nameWithType: TouchPanelState.GetState
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetState
- uid: Microsoft.Xna.Framework.Input.Touch.TouchCollection
  commentId: T:Microsoft.Xna.Framework.Input.Touch.TouchCollection
  parent: Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: TouchCollection
  nameWithType: TouchCollection
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchCollection
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayHeight*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayHeight
  isExternal: false
  name: DisplayHeight
  nameWithType: TouchPanelState.DisplayHeight
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayHeight
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayOrientation*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayOrientation
  isExternal: false
  name: DisplayOrientation
  nameWithType: TouchPanelState.DisplayOrientation
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayOrientation
- uid: Microsoft.Xna.Framework.DisplayOrientation
  commentId: T:Microsoft.Xna.Framework.DisplayOrientation
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: DisplayOrientation
  nameWithType: DisplayOrientation
  fullName: Microsoft.Xna.Framework.DisplayOrientation
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayWidth*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayWidth
  isExternal: false
  name: DisplayWidth
  nameWithType: TouchPanelState.DisplayWidth
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayWidth
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnabledGestures*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnabledGestures
  isExternal: false
  name: EnabledGestures
  nameWithType: TouchPanelState.EnabledGestures
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnabledGestures
- uid: Microsoft.Xna.Framework.Input.Touch.GestureType
  commentId: T:Microsoft.Xna.Framework.Input.Touch.GestureType
  parent: Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: GestureType
  nameWithType: GestureType
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureType
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseTouchPoint*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseTouchPoint
  isExternal: false
  name: EnableMouseTouchPoint
  nameWithType: TouchPanelState.EnableMouseTouchPoint
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseTouchPoint
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseGestures*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseGestures
  isExternal: false
  name: EnableMouseGestures
  nameWithType: TouchPanelState.EnableMouseGestures
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnableMouseGestures
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.IsGestureAvailable*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.IsGestureAvailable
  isExternal: false
  name: IsGestureAvailable
  nameWithType: TouchPanelState.IsGestureAvailable
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.IsGestureAvailable
- uid: Microsoft.Xna.Framework.Input.Touch.GestureSample
  commentId: T:Microsoft.Xna.Framework.Input.Touch.GestureSample
  parent: Microsoft.Xna.Framework.Input.Touch
  isExternal: false
  name: GestureSample
  nameWithType: GestureSample
  fullName: Microsoft.Xna.Framework.Input.Touch.GestureSample
- uid: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReadGesture*
  commentId: Overload:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReadGesture
  isExternal: false
  name: ReadGesture
  nameWithType: TouchPanelState.ReadGesture
  fullName: Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReadGesture
