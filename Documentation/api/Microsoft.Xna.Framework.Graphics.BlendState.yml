### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.BlendState
  commentId: T:Microsoft.Xna.Framework.Graphics.BlendState
  id: BlendState
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.BlendState.#ctor
  - Microsoft.Xna.Framework.Graphics.BlendState.Additive
  - Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend
  - Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlendFunction
  - Microsoft.Xna.Framework.Graphics.BlendState.AlphaDestinationBlend
  - Microsoft.Xna.Framework.Graphics.BlendState.AlphaSourceBlend
  - Microsoft.Xna.Framework.Graphics.BlendState.BlendFactor
  - Microsoft.Xna.Framework.Graphics.BlendState.ColorBlendFunction
  - Microsoft.Xna.Framework.Graphics.BlendState.ColorDestinationBlend
  - Microsoft.Xna.Framework.Graphics.BlendState.ColorSourceBlend
  - Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels
  - Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels1
  - Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels2
  - Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels3
  - Microsoft.Xna.Framework.Graphics.BlendState.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable
  - Microsoft.Xna.Framework.Graphics.BlendState.Item(System.Int32)
  - Microsoft.Xna.Framework.Graphics.BlendState.MultiSampleMask
  - Microsoft.Xna.Framework.Graphics.BlendState.NonPremultiplied
  - Microsoft.Xna.Framework.Graphics.BlendState.Opaque
  langs:
  - csharp
  - vb
  name: BlendState
  nameWithType: BlendState
  fullName: Microsoft.Xna.Framework.Graphics.BlendState
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.OpenGL.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: BlendState
    path: ../MonoGame.Framework/Graphics/States/BlendState.OpenGL.cs
    startLine: 8
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public class BlendState : GraphicsResource, IDisposable'
    content.vb: >-
      Public Class BlendState
          Inherits GraphicsResource
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Graphics.GraphicsResource
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.BlendState.Item(System.Int32)
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: BlendState.Item[Int32]
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.Item[System.Int32]
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: this[]
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 42
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nReturns the target specific blend state.\n"
  example: []
  syntax:
    content: public TargetBlendState this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The 0 to 3 target blend state index.
    return:
      type: Microsoft.Xna.Framework.Graphics.TargetBlendState
      description: A target blend state.
    content.vb: Public ReadOnly Property Item(index As Integer) As TargetBlendState
  overload: Microsoft.Xna.Framework.Graphics.BlendState.Item*
  nameWithType.vb: BlendState.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Xna.Framework.Graphics.BlendState.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlendFunction
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlendFunction
  id: AlphaBlendFunction
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: AlphaBlendFunction
  nameWithType: BlendState.AlphaBlendFunction
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlendFunction
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AlphaBlendFunction
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 47
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public BlendFunction AlphaBlendFunction { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.BlendFunction
    content.vb: Public Property AlphaBlendFunction As BlendFunction
  overload: Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlendFunction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.AlphaDestinationBlend
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.AlphaDestinationBlend
  id: AlphaDestinationBlend
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: AlphaDestinationBlend
  nameWithType: BlendState.AlphaDestinationBlend
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.AlphaDestinationBlend
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AlphaDestinationBlend
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 57
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Blend AlphaDestinationBlend { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.Blend
    content.vb: Public Property AlphaDestinationBlend As Blend
  overload: Microsoft.Xna.Framework.Graphics.BlendState.AlphaDestinationBlend*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.AlphaSourceBlend
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.AlphaSourceBlend
  id: AlphaSourceBlend
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: AlphaSourceBlend
  nameWithType: BlendState.AlphaSourceBlend
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.AlphaSourceBlend
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AlphaSourceBlend
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 67
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Blend AlphaSourceBlend { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.Blend
    content.vb: Public Property AlphaSourceBlend As Blend
  overload: Microsoft.Xna.Framework.Graphics.BlendState.AlphaSourceBlend*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorBlendFunction
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.ColorBlendFunction
  id: ColorBlendFunction
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: ColorBlendFunction
  nameWithType: BlendState.ColorBlendFunction
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorBlendFunction
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ColorBlendFunction
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 77
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public BlendFunction ColorBlendFunction { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.BlendFunction
    content.vb: Public Property ColorBlendFunction As BlendFunction
  overload: Microsoft.Xna.Framework.Graphics.BlendState.ColorBlendFunction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorDestinationBlend
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.ColorDestinationBlend
  id: ColorDestinationBlend
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: ColorDestinationBlend
  nameWithType: BlendState.ColorDestinationBlend
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorDestinationBlend
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ColorDestinationBlend
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 87
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Blend ColorDestinationBlend { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.Blend
    content.vb: Public Property ColorDestinationBlend As Blend
  overload: Microsoft.Xna.Framework.Graphics.BlendState.ColorDestinationBlend*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorSourceBlend
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.ColorSourceBlend
  id: ColorSourceBlend
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: ColorSourceBlend
  nameWithType: BlendState.ColorSourceBlend
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorSourceBlend
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ColorSourceBlend
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 97
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Blend ColorSourceBlend { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.Blend
    content.vb: Public Property ColorSourceBlend As Blend
  overload: Microsoft.Xna.Framework.Graphics.BlendState.ColorSourceBlend*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels
  id: ColorWriteChannels
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: ColorWriteChannels
  nameWithType: BlendState.ColorWriteChannels
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ColorWriteChannels
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 107
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public ColorWriteChannels ColorWriteChannels { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.ColorWriteChannels
    content.vb: Public Property ColorWriteChannels As ColorWriteChannels
  overload: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels1
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels1
  id: ColorWriteChannels1
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: ColorWriteChannels1
  nameWithType: BlendState.ColorWriteChannels1
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels1
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ColorWriteChannels1
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 117
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public ColorWriteChannels ColorWriteChannels1 { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.ColorWriteChannels
    content.vb: Public Property ColorWriteChannels1 As ColorWriteChannels
  overload: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels2
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels2
  id: ColorWriteChannels2
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: ColorWriteChannels2
  nameWithType: BlendState.ColorWriteChannels2
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels2
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ColorWriteChannels2
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 127
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public ColorWriteChannels ColorWriteChannels2 { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.ColorWriteChannels
    content.vb: Public Property ColorWriteChannels2 As ColorWriteChannels
  overload: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels3
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels3
  id: ColorWriteChannels3
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: ColorWriteChannels3
  nameWithType: BlendState.ColorWriteChannels3
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels3
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ColorWriteChannels3
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 137
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public ColorWriteChannels ColorWriteChannels3 { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.ColorWriteChannels
    content.vb: Public Property ColorWriteChannels3 As ColorWriteChannels
  overload: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels3*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.BlendFactor
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.BlendFactor
  id: BlendFactor
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: BlendFactor
  nameWithType: BlendState.BlendFactor
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.BlendFactor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: BlendFactor
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 154
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nThe color used as blend factor when alpha blending.\n"
  remarks: "\n<xref href=\"Microsoft.Xna.Framework.Graphics.GraphicsDevice.BlendFactor\" data-throw-if-not-resolved=\"false\"></xref> is set to this value when this <xref href=\"Microsoft.Xna.Framework.Graphics.BlendState\" data-throw-if-not-resolved=\"false\"></xref>\nis bound to a GraphicsDevice.\n"
  example: []
  syntax:
    content: public Color BlendFactor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public Property BlendFactor As Color
  overload: Microsoft.Xna.Framework.Graphics.BlendState.BlendFactor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.MultiSampleMask
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.MultiSampleMask
  id: MultiSampleMask
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: MultiSampleMask
  nameWithType: BlendState.MultiSampleMask
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.MultiSampleMask
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: MultiSampleMask
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 164
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public int MultiSampleMask { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MultiSampleMask As Integer
  overload: Microsoft.Xna.Framework.Graphics.BlendState.MultiSampleMask*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable
  commentId: P:Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable
  id: IndependentBlendEnable
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: IndependentBlendEnable
  nameWithType: BlendState.IndependentBlendEnable
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IndependentBlendEnable
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 177
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nEnables use of the per-target blend states.\n"
  example: []
  syntax:
    content: public bool IndependentBlendEnable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IndependentBlendEnable As Boolean
  overload: Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.Additive
  commentId: F:Microsoft.Xna.Framework.Graphics.BlendState.Additive
  id: Additive
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: Additive
  nameWithType: BlendState.Additive
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.Additive
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Additive
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 188
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public static readonly BlendState Additive
    return:
      type: Microsoft.Xna.Framework.Graphics.BlendState
    content.vb: Public Shared ReadOnly Additive As BlendState
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend
  commentId: F:Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend
  id: AlphaBlend
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: AlphaBlend
  nameWithType: BlendState.AlphaBlend
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AlphaBlend
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 189
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public static readonly BlendState AlphaBlend
    return:
      type: Microsoft.Xna.Framework.Graphics.BlendState
    content.vb: Public Shared ReadOnly AlphaBlend As BlendState
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.BlendState.NonPremultiplied
  commentId: F:Microsoft.Xna.Framework.Graphics.BlendState.NonPremultiplied
  id: NonPremultiplied
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: NonPremultiplied
  nameWithType: BlendState.NonPremultiplied
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.NonPremultiplied
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: NonPremultiplied
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 190
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public static readonly BlendState NonPremultiplied
    return:
      type: Microsoft.Xna.Framework.Graphics.BlendState
    content.vb: Public Shared ReadOnly NonPremultiplied As BlendState
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.BlendState.Opaque
  commentId: F:Microsoft.Xna.Framework.Graphics.BlendState.Opaque
  id: Opaque
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: Opaque
  nameWithType: BlendState.Opaque
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.Opaque
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Opaque
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 191
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public static readonly BlendState Opaque
    return:
      type: Microsoft.Xna.Framework.Graphics.BlendState
    content.vb: Public Shared ReadOnly Opaque As BlendState
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.BlendState.#ctor
  commentId: M:Microsoft.Xna.Framework.Graphics.BlendState.#ctor
  id: '#ctor'
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: BlendState()
  nameWithType: BlendState.BlendState()
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.BlendState()
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 193
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public BlendState()
    content.vb: Public Sub New
  overload: Microsoft.Xna.Framework.Graphics.BlendState.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.BlendState.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.BlendState.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.BlendState
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BlendState.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/States/BlendState.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/Graphics/States/BlendState.cs
    startLine: 247
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  overload: Microsoft.Xna.Framework.Graphics.BlendState.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsResource
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsResource
  nameWithType: GraphicsResource
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDeviceResetting()
  nameWithType: GraphicsResource.GraphicsDeviceResetting()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: GraphicsResource.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: GraphicsResource.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsResource.Dispose()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  commentId: E:Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Disposing
  nameWithType: GraphicsResource.Disposing
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsResource.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: IsDisposed
  nameWithType: GraphicsResource.IsDisposed
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Name
  nameWithType: GraphicsResource.Name
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Tag
  nameWithType: GraphicsResource.Tag
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: ToString()
  nameWithType: GraphicsResource.ToString()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.BlendState.Item*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.Item
  isExternal: false
  name: Item
  nameWithType: BlendState.Item
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Graphics.TargetBlendState
  commentId: T:Microsoft.Xna.Framework.Graphics.TargetBlendState
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: TargetBlendState
  nameWithType: TargetBlendState
  fullName: Microsoft.Xna.Framework.Graphics.TargetBlendState
- uid: Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlendFunction*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlendFunction
  isExternal: false
  name: AlphaBlendFunction
  nameWithType: BlendState.AlphaBlendFunction
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlendFunction
- uid: Microsoft.Xna.Framework.Graphics.BlendFunction
  commentId: T:Microsoft.Xna.Framework.Graphics.BlendFunction
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: BlendFunction
  nameWithType: BlendFunction
  fullName: Microsoft.Xna.Framework.Graphics.BlendFunction
- uid: Microsoft.Xna.Framework.Graphics.BlendState.AlphaDestinationBlend*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.AlphaDestinationBlend
  isExternal: false
  name: AlphaDestinationBlend
  nameWithType: BlendState.AlphaDestinationBlend
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.AlphaDestinationBlend
- uid: Microsoft.Xna.Framework.Graphics.Blend
  commentId: T:Microsoft.Xna.Framework.Graphics.Blend
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Blend
  nameWithType: Blend
  fullName: Microsoft.Xna.Framework.Graphics.Blend
- uid: Microsoft.Xna.Framework.Graphics.BlendState.AlphaSourceBlend*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.AlphaSourceBlend
  isExternal: false
  name: AlphaSourceBlend
  nameWithType: BlendState.AlphaSourceBlend
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.AlphaSourceBlend
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorBlendFunction*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.ColorBlendFunction
  isExternal: false
  name: ColorBlendFunction
  nameWithType: BlendState.ColorBlendFunction
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorBlendFunction
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorDestinationBlend*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.ColorDestinationBlend
  isExternal: false
  name: ColorDestinationBlend
  nameWithType: BlendState.ColorDestinationBlend
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorDestinationBlend
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorSourceBlend*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.ColorSourceBlend
  isExternal: false
  name: ColorSourceBlend
  nameWithType: BlendState.ColorSourceBlend
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorSourceBlend
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels
  isExternal: false
  name: ColorWriteChannels
  nameWithType: BlendState.ColorWriteChannels
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels
- uid: Microsoft.Xna.Framework.Graphics.ColorWriteChannels
  commentId: T:Microsoft.Xna.Framework.Graphics.ColorWriteChannels
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: ColorWriteChannels
  nameWithType: ColorWriteChannels
  fullName: Microsoft.Xna.Framework.Graphics.ColorWriteChannels
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels1*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels1
  isExternal: false
  name: ColorWriteChannels1
  nameWithType: BlendState.ColorWriteChannels1
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels1
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels2*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels2
  isExternal: false
  name: ColorWriteChannels2
  nameWithType: BlendState.ColorWriteChannels2
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels2
- uid: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels3*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels3
  isExternal: false
  name: ColorWriteChannels3
  nameWithType: BlendState.ColorWriteChannels3
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.ColorWriteChannels3
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice.BlendFactor
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsDevice.BlendFactor
- uid: Microsoft.Xna.Framework.Graphics.BlendState
  commentId: T:Microsoft.Xna.Framework.Graphics.BlendState
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: BlendState
  nameWithType: BlendState
  fullName: Microsoft.Xna.Framework.Graphics.BlendState
- uid: Microsoft.Xna.Framework.Graphics.BlendState.BlendFactor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.BlendFactor
  isExternal: false
  name: BlendFactor
  nameWithType: BlendState.BlendFactor
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.BlendFactor
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Graphics.BlendState.MultiSampleMask*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.MultiSampleMask
  isExternal: false
  name: MultiSampleMask
  nameWithType: BlendState.MultiSampleMask
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.MultiSampleMask
- uid: Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable
  isExternal: false
  name: IndependentBlendEnable
  nameWithType: BlendState.IndependentBlendEnable
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.BlendState.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.#ctor
  isExternal: false
  name: BlendState
  nameWithType: BlendState.BlendState
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.BlendState
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: GraphicsResource.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.BlendState.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.BlendState.Dispose
  isExternal: false
  name: Dispose
  nameWithType: BlendState.Dispose
  fullName: Microsoft.Xna.Framework.Graphics.BlendState.Dispose
