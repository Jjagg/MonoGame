### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  commentId: T:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  id: EffectTechniqueCollection
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Count
  - Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.GetEnumerator
  - Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item(System.Int32)
  - Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item(System.String)
  - Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: EffectTechniqueCollection
  nameWithType: EffectTechniqueCollection
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EffectTechniqueCollection
    path: ../MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
    startLine: 4
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public class EffectTechniqueCollection : IEnumerable<EffectTechnique>, IEnumerable'
    content.vb: >-
      Public Class EffectTechniqueCollection
          Implements IEnumerable(Of EffectTechnique), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Graphics.EffectTechnique}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Count
  commentId: P:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Count
  id: Count
  parent: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: EffectTechniqueCollection.Count
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Count
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Count
    path: ../MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
    startLine: 8
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item(System.Int32)
  commentId: P:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: EffectTechniqueCollection.Item[Int32]
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: this[]
    path: ../MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
    startLine: 24
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public EffectTechnique this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Microsoft.Xna.Framework.Graphics.EffectTechnique
    content.vb: Public ReadOnly Property Item(index As Integer) As EffectTechnique
  overload: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item*
  nameWithType.vb: EffectTechniqueCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item(System.String)
  commentId: P:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: EffectTechniqueCollection.Item[String]
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: this[]
    path: ../MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
    startLine: 29
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public EffectTechnique this[string name] { get; }
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Xna.Framework.Graphics.EffectTechnique
    content.vb: Public ReadOnly Property Item(name As String) As EffectTechnique
  overload: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item*
  nameWithType.vb: EffectTechniqueCollection.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.GetEnumerator
  commentId: M:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: EffectTechniqueCollection.GetEnumerator()
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetEnumerator
    path: ../MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
    startLine: 44
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public IEnumerator<EffectTechnique> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.EffectTechnique}
    content.vb: Public Function GetEnumerator As IEnumerator(Of EffectTechnique)
  overload: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Graphics.EffectTechnique}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: EffectTechniqueCollection.IEnumerable.GetEnumerator()
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../MonoGame.Framework/Graphics/Effect/EffectTechniqueCollection.cs
    startLine: 49
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: EffectTechniqueCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Graphics.EffectTechnique}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Graphics.EffectTechnique}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EffectTechnique>
  nameWithType: IEnumerable<EffectTechnique>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Graphics.EffectTechnique>
  nameWithType.vb: IEnumerable(Of EffectTechnique)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Xna.Framework.Graphics.EffectTechnique)
  name.vb: IEnumerable(Of EffectTechnique)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Graphics.EffectTechnique
    name: EffectTechnique
    nameWithType: EffectTechnique
    fullName: Microsoft.Xna.Framework.Graphics.EffectTechnique
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Graphics.EffectTechnique
    name: EffectTechnique
    nameWithType: EffectTechnique
    fullName: Microsoft.Xna.Framework.Graphics.EffectTechnique
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Count*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Count
  isExternal: false
  name: Count
  nameWithType: EffectTechniqueCollection.Count
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item
  isExternal: false
  name: Item
  nameWithType: EffectTechniqueCollection.Item
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.Item
- uid: Microsoft.Xna.Framework.Graphics.EffectTechnique
  commentId: T:Microsoft.Xna.Framework.Graphics.EffectTechnique
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: EffectTechnique
  nameWithType: EffectTechnique
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechnique
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.GetEnumerator*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: EffectTechniqueCollection.GetEnumerator
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Graphics.EffectTechnique}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Graphics.EffectTechnique}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Graphics.EffectTechnique}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<EffectTechnique>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Graphics.EffectTechnique>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of EffectTechnique).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Xna.Framework.Graphics.EffectTechnique).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<EffectTechnique>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Graphics.EffectTechnique>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of EffectTechnique).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Microsoft.Xna.Framework.Graphics.EffectTechnique).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.EffectTechnique}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.EffectTechnique}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<EffectTechnique>
  nameWithType: IEnumerator<EffectTechnique>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.Xna.Framework.Graphics.EffectTechnique>
  nameWithType.vb: IEnumerator(Of EffectTechnique)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Microsoft.Xna.Framework.Graphics.EffectTechnique)
  name.vb: IEnumerator(Of EffectTechnique)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Graphics.EffectTechnique
    name: EffectTechnique
    nameWithType: EffectTechnique
    fullName: Microsoft.Xna.Framework.Graphics.EffectTechnique
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Graphics.EffectTechnique
    name: EffectTechnique
    nameWithType: EffectTechnique
    fullName: Microsoft.Xna.Framework.Graphics.EffectTechnique
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: EffectTechniqueCollection.IEnumerable.GetEnumerator
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: EffectTechniqueCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
