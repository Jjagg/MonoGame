### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Curve
  commentId: T:Microsoft.Xna.Framework.Curve
  id: Curve
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.Curve.#ctor
  - Microsoft.Xna.Framework.Curve.Clone
  - Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent)
  - Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)
  - Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent)
  - Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)
  - Microsoft.Xna.Framework.Curve.Evaluate(System.Single)
  - Microsoft.Xna.Framework.Curve.IsConstant
  - Microsoft.Xna.Framework.Curve.Keys
  - Microsoft.Xna.Framework.Curve.PostLoop
  - Microsoft.Xna.Framework.Curve.PreLoop
  langs:
  - csharp
  - vb
  name: Curve
  nameWithType: Curve
  fullName: Microsoft.Xna.Framework.Curve
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Curve
    path: ../MonoGame.Framework/Curve.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nContains a collection of <xref href=\"Microsoft.Xna.Framework.CurveKey\" data-throw-if-not-resolved=\"false\"></xref> points in 2D space and provides methods for evaluating features of the curve they define.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Curve
    content.vb: >-
      <DataContract>

      Public Class Curve
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Curve.IsConstant
  commentId: P:Microsoft.Xna.Framework.Curve.IsConstant
  id: IsConstant
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: IsConstant
  nameWithType: Curve.IsConstant
  fullName: Microsoft.Xna.Framework.Curve.IsConstant
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsConstant
    path: ../MonoGame.Framework/Curve.cs
    startLine: 30
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nReturns <code>true</code> if this curve is constant (has zero or one points); <code>false</code> otherwise.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IsConstant { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public ReadOnly Property IsConstant As Boolean
  overload: Microsoft.Xna.Framework.Curve.IsConstant*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Curve.PreLoop
  commentId: P:Microsoft.Xna.Framework.Curve.PreLoop
  id: PreLoop
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: PreLoop
  nameWithType: Curve.PreLoop
  fullName: Microsoft.Xna.Framework.Curve.PreLoop
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PreLoop
    path: ../MonoGame.Framework/Curve.cs
    startLine: 39
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDefines how to handle weighting values that are less than the first control point in the curve.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public CurveLoopType PreLoop { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.CurveLoopType
    content.vb: >-
      <DataMember>

      Public Property PreLoop As CurveLoopType
  overload: Microsoft.Xna.Framework.Curve.PreLoop*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Curve.PostLoop
  commentId: P:Microsoft.Xna.Framework.Curve.PostLoop
  id: PostLoop
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: PostLoop
  nameWithType: Curve.PostLoop
  fullName: Microsoft.Xna.Framework.Curve.PostLoop
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PostLoop
    path: ../MonoGame.Framework/Curve.cs
    startLine: 49
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nDefines how to handle weighting values that are greater than the last control point in the curve.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public CurveLoopType PostLoop { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.CurveLoopType
    content.vb: >-
      <DataMember>

      Public Property PostLoop As CurveLoopType
  overload: Microsoft.Xna.Framework.Curve.PostLoop*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Curve.Keys
  commentId: P:Microsoft.Xna.Framework.Curve.Keys
  id: Keys
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: Curve.Keys
  fullName: Microsoft.Xna.Framework.Curve.Keys
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Keys
    path: ../MonoGame.Framework/Curve.cs
    startLine: 59
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nThe collection of curve keys.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public CurveKeyCollection Keys { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.CurveKeyCollection
    content.vb: >-
      <DataMember>

      Public ReadOnly Property Keys As CurveKeyCollection
  overload: Microsoft.Xna.Framework.Curve.Keys*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Curve.#ctor
  commentId: M:Microsoft.Xna.Framework.Curve.#ctor
  id: '#ctor'
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: Curve()
  nameWithType: Curve.Curve()
  fullName: Microsoft.Xna.Framework.Curve.Curve()
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Curve.cs
    startLine: 72
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nConstructs a curve.\n"
  example: []
  syntax:
    content: public Curve()
    content.vb: Public Sub New
  overload: Microsoft.Xna.Framework.Curve.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Curve.Clone
  commentId: M:Microsoft.Xna.Framework.Curve.Clone
  id: Clone
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Curve.Clone()
  fullName: Microsoft.Xna.Framework.Curve.Clone()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Clone
    path: ../MonoGame.Framework/Curve.cs
    startLine: 85
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nCreates a copy of this curve.\n"
  example: []
  syntax:
    content: public Curve Clone()
    return:
      type: Microsoft.Xna.Framework.Curve
      description: A copy of this curve.
    content.vb: Public Function Clone As Curve
  overload: Microsoft.Xna.Framework.Curve.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Curve.Evaluate(System.Single)
  commentId: M:Microsoft.Xna.Framework.Curve.Evaluate(System.Single)
  id: Evaluate(System.Single)
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: Evaluate(Single)
  nameWithType: Curve.Evaluate(Single)
  fullName: Microsoft.Xna.Framework.Curve.Evaluate(System.Single)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Evaluate
    path: ../MonoGame.Framework/Curve.cs
    startLine: 101
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nEvaluate the value at a position of this <xref href=\"Microsoft.Xna.Framework.Curve\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public float Evaluate(float position)
    parameters:
    - id: position
      type: System.Single
      description: The position on this <xref href="Microsoft.Xna.Framework.Curve" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Single
      description: Value at the position on this <xref href="Microsoft.Xna.Framework.Curve" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Evaluate(position As Single) As Single
  overload: Microsoft.Xna.Framework.Curve.Evaluate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent)
  commentId: M:Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent)
  id: ComputeTangents(Microsoft.Xna.Framework.CurveTangent)
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: ComputeTangents(CurveTangent)
  nameWithType: Curve.ComputeTangents(CurveTangent)
  fullName: Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ComputeTangents
    path: ../MonoGame.Framework/Curve.cs
    startLine: 197
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nComputes tangents for all keys in the collection.\n"
  example: []
  syntax:
    content: public void ComputeTangents(CurveTangent tangentType)
    parameters:
    - id: tangentType
      type: Microsoft.Xna.Framework.CurveTangent
      description: The tangent type for both in and out.
    content.vb: Public Sub ComputeTangents(tangentType As CurveTangent)
  overload: Microsoft.Xna.Framework.Curve.ComputeTangents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)
  commentId: M:Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)
  id: ComputeTangents(Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: ComputeTangents(CurveTangent, CurveTangent)
  nameWithType: Curve.ComputeTangents(CurveTangent, CurveTangent)
  fullName: Microsoft.Xna.Framework.Curve.ComputeTangents(Microsoft.Xna.Framework.CurveTangent, Microsoft.Xna.Framework.CurveTangent)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ComputeTangents
    path: ../MonoGame.Framework/Curve.cs
    startLine: 207
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nComputes tangents for all keys in the collection.\n"
  example: []
  syntax:
    content: public void ComputeTangents(CurveTangent tangentInType, CurveTangent tangentOutType)
    parameters:
    - id: tangentInType
      type: Microsoft.Xna.Framework.CurveTangent
      description: The tangent in-type. <xref href="Microsoft.Xna.Framework.CurveKey.TangentIn" data-throw-if-not-resolved="false"></xref> for more details.
    - id: tangentOutType
      type: Microsoft.Xna.Framework.CurveTangent
      description: The tangent out-type. <xref href="Microsoft.Xna.Framework.CurveKey.TangentOut" data-throw-if-not-resolved="false"></xref> for more details.
    content.vb: Public Sub ComputeTangents(tangentInType As CurveTangent, tangentOutType As CurveTangent)
  overload: Microsoft.Xna.Framework.Curve.ComputeTangents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent)
  commentId: M:Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent)
  id: ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent)
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: ComputeTangent(Int32, CurveTangent)
  nameWithType: Curve.ComputeTangent(Int32, CurveTangent)
  fullName: Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32, Microsoft.Xna.Framework.CurveTangent)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ComputeTangent
    path: ../MonoGame.Framework/Curve.cs
    startLine: 220
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nComputes tangent for the specific key in the collection.\n"
  example: []
  syntax:
    content: public void ComputeTangent(int keyIndex, CurveTangent tangentType)
    parameters:
    - id: keyIndex
      type: System.Int32
      description: The index of a key in the collection.
    - id: tangentType
      type: Microsoft.Xna.Framework.CurveTangent
      description: The tangent type for both in and out.
    content.vb: Public Sub ComputeTangent(keyIndex As Integer, tangentType As CurveTangent)
  overload: Microsoft.Xna.Framework.Curve.ComputeTangent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)
  commentId: M:Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)
  id: ComputeTangent(System.Int32,Microsoft.Xna.Framework.CurveTangent,Microsoft.Xna.Framework.CurveTangent)
  parent: Microsoft.Xna.Framework.Curve
  langs:
  - csharp
  - vb
  name: ComputeTangent(Int32, CurveTangent, CurveTangent)
  nameWithType: Curve.ComputeTangent(Int32, CurveTangent, CurveTangent)
  fullName: Microsoft.Xna.Framework.Curve.ComputeTangent(System.Int32, Microsoft.Xna.Framework.CurveTangent, Microsoft.Xna.Framework.CurveTangent)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Curve.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: ComputeTangent
    path: ../MonoGame.Framework/Curve.cs
    startLine: 231
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  summary: "\nComputes tangent for the specific key in the collection.\n"
  example: []
  syntax:
    content: public void ComputeTangent(int keyIndex, CurveTangent tangentInType, CurveTangent tangentOutType)
    parameters:
    - id: keyIndex
      type: System.Int32
      description: The index of key in the collection.
    - id: tangentInType
      type: Microsoft.Xna.Framework.CurveTangent
      description: The tangent in-type. <xref href="Microsoft.Xna.Framework.CurveKey.TangentIn" data-throw-if-not-resolved="false"></xref> for more details.
    - id: tangentOutType
      type: Microsoft.Xna.Framework.CurveTangent
      description: The tangent out-type. <xref href="Microsoft.Xna.Framework.CurveKey.TangentOut" data-throw-if-not-resolved="false"></xref> for more details.
    content.vb: Public Sub ComputeTangent(keyIndex As Integer, tangentInType As CurveTangent, tangentOutType As CurveTangent)
  overload: Microsoft.Xna.Framework.Curve.ComputeTangent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.CurveKey
  commentId: T:Microsoft.Xna.Framework.CurveKey
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: CurveKey
  nameWithType: CurveKey
  fullName: Microsoft.Xna.Framework.CurveKey
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Curve.IsConstant*
  commentId: Overload:Microsoft.Xna.Framework.Curve.IsConstant
  isExternal: false
  name: IsConstant
  nameWithType: Curve.IsConstant
  fullName: Microsoft.Xna.Framework.Curve.IsConstant
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Curve.PreLoop*
  commentId: Overload:Microsoft.Xna.Framework.Curve.PreLoop
  isExternal: false
  name: PreLoop
  nameWithType: Curve.PreLoop
  fullName: Microsoft.Xna.Framework.Curve.PreLoop
- uid: Microsoft.Xna.Framework.CurveLoopType
  commentId: T:Microsoft.Xna.Framework.CurveLoopType
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: CurveLoopType
  nameWithType: CurveLoopType
  fullName: Microsoft.Xna.Framework.CurveLoopType
- uid: Microsoft.Xna.Framework.Curve.PostLoop*
  commentId: Overload:Microsoft.Xna.Framework.Curve.PostLoop
  isExternal: false
  name: PostLoop
  nameWithType: Curve.PostLoop
  fullName: Microsoft.Xna.Framework.Curve.PostLoop
- uid: Microsoft.Xna.Framework.Curve.Keys*
  commentId: Overload:Microsoft.Xna.Framework.Curve.Keys
  isExternal: false
  name: Keys
  nameWithType: Curve.Keys
  fullName: Microsoft.Xna.Framework.Curve.Keys
- uid: Microsoft.Xna.Framework.CurveKeyCollection
  commentId: T:Microsoft.Xna.Framework.CurveKeyCollection
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: CurveKeyCollection
  nameWithType: CurveKeyCollection
  fullName: Microsoft.Xna.Framework.CurveKeyCollection
- uid: Microsoft.Xna.Framework.Curve.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Curve.#ctor
  isExternal: false
  name: Curve
  nameWithType: Curve.Curve
  fullName: Microsoft.Xna.Framework.Curve.Curve
- uid: Microsoft.Xna.Framework.Curve.Clone*
  commentId: Overload:Microsoft.Xna.Framework.Curve.Clone
  isExternal: false
  name: Clone
  nameWithType: Curve.Clone
  fullName: Microsoft.Xna.Framework.Curve.Clone
- uid: Microsoft.Xna.Framework.Curve
  commentId: T:Microsoft.Xna.Framework.Curve
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Curve
  nameWithType: Curve
  fullName: Microsoft.Xna.Framework.Curve
- uid: Microsoft.Xna.Framework.Curve.Evaluate*
  commentId: Overload:Microsoft.Xna.Framework.Curve.Evaluate
  isExternal: false
  name: Evaluate
  nameWithType: Curve.Evaluate
  fullName: Microsoft.Xna.Framework.Curve.Evaluate
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Curve.ComputeTangents*
  commentId: Overload:Microsoft.Xna.Framework.Curve.ComputeTangents
  isExternal: false
  name: ComputeTangents
  nameWithType: Curve.ComputeTangents
  fullName: Microsoft.Xna.Framework.Curve.ComputeTangents
- uid: Microsoft.Xna.Framework.CurveTangent
  commentId: T:Microsoft.Xna.Framework.CurveTangent
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: CurveTangent
  nameWithType: CurveTangent
  fullName: Microsoft.Xna.Framework.CurveTangent
- uid: Microsoft.Xna.Framework.CurveKey.TangentIn
  commentId: P:Microsoft.Xna.Framework.CurveKey.TangentIn
- uid: Microsoft.Xna.Framework.CurveKey.TangentOut
  commentId: P:Microsoft.Xna.Framework.CurveKey.TangentOut
- uid: Microsoft.Xna.Framework.Curve.ComputeTangent*
  commentId: Overload:Microsoft.Xna.Framework.Curve.ComputeTangent
  isExternal: false
  name: ComputeTangent
  nameWithType: Curve.ComputeTangent
  fullName: Microsoft.Xna.Framework.Curve.ComputeTangent
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
