### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters
  commentId: T:Microsoft.Xna.Framework.Graphics.PresentationParameters
  id: PresentationParameters
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.#ctor
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferFormat
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferHeight
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferWidth
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.Bounds
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.Clear
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.Clone
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.DefaultPresentRate
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.DepthStencilFormat
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.DeviceWindowHandle
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.DisplayOrientation
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.HardwareModeSwitch
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.IsFullScreen
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.MultiSampleCount
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationInterval
  - Microsoft.Xna.Framework.Graphics.PresentationParameters.RenderTargetUsage
  langs:
  - csharp
  - vb
  name: PresentationParameters
  nameWithType: PresentationParameters
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PresentationParameters
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 17
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public class PresentationParameters
    content.vb: Public Class PresentationParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.DefaultPresentRate
  commentId: F:Microsoft.Xna.Framework.Graphics.PresentationParameters.DefaultPresentRate
  id: DefaultPresentRate
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: DefaultPresentRate
  nameWithType: PresentationParameters.DefaultPresentRate
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.DefaultPresentRate
  type: Field
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DefaultPresentRate
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 21
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public const int DefaultPresentRate = 60
    return:
      type: System.Int32
    content.vb: Public Const DefaultPresentRate As Integer = 60
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.#ctor
  commentId: M:Microsoft.Xna.Framework.Graphics.PresentationParameters.#ctor
  id: '#ctor'
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: PresentationParameters()
  nameWithType: PresentationParameters.PresentationParameters()
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationParameters()
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 44
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCreate a <xref href=\"Microsoft.Xna.Framework.Graphics.PresentationParameters\" data-throw-if-not-resolved=\"false\"></xref> instance with default values for all properties.\n"
  example: []
  syntax:
    content: public PresentationParameters()
    content.vb: Public Sub New
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferFormat
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferFormat
  id: BackBufferFormat
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: BackBufferFormat
  nameWithType: PresentationParameters.BackBufferFormat
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferFormat
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: BackBufferFormat
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 56
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set the format of the back buffer.\n"
  example: []
  syntax:
    content: public SurfaceFormat BackBufferFormat { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.SurfaceFormat
    content.vb: Public Property BackBufferFormat As SurfaceFormat
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferFormat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferHeight
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferHeight
  id: BackBufferHeight
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: BackBufferHeight
  nameWithType: PresentationParameters.BackBufferHeight
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferHeight
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: BackBufferHeight
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 65
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set the height of the back buffer.\n"
  example: []
  syntax:
    content: public int BackBufferHeight { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BackBufferHeight As Integer
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferHeight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferWidth
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferWidth
  id: BackBufferWidth
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: BackBufferWidth
  nameWithType: PresentationParameters.BackBufferWidth
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferWidth
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: BackBufferWidth
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 74
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set the width of the back buffer.\n"
  example: []
  syntax:
    content: public int BackBufferWidth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BackBufferWidth As Integer
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferWidth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.Bounds
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.Bounds
  id: Bounds
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: PresentationParameters.Bounds
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.Bounds
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Bounds
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 83
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet the bounds of the back buffer.\n"
  example: []
  syntax:
    content: public Rectangle Bounds { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: Public ReadOnly Property Bounds As Rectangle
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.Bounds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.DeviceWindowHandle
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.DeviceWindowHandle
  id: DeviceWindowHandle
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: DeviceWindowHandle
  nameWithType: PresentationParameters.DeviceWindowHandle
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.DeviceWindowHandle
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DeviceWindowHandle
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 91
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set the handle of the window that will present the back buffer.\n"
  example: []
  syntax:
    content: public IntPtr DeviceWindowHandle { get; set; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public Property DeviceWindowHandle As IntPtr
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.DeviceWindowHandle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.DepthStencilFormat
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.DepthStencilFormat
  id: DepthStencilFormat
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: DepthStencilFormat
  nameWithType: PresentationParameters.DepthStencilFormat
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.DepthStencilFormat
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DepthStencilFormat
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 105
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set the depth stencil format for the back buffer.\n"
  example: []
  syntax:
    content: public DepthFormat DepthStencilFormat { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.DepthFormat
    content.vb: Public Property DepthStencilFormat As DepthFormat
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.DepthStencilFormat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.IsFullScreen
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.IsFullScreen
  id: IsFullScreen
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: IsFullScreen
  nameWithType: PresentationParameters.IsFullScreen
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.IsFullScreen
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: IsFullScreen
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 114
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set a value indicating if we are in full screen mode.\n"
  example: []
  syntax:
    content: public bool IsFullScreen { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsFullScreen As Boolean
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.IsFullScreen*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.HardwareModeSwitch
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.HardwareModeSwitch
  id: HardwareModeSwitch
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: HardwareModeSwitch
  nameWithType: PresentationParameters.HardwareModeSwitch
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.HardwareModeSwitch
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: HardwareModeSwitch
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 135
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nIf <pre><code>true</code></pre> the <xref href=\"Microsoft.Xna.Framework.Graphics.GraphicsDevice\" data-throw-if-not-resolved=\"false\"></xref> will do a mode switch\nwhen going to full screen mode. If <pre><code>false</code></pre> it will instead do a\nsoft full screen by maximizing the window and making it borderless.\n"
  example: []
  syntax:
    content: public bool HardwareModeSwitch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HardwareModeSwitch As Boolean
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.HardwareModeSwitch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.MultiSampleCount
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.MultiSampleCount
  id: MultiSampleCount
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: MultiSampleCount
  nameWithType: PresentationParameters.MultiSampleCount
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.MultiSampleCount
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: MultiSampleCount
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 144
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set the multisample count for the back buffer.\n"
  example: []
  syntax:
    content: public int MultiSampleCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MultiSampleCount As Integer
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.MultiSampleCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationInterval
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationInterval
  id: PresentationInterval
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: PresentationInterval
  nameWithType: PresentationParameters.PresentationInterval
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationInterval
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: PresentationInterval
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 153
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set the presentation interval.\n"
  example: []
  syntax:
    content: public PresentInterval PresentationInterval { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.PresentInterval
    content.vb: Public Property PresentationInterval As PresentInterval
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.DisplayOrientation
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.DisplayOrientation
  id: DisplayOrientation
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: DisplayOrientation
  nameWithType: PresentationParameters.DisplayOrientation
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.DisplayOrientation
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DisplayOrientation
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 158
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set the display orientation.\n"
  example: []
  syntax:
    content: public DisplayOrientation DisplayOrientation { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.DisplayOrientation
    content.vb: Public Property DisplayOrientation As DisplayOrientation
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.DisplayOrientation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.RenderTargetUsage
  commentId: P:Microsoft.Xna.Framework.Graphics.PresentationParameters.RenderTargetUsage
  id: RenderTargetUsage
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: RenderTargetUsage
  nameWithType: PresentationParameters.RenderTargetUsage
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.RenderTargetUsage
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: RenderTargetUsage
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 170
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGet or set the RenderTargetUsage for the back buffer.\nDetermines if the back buffer is cleared when it is set as the\nrender target by the <xref href=\"Microsoft.Xna.Framework.Graphics.GraphicsDevice\" data-throw-if-not-resolved=\"false\"></xref>.\n<xref href=\"Microsoft.Xna.Framework.Graphics.GraphicsDevice\" data-throw-if-not-resolved=\"false\"></xref> target.\n"
  example: []
  syntax:
    content: public RenderTargetUsage RenderTargetUsage { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.RenderTargetUsage
    content.vb: Public Property RenderTargetUsage As RenderTargetUsage
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.RenderTargetUsage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clear
  commentId: M:Microsoft.Xna.Framework.Graphics.PresentationParameters.Clear
  id: Clear
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: PresentationParameters.Clear()
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clear()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Clear
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 180
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nReset all properties to their default values.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clone
  commentId: M:Microsoft.Xna.Framework.Graphics.PresentationParameters.Clone
  id: Clone
  parent: Microsoft.Xna.Framework.Graphics.PresentationParameters
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: PresentationParameters.Clone()
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clone()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/PresentationParameters.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Clone
    path: ../MonoGame.Framework/Graphics/PresentationParameters.cs
    startLine: 218
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCreate a copy of this <xref href=\"Microsoft.Xna.Framework.Graphics.PresentationParameters\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public PresentationParameters Clone()
    return:
      type: Microsoft.Xna.Framework.Graphics.PresentationParameters
      description: ''
    content.vb: Public Function Clone As PresentationParameters
  overload: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters
  commentId: T:Microsoft.Xna.Framework.Graphics.PresentationParameters
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: PresentationParameters
  nameWithType: PresentationParameters
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.#ctor
  isExternal: false
  name: PresentationParameters
  nameWithType: PresentationParameters.PresentationParameters
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationParameters
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferFormat*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferFormat
  isExternal: false
  name: BackBufferFormat
  nameWithType: PresentationParameters.BackBufferFormat
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferFormat
- uid: Microsoft.Xna.Framework.Graphics.SurfaceFormat
  commentId: T:Microsoft.Xna.Framework.Graphics.SurfaceFormat
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: SurfaceFormat
  nameWithType: SurfaceFormat
  fullName: Microsoft.Xna.Framework.Graphics.SurfaceFormat
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferHeight*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferHeight
  isExternal: false
  name: BackBufferHeight
  nameWithType: PresentationParameters.BackBufferHeight
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferHeight
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferWidth*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferWidth
  isExternal: false
  name: BackBufferWidth
  nameWithType: PresentationParameters.BackBufferWidth
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.BackBufferWidth
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.Bounds*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.Bounds
  isExternal: false
  name: Bounds
  nameWithType: PresentationParameters.Bounds
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.Bounds
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.DeviceWindowHandle*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.DeviceWindowHandle
  isExternal: false
  name: DeviceWindowHandle
  nameWithType: PresentationParameters.DeviceWindowHandle
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.DeviceWindowHandle
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.DepthStencilFormat*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.DepthStencilFormat
  isExternal: false
  name: DepthStencilFormat
  nameWithType: PresentationParameters.DepthStencilFormat
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.DepthStencilFormat
- uid: Microsoft.Xna.Framework.Graphics.DepthFormat
  commentId: T:Microsoft.Xna.Framework.Graphics.DepthFormat
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: DepthFormat
  nameWithType: DepthFormat
  fullName: Microsoft.Xna.Framework.Graphics.DepthFormat
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.IsFullScreen*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.IsFullScreen
  isExternal: false
  name: IsFullScreen
  nameWithType: PresentationParameters.IsFullScreen
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.IsFullScreen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.HardwareModeSwitch*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.HardwareModeSwitch
  isExternal: false
  name: HardwareModeSwitch
  nameWithType: PresentationParameters.HardwareModeSwitch
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.HardwareModeSwitch
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.MultiSampleCount*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.MultiSampleCount
  isExternal: false
  name: MultiSampleCount
  nameWithType: PresentationParameters.MultiSampleCount
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.MultiSampleCount
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationInterval*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationInterval
  isExternal: false
  name: PresentationInterval
  nameWithType: PresentationParameters.PresentationInterval
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.PresentationInterval
- uid: Microsoft.Xna.Framework.Graphics.PresentInterval
  commentId: T:Microsoft.Xna.Framework.Graphics.PresentInterval
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: PresentInterval
  nameWithType: PresentInterval
  fullName: Microsoft.Xna.Framework.Graphics.PresentInterval
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.DisplayOrientation*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.DisplayOrientation
  isExternal: false
  name: DisplayOrientation
  nameWithType: PresentationParameters.DisplayOrientation
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.DisplayOrientation
- uid: Microsoft.Xna.Framework.DisplayOrientation
  commentId: T:Microsoft.Xna.Framework.DisplayOrientation
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: DisplayOrientation
  nameWithType: DisplayOrientation
  fullName: Microsoft.Xna.Framework.DisplayOrientation
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.RenderTargetUsage*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.RenderTargetUsage
  isExternal: false
  name: RenderTargetUsage
  nameWithType: PresentationParameters.RenderTargetUsage
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.RenderTargetUsage
- uid: Microsoft.Xna.Framework.Graphics.RenderTargetUsage
  commentId: T:Microsoft.Xna.Framework.Graphics.RenderTargetUsage
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: RenderTargetUsage
  nameWithType: RenderTargetUsage
  fullName: Microsoft.Xna.Framework.Graphics.RenderTargetUsage
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clear*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.Clear
  isExternal: false
  name: Clear
  nameWithType: PresentationParameters.Clear
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clear
- uid: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clone*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.PresentationParameters.Clone
  isExternal: false
  name: Clone
  nameWithType: PresentationParameters.Clone
  fullName: Microsoft.Xna.Framework.Graphics.PresentationParameters.Clone
