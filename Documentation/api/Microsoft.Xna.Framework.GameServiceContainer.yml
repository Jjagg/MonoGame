### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.GameServiceContainer
  commentId: T:Microsoft.Xna.Framework.GameServiceContainer
  id: GameServiceContainer
  parent: Microsoft.Xna.Framework
  children:
  - Microsoft.Xna.Framework.GameServiceContainer.#ctor
  - Microsoft.Xna.Framework.GameServiceContainer.AddService(System.Type,System.Object)
  - Microsoft.Xna.Framework.GameServiceContainer.AddService``1(``0)
  - Microsoft.Xna.Framework.GameServiceContainer.GetService(System.Type)
  - Microsoft.Xna.Framework.GameServiceContainer.GetService``1
  - Microsoft.Xna.Framework.GameServiceContainer.RemoveService(System.Type)
  langs:
  - csharp
  - vb
  name: GameServiceContainer
  nameWithType: GameServiceContainer
  fullName: Microsoft.Xna.Framework.GameServiceContainer
  type: Class
  source:
    remote:
      path: MonoGame.Framework/GameServiceContainer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GameServiceContainer
    path: ../MonoGame.Framework/GameServiceContainer.cs
    startLine: 10
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: 'public class GameServiceContainer : IServiceProvider'
    content.vb: >-
      Public Class GameServiceContainer
          Implements IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.GameServiceContainer.#ctor
  commentId: M:Microsoft.Xna.Framework.GameServiceContainer.#ctor
  id: '#ctor'
  parent: Microsoft.Xna.Framework.GameServiceContainer
  langs:
  - csharp
  - vb
  name: GameServiceContainer()
  nameWithType: GameServiceContainer.GameServiceContainer()
  fullName: Microsoft.Xna.Framework.GameServiceContainer.GameServiceContainer()
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/GameServiceContainer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/GameServiceContainer.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public GameServiceContainer()
    content.vb: Public Sub New
  overload: Microsoft.Xna.Framework.GameServiceContainer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameServiceContainer.AddService(System.Type,System.Object)
  commentId: M:Microsoft.Xna.Framework.GameServiceContainer.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: Microsoft.Xna.Framework.GameServiceContainer
  langs:
  - csharp
  - vb
  name: AddService(Type, Object)
  nameWithType: GameServiceContainer.AddService(Type, Object)
  fullName: Microsoft.Xna.Framework.GameServiceContainer.AddService(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameServiceContainer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AddService
    path: ../MonoGame.Framework/GameServiceContainer.cs
    startLine: 19
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public void AddService(Type type, object provider)
    parameters:
    - id: type
      type: System.Type
    - id: provider
      type: System.Object
    content.vb: Public Sub AddService(type As Type, provider As Object)
  overload: Microsoft.Xna.Framework.GameServiceContainer.AddService*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameServiceContainer.GetService(System.Type)
  commentId: M:Microsoft.Xna.Framework.GameServiceContainer.GetService(System.Type)
  id: GetService(System.Type)
  parent: Microsoft.Xna.Framework.GameServiceContainer
  langs:
  - csharp
  - vb
  name: GetService(Type)
  nameWithType: GameServiceContainer.GetService(Type)
  fullName: Microsoft.Xna.Framework.GameServiceContainer.GetService(System.Type)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameServiceContainer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetService
    path: ../MonoGame.Framework/GameServiceContainer.cs
    startLine: 31
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public object GetService(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function GetService(type As Type) As Object
  overload: Microsoft.Xna.Framework.GameServiceContainer.GetService*
  implements:
  - System.IServiceProvider.GetService(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameServiceContainer.RemoveService(System.Type)
  commentId: M:Microsoft.Xna.Framework.GameServiceContainer.RemoveService(System.Type)
  id: RemoveService(System.Type)
  parent: Microsoft.Xna.Framework.GameServiceContainer
  langs:
  - csharp
  - vb
  name: RemoveService(Type)
  nameWithType: GameServiceContainer.RemoveService(Type)
  fullName: Microsoft.Xna.Framework.GameServiceContainer.RemoveService(System.Type)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameServiceContainer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: RemoveService
    path: ../MonoGame.Framework/GameServiceContainer.cs
    startLine: 43
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public void RemoveService(Type type)
    parameters:
    - id: type
      type: System.Type
    content.vb: Public Sub RemoveService(type As Type)
  overload: Microsoft.Xna.Framework.GameServiceContainer.RemoveService*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.GameServiceContainer.AddService``1(``0)
  commentId: M:Microsoft.Xna.Framework.GameServiceContainer.AddService``1(``0)
  id: AddService``1(``0)
  parent: Microsoft.Xna.Framework.GameServiceContainer
  langs:
  - csharp
  - vb
  name: AddService<T>(T)
  nameWithType: GameServiceContainer.AddService<T>(T)
  fullName: Microsoft.Xna.Framework.GameServiceContainer.AddService<T>(T)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameServiceContainer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AddService
    path: ../MonoGame.Framework/GameServiceContainer.cs
    startLine: 51
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: public void AddService<T>(T provider)
    parameters:
    - id: provider
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub AddService(Of T)(provider As T)
  overload: Microsoft.Xna.Framework.GameServiceContainer.AddService*
  nameWithType.vb: GameServiceContainer.AddService(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.GameServiceContainer.AddService(Of T)(T)
  name.vb: AddService(Of T)(T)
- uid: Microsoft.Xna.Framework.GameServiceContainer.GetService``1
  commentId: M:Microsoft.Xna.Framework.GameServiceContainer.GetService``1
  id: GetService``1
  parent: Microsoft.Xna.Framework.GameServiceContainer
  langs:
  - csharp
  - vb
  name: GetService<T>()
  nameWithType: GameServiceContainer.GetService<T>()
  fullName: Microsoft.Xna.Framework.GameServiceContainer.GetService<T>()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/GameServiceContainer.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GetService
    path: ../MonoGame.Framework/GameServiceContainer.cs
    startLine: 56
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework
  syntax:
    content: 'public T GetService<T>()where T : class'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetService(Of T As Class) As T
  overload: Microsoft.Xna.Framework.GameServiceContainer.GetService*
  nameWithType.vb: GameServiceContainer.GetService(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.GameServiceContainer.GetService(Of T)()
  name.vb: GetService(Of T)()
references:
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.GameServiceContainer.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.GameServiceContainer.#ctor
  isExternal: false
  name: GameServiceContainer
  nameWithType: GameServiceContainer.GameServiceContainer
  fullName: Microsoft.Xna.Framework.GameServiceContainer.GameServiceContainer
- uid: Microsoft.Xna.Framework.GameServiceContainer.AddService*
  commentId: Overload:Microsoft.Xna.Framework.GameServiceContainer.AddService
  isExternal: false
  name: AddService
  nameWithType: GameServiceContainer.AddService
  fullName: Microsoft.Xna.Framework.GameServiceContainer.AddService
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Xna.Framework.GameServiceContainer.GetService*
  commentId: Overload:Microsoft.Xna.Framework.GameServiceContainer.GetService
  isExternal: false
  name: GetService
  nameWithType: GameServiceContainer.GetService
  fullName: Microsoft.Xna.Framework.GameServiceContainer.GetService
- uid: System.IServiceProvider.GetService(System.Type)
  commentId: M:System.IServiceProvider.GetService(System.Type)
  parent: System.IServiceProvider
  isExternal: true
  name: GetService(Type)
  nameWithType: IServiceProvider.GetService(Type)
  fullName: System.IServiceProvider.GetService(System.Type)
  spec.csharp:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    nameWithType: IServiceProvider.GetService
    fullName: System.IServiceProvider.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    nameWithType: IServiceProvider.GetService
    fullName: System.IServiceProvider.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.GameServiceContainer.RemoveService*
  commentId: Overload:Microsoft.Xna.Framework.GameServiceContainer.RemoveService
  isExternal: false
  name: RemoveService
  nameWithType: GameServiceContainer.RemoveService
  fullName: Microsoft.Xna.Framework.GameServiceContainer.RemoveService
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
