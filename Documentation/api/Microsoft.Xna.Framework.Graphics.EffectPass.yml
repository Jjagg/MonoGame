### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.EffectPass
  commentId: T:Microsoft.Xna.Framework.Graphics.EffectPass
  id: EffectPass
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.EffectPass.Annotations
  - Microsoft.Xna.Framework.Graphics.EffectPass.Apply
  - Microsoft.Xna.Framework.Graphics.EffectPass.Name
  langs:
  - csharp
  - vb
  name: EffectPass
  nameWithType: EffectPass
  fullName: Microsoft.Xna.Framework.Graphics.EffectPass
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectPass.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EffectPass
    path: ../MonoGame.Framework/Graphics/Effect/EffectPass.cs
    startLine: 4
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public class EffectPass
    content.vb: Public Class EffectPass
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.EffectPass.Name
  commentId: P:Microsoft.Xna.Framework.Graphics.EffectPass.Name
  id: Name
  parent: Microsoft.Xna.Framework.Graphics.EffectPass
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EffectPass.Name
  fullName: Microsoft.Xna.Framework.Graphics.EffectPass.Name
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectPass.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Name
    path: ../MonoGame.Framework/Graphics/Effect/EffectPass.cs
    startLine: 15
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Microsoft.Xna.Framework.Graphics.EffectPass.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.EffectPass.Annotations
  commentId: P:Microsoft.Xna.Framework.Graphics.EffectPass.Annotations
  id: Annotations
  parent: Microsoft.Xna.Framework.Graphics.EffectPass
  langs:
  - csharp
  - vb
  name: Annotations
  nameWithType: EffectPass.Annotations
  fullName: Microsoft.Xna.Framework.Graphics.EffectPass.Annotations
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectPass.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Annotations
    path: ../MonoGame.Framework/Graphics/Effect/EffectPass.cs
    startLine: 17
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public EffectAnnotationCollection Annotations { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection
    content.vb: Public ReadOnly Property Annotations As EffectAnnotationCollection
  overload: Microsoft.Xna.Framework.Graphics.EffectPass.Annotations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.EffectPass.Apply
  commentId: M:Microsoft.Xna.Framework.Graphics.EffectPass.Apply
  id: Apply
  parent: Microsoft.Xna.Framework.Graphics.EffectPass
  langs:
  - csharp
  - vb
  name: Apply()
  nameWithType: EffectPass.Apply()
  fullName: Microsoft.Xna.Framework.Graphics.EffectPass.Apply()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EffectPass.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Apply
    path: ../MonoGame.Framework/Graphics/Effect/EffectPass.cs
    startLine: 62
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public void Apply()
    content.vb: Public Sub Apply
  overload: Microsoft.Xna.Framework.Graphics.EffectPass.Apply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.EffectPass.Name*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EffectPass.Name
  isExternal: false
  name: Name
  nameWithType: EffectPass.Name
  fullName: Microsoft.Xna.Framework.Graphics.EffectPass.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xna.Framework.Graphics.EffectPass.Annotations*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EffectPass.Annotations
  isExternal: false
  name: Annotations
  nameWithType: EffectPass.Annotations
  fullName: Microsoft.Xna.Framework.Graphics.EffectPass.Annotations
- uid: Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection
  commentId: T:Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: EffectAnnotationCollection
  nameWithType: EffectAnnotationCollection
  fullName: Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection
- uid: Microsoft.Xna.Framework.Graphics.EffectPass.Apply*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EffectPass.Apply
  isExternal: false
  name: Apply
  nameWithType: EffectPass.Apply
  fullName: Microsoft.Xna.Framework.Graphics.EffectPass.Apply
