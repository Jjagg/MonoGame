### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.Effect
  commentId: T:Microsoft.Xna.Framework.Graphics.Effect
  id: Effect
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.Effect.#ctor(Microsoft.Xna.Framework.Graphics.Effect)
  - Microsoft.Xna.Framework.Graphics.Effect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Byte[])
  - Microsoft.Xna.Framework.Graphics.Effect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Byte[],System.Int32,System.Int32)
  - Microsoft.Xna.Framework.Graphics.Effect.Clone
  - Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  - Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  - Microsoft.Xna.Framework.Graphics.Effect.OnApply
  - Microsoft.Xna.Framework.Graphics.Effect.Parameters
  - Microsoft.Xna.Framework.Graphics.Effect.Techniques
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: Effect
  fullName: Microsoft.Xna.Framework.Graphics.Effect
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Effect
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 10
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: 'public class Effect : GraphicsResource, IDisposable'
    content.vb: >-
      Public Class Effect
          Inherits GraphicsResource
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Graphics.GraphicsResource
  derivedClasses:
  - Microsoft.Xna.Framework.Graphics.AlphaTestEffect
  - Microsoft.Xna.Framework.Graphics.BasicEffect
  - Microsoft.Xna.Framework.Graphics.DualTextureEffect
  - Microsoft.Xna.Framework.Graphics.EffectMaterial
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  - Microsoft.Xna.Framework.Graphics.SkinnedEffect
  - Microsoft.Xna.Framework.Graphics.SpriteEffect
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.Effect.Parameters
  commentId: P:Microsoft.Xna.Framework.Graphics.Effect.Parameters
  id: Parameters
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: Effect.Parameters
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Parameters
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Parameters
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 36
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public EffectParameterCollection Parameters { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.EffectParameterCollection
    content.vb: Public ReadOnly Property Parameters As EffectParameterCollection
  overload: Microsoft.Xna.Framework.Graphics.Effect.Parameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.Effect.Techniques
  commentId: P:Microsoft.Xna.Framework.Graphics.Effect.Techniques
  id: Techniques
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: Techniques
  nameWithType: Effect.Techniques
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Techniques
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Techniques
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 38
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public EffectTechniqueCollection Techniques { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
    content.vb: Public ReadOnly Property Techniques As EffectTechniqueCollection
  overload: Microsoft.Xna.Framework.Graphics.Effect.Techniques*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  commentId: P:Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  id: CurrentTechnique
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: CurrentTechnique
  nameWithType: Effect.CurrentTechnique
  fullName: Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: CurrentTechnique
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 40
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public EffectTechnique CurrentTechnique { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.EffectTechnique
    content.vb: Public Property CurrentTechnique As EffectTechnique
  overload: Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.Effect.#ctor(Microsoft.Xna.Framework.Graphics.Effect)
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.#ctor(Microsoft.Xna.Framework.Graphics.Effect)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.Effect)'
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: Effect(Effect)
  nameWithType: Effect.Effect(Effect)
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Effect(Microsoft.Xna.Framework.Graphics.Effect)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 57
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: protected Effect(Effect cloneSource)
    parameters:
    - id: cloneSource
      type: Microsoft.Xna.Framework.Graphics.Effect
    content.vb: Protected Sub New(cloneSource As Effect)
  overload: Microsoft.Xna.Framework.Graphics.Effect.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.Graphics.Effect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Byte[])
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Byte[])
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Byte[])'
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: Effect(GraphicsDevice, Byte[])
  nameWithType: Effect.Effect(GraphicsDevice, Byte[])
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Effect(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Byte[])
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 64
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Effect(GraphicsDevice graphicsDevice, byte[] effectCode)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    - id: effectCode
      type: System.Byte[]
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, effectCode As Byte())
  overload: Microsoft.Xna.Framework.Graphics.Effect.#ctor*
  nameWithType.vb: Effect.Effect(GraphicsDevice, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Effect.Effect(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Byte())
  name.vb: Effect(GraphicsDevice, Byte())
- uid: Microsoft.Xna.Framework.Graphics.Effect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Byte[],System.Int32,System.Int32)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Byte[],System.Int32,System.Int32)'
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: Effect(GraphicsDevice, Byte[], Int32, Int32)
  nameWithType: Effect.Effect(GraphicsDevice, Byte[], Int32, Int32)
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Effect(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Byte[], System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 70
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public Effect(GraphicsDevice graphicsDevice, byte[] effectCode, int index, int count)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    - id: effectCode
      type: System.Byte[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, effectCode As Byte(), index As Integer, count As Integer)
  overload: Microsoft.Xna.Framework.Graphics.Effect.#ctor*
  nameWithType.vb: Effect.Effect(GraphicsDevice, Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Xna.Framework.Graphics.Effect.Effect(Microsoft.Xna.Framework.Graphics.GraphicsDevice, System.Byte(), System.Int32, System.Int32)
  name.vb: Effect(GraphicsDevice, Byte(), Int32, Int32)
- uid: Microsoft.Xna.Framework.Graphics.Effect.Clone
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.Clone
  id: Clone
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Effect.Clone()
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Clone()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Clone
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 184
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nReturns a deep copy of the effect where immutable types \nare shared and mutable data is duplicated.\n"
  remarks: "\nSee &quot;Cloning an Effect&quot; in MSDN:\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/ff476138(v=vs.85).aspx\n"
  example: []
  syntax:
    content: public virtual Effect Clone()
    return:
      type: Microsoft.Xna.Framework.Graphics.Effect
      description: The cloned effect.
    content.vb: Public Overridable Function Clone As Effect
  overload: Microsoft.Xna.Framework.Graphics.Effect.Clone*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Xna.Framework.Graphics.Effect.OnApply
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.OnApply
  id: OnApply
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: OnApply()
  nameWithType: Effect.OnApply()
  fullName: Microsoft.Xna.Framework.Graphics.Effect.OnApply()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnApply
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 189
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: protected virtual void OnApply()
    content.vb: Protected Overridable Sub OnApply
  overload: Microsoft.Xna.Framework.Graphics.Effect.OnApply*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: Effect.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 193
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  overload: Microsoft.Xna.Framework.Graphics.Effect.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  id: GraphicsDeviceResetting
  parent: Microsoft.Xna.Framework.Graphics.Effect
  langs:
  - csharp
  - vb
  name: GraphicsDeviceResetting()
  nameWithType: Effect.GraphicsDeviceResetting()
  fullName: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/Effect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: GraphicsDeviceResetting
    path: ../MonoGame.Framework/Graphics/Effect/Effect.cs
    startLine: 221
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: protected override void GraphicsDeviceResetting()
    content.vb: Protected Overrides Sub GraphicsDeviceResetting
  overridden: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  overload: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsResource
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsResource
  nameWithType: GraphicsResource
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsResource.Dispose()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  commentId: E:Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Disposing
  nameWithType: GraphicsResource.Disposing
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsResource.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: IsDisposed
  nameWithType: GraphicsResource.IsDisposed
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Name
  nameWithType: GraphicsResource.Name
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Tag
  nameWithType: GraphicsResource.Tag
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: ToString()
  nameWithType: GraphicsResource.ToString()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.Effect.Parameters*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Effect.Parameters
  isExternal: false
  name: Parameters
  nameWithType: Effect.Parameters
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Parameters
- uid: Microsoft.Xna.Framework.Graphics.EffectParameterCollection
  commentId: T:Microsoft.Xna.Framework.Graphics.EffectParameterCollection
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: EffectParameterCollection
  nameWithType: EffectParameterCollection
  fullName: Microsoft.Xna.Framework.Graphics.EffectParameterCollection
- uid: Microsoft.Xna.Framework.Graphics.Effect.Techniques*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Effect.Techniques
  isExternal: false
  name: Techniques
  nameWithType: Effect.Techniques
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Techniques
- uid: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  commentId: T:Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: EffectTechniqueCollection
  nameWithType: EffectTechniqueCollection
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection
- uid: Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  isExternal: false
  name: CurrentTechnique
  nameWithType: Effect.CurrentTechnique
  fullName: Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
- uid: Microsoft.Xna.Framework.Graphics.EffectTechnique
  commentId: T:Microsoft.Xna.Framework.Graphics.EffectTechnique
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: EffectTechnique
  nameWithType: EffectTechnique
  fullName: Microsoft.Xna.Framework.Graphics.EffectTechnique
- uid: Microsoft.Xna.Framework.Graphics.Effect.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Effect.#ctor
  isExternal: false
  name: Effect
  nameWithType: Effect.Effect
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Effect
- uid: Microsoft.Xna.Framework.Graphics.Effect
  commentId: T:Microsoft.Xna.Framework.Graphics.Effect
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: Microsoft.Xna.Framework.Graphics.Effect
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Xna.Framework.Graphics.Effect.Clone*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Effect.Clone
  isExternal: false
  name: Clone
  nameWithType: Effect.Clone
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Clone
- uid: Microsoft.Xna.Framework.Graphics.Effect.OnApply*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Effect.OnApply
  isExternal: false
  name: OnApply
  nameWithType: Effect.OnApply
  fullName: Microsoft.Xna.Framework.Graphics.Effect.OnApply
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: GraphicsResource.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.Effect.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Effect.Dispose
  isExternal: false
  name: Dispose
  nameWithType: Effect.Dispose
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDeviceResetting()
  nameWithType: GraphicsResource.GraphicsDeviceResetting()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: GraphicsResource.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: GraphicsResource.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  isExternal: false
  name: GraphicsDeviceResetting
  nameWithType: Effect.GraphicsDeviceResetting
  fullName: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
