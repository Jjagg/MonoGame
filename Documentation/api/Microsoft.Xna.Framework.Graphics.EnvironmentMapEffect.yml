### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  commentId: T:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  id: EnvironmentMapEffect
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect)
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View
  - Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World
  langs:
  - csharp
  - vb
  name: EnvironmentMapEffect
  nameWithType: EnvironmentMapEffect
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  type: Class
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnvironmentMapEffect
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 20
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nBuilt-in effect that supports environment mapping.\n"
  example: []
  syntax:
    content: 'public class EnvironmentMapEffect : Effect, IDisposable, IEffectMatrices, IEffectLights, IEffectFog'
    content.vb: >-
      Public Class EnvironmentMapEffect
          Inherits Effect
          Implements IDisposable, IEffectMatrices, IEffectLights, IEffectFog
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Graphics.GraphicsResource
  - Microsoft.Xna.Framework.Graphics.Effect
  implements:
  - System.IDisposable
  - Microsoft.Xna.Framework.Graphics.IEffectMatrices
  - Microsoft.Xna.Framework.Graphics.IEffectLights
  - Microsoft.Xna.Framework.Graphics.IEffectFog
  inheritedMembers:
  - Microsoft.Xna.Framework.Graphics.Effect.Parameters
  - Microsoft.Xna.Framework.Graphics.Effect.Techniques
  - Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  - Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  - Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World
  id: World
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: World
  nameWithType: EnvironmentMapEffect.World
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: World
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 76
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the world matrix.\n"
  example: []
  syntax:
    content: public Matrix World { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Property World As Matrix
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectMatrices.World
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View
  id: View
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: View
  nameWithType: EnvironmentMapEffect.View
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: View
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 91
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the view matrix.\n"
  example: []
  syntax:
    content: public Matrix View { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Property View As Matrix
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectMatrices.View
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection
  id: Projection
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: Projection
  nameWithType: EnvironmentMapEffect.Projection
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Projection
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 106
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the projection matrix.\n"
  example: []
  syntax:
    content: public Matrix Projection { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public Property Projection As Matrix
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectMatrices.Projection
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor
  id: DiffuseColor
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: DiffuseColor
  nameWithType: EnvironmentMapEffect.DiffuseColor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DiffuseColor
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 121
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the material diffuse color (range 0 to 1).\n"
  example: []
  syntax:
    content: public Vector3 DiffuseColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property DiffuseColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor
  id: EmissiveColor
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: EmissiveColor
  nameWithType: EnvironmentMapEffect.EmissiveColor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EmissiveColor
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 136
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the material emissive color (range 0 to 1).\n"
  example: []
  syntax:
    content: public Vector3 EmissiveColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property EmissiveColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha
  id: Alpha
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: Alpha
  nameWithType: EnvironmentMapEffect.Alpha
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Alpha
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 151
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the material alpha.\n"
  example: []
  syntax:
    content: public float Alpha { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Alpha As Single
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor
  id: AmbientLightColor
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: AmbientLightColor
  nameWithType: EnvironmentMapEffect.AmbientLightColor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: AmbientLightColor
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 166
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the ambient light color (range 0 to 1).\n"
  example: []
  syntax:
    content: public Vector3 AmbientLightColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property AmbientLightColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.AmbientLightColor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0
  id: DirectionalLight0
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: DirectionalLight0
  nameWithType: EnvironmentMapEffect.DirectionalLight0
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DirectionalLight0
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 181
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets the first directional light.\n"
  example: []
  syntax:
    content: public DirectionalLight DirectionalLight0 { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.DirectionalLight
    content.vb: Public ReadOnly Property DirectionalLight0 As DirectionalLight
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight0
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1
  id: DirectionalLight1
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: DirectionalLight1
  nameWithType: EnvironmentMapEffect.DirectionalLight1
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DirectionalLight1
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 187
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets the second directional light.\n"
  example: []
  syntax:
    content: public DirectionalLight DirectionalLight1 { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.DirectionalLight
    content.vb: Public ReadOnly Property DirectionalLight1 As DirectionalLight
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight1
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2
  id: DirectionalLight2
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: DirectionalLight2
  nameWithType: EnvironmentMapEffect.DirectionalLight2
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: DirectionalLight2
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 193
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets the third directional light.\n"
  example: []
  syntax:
    content: public DirectionalLight DirectionalLight2 { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.DirectionalLight
    content.vb: Public ReadOnly Property DirectionalLight2 As DirectionalLight
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight2
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled
  id: FogEnabled
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: FogEnabled
  nameWithType: EnvironmentMapEffect.FogEnabled
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FogEnabled
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 199
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the fog enable flag.\n"
  example: []
  syntax:
    content: public bool FogEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FogEnabled As Boolean
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart
  id: FogStart
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: FogStart
  nameWithType: EnvironmentMapEffect.FogStart
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FogStart
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 217
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the fog start distance.\n"
  example: []
  syntax:
    content: public float FogStart { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property FogStart As Single
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectFog.FogStart
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd
  id: FogEnd
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: FogEnd
  nameWithType: EnvironmentMapEffect.FogEnd
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FogEnd
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 232
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the fog end distance.\n"
  example: []
  syntax:
    content: public float FogEnd { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property FogEnd As Single
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnd
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor
  id: FogColor
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: FogColor
  nameWithType: EnvironmentMapEffect.FogColor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FogColor
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 247
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the fog color.\n"
  example: []
  syntax:
    content: public Vector3 FogColor { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property FogColor As Vector3
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectFog.FogColor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture
  id: Texture
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: EnvironmentMapEffect.Texture
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Texture
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 257
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the current texture.\n"
  example: []
  syntax:
    content: public Texture2D Texture { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.Texture2D
    content.vb: Public Property Texture As Texture2D
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap
  id: EnvironmentMap
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: EnvironmentMap
  nameWithType: EnvironmentMapEffect.EnvironmentMap
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnvironmentMap
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 267
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the current environment map texture.\n"
  example: []
  syntax:
    content: public TextureCube EnvironmentMap { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.TextureCube
    content.vb: Public Property EnvironmentMap As TextureCube
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount
  id: EnvironmentMapAmount
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: EnvironmentMapAmount
  nameWithType: EnvironmentMapEffect.EnvironmentMapAmount
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnvironmentMapAmount
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 280
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the amount of the environment map RGB that will be blended over \nthe base texture. Range 0 to 1, default 1. If set to zero, the RGB channels \nof the environment map will completely ignored (but the environment map alpha \nmay still be visible if EnvironmentMapSpecular is greater than zero).\n"
  example: []
  syntax:
    content: public float EnvironmentMapAmount { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property EnvironmentMapAmount As Single
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular
  id: EnvironmentMapSpecular
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: EnvironmentMapSpecular
  nameWithType: EnvironmentMapEffect.EnvironmentMapSpecular
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnvironmentMapSpecular
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 294
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the amount of the environment map alpha channel that will \nbe added to the base texture. Range 0 to 1, default 0. This can be used \nto implement cheap specular lighting, by encoding one or more specular \nhighlight patterns into the environment map alpha channel, then setting \nEnvironmentMapSpecular to the desired specular light color.\n"
  example: []
  syntax:
    content: public Vector3 EnvironmentMapSpecular { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector3
    content.vb: Public Property EnvironmentMapSpecular As Vector3
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor
  id: FresnelFactor
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: FresnelFactor
  nameWithType: EnvironmentMapEffect.FresnelFactor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: FresnelFactor
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 323
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets or sets the Fresnel factor used for the environment map blending. \nHigher values make the environment map only visible around the silhouette \nedges of the object, while lower values make it visible everywhere. \nSetting this property to 0 disables Fresnel entirely, making the \nenvironment map equally visible regardless of view angle. The default is \n1. Fresnel only affects the environment map RGB (the intensity of which is \ncontrolled by EnvironmentMapAmount). The alpha contribution (controlled by \nEnvironmentMapSpecular) is not affected by the Fresnel setting.\n"
  example: []
  syntax:
    content: public float FresnelFactor { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property FresnelFactor As Single
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled
  id: Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled
  isEii: true
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: IEffectLights.LightingEnabled
  nameWithType: EnvironmentMapEffect.IEffectLights.LightingEnabled
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 346
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nThis effect requires lighting, so we explicitly implement\nIEffectLights.LightingEnabled, and do not allow turning it off.\n"
  example: []
  syntax:
    content: bool IEffectLights.LightingEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled As Boolean Implements IEffectLights.LightingEnabled
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  nameWithType.vb: EnvironmentMapEffect.Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  modifiers.csharp:
  - get
  - set
  name.vb: Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  commentId: M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)'
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: EnvironmentMapEffect(GraphicsDevice)
  nameWithType: EnvironmentMapEffect.EnvironmentMapEffect(GraphicsDevice)
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapEffect(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 361
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCreates a new EnvironmentMapEffect with default parameter settings.\n"
  example: []
  syntax:
    content: public EnvironmentMapEffect(GraphicsDevice device)
    parameters:
    - id: device
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    content.vb: Public Sub New(device As GraphicsDevice)
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect)
  commentId: M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect)'
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: EnvironmentMapEffect(EnvironmentMapEffect)
  nameWithType: EnvironmentMapEffect.EnvironmentMapEffect(EnvironmentMapEffect)
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapEffect(Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect)
  type: Constructor
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: .ctor
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 377
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCreates a new EnvironmentMapEffect by cloning parameter settings from an existing instance.\n"
  example: []
  syntax:
    content: protected EnvironmentMapEffect(EnvironmentMapEffect cloneSource)
    parameters:
    - id: cloneSource
      type: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
    content.vb: Protected Sub New(cloneSource As EnvironmentMapEffect)
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone
  commentId: M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone
  id: Clone
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: EnvironmentMapEffect.Clone()
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Clone
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 404
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nCreates a clone of the current EnvironmentMapEffect instance.\n"
  example: []
  syntax:
    content: public override Effect Clone()
    return:
      type: Microsoft.Xna.Framework.Graphics.Effect
    content.vb: Public Overrides Function Clone As Effect
  overridden: Microsoft.Xna.Framework.Graphics.Effect.Clone
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting
  commentId: M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting
  id: EnableDefaultLighting
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: EnableDefaultLighting()
  nameWithType: EnvironmentMapEffect.EnableDefaultLighting()
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: EnableDefaultLighting
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 413
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nSets up the standard key/fill/back lighting rig.\n"
  example: []
  syntax:
    content: public void EnableDefaultLighting()
    content.vb: Public Sub EnableDefaultLighting
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting*
  implements:
  - Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply
  commentId: M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply
  id: OnApply
  parent: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  langs:
  - csharp
  - vb
  name: OnApply()
  nameWithType: EnvironmentMapEffect.OnApply()
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: OnApply
    path: ../MonoGame.Framework/Graphics/Effect/EnvironmentMapEffect.cs
    startLine: 458
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nLazily computes derived parameter values immediately before applying the effect.\n"
  example: []
  syntax:
    content: protected override void OnApply()
    content.vb: Protected Overrides Sub OnApply
  overridden: Microsoft.Xna.Framework.Graphics.Effect.OnApply
  overload: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsResource
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsResource
  nameWithType: GraphicsResource
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource
- uid: Microsoft.Xna.Framework.Graphics.Effect
  commentId: T:Microsoft.Xna.Framework.Graphics.Effect
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: Microsoft.Xna.Framework.Graphics.Effect
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.Graphics.IEffectMatrices
  commentId: T:Microsoft.Xna.Framework.Graphics.IEffectMatrices
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: IEffectMatrices
  nameWithType: IEffectMatrices
  fullName: Microsoft.Xna.Framework.Graphics.IEffectMatrices
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights
  commentId: T:Microsoft.Xna.Framework.Graphics.IEffectLights
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: IEffectLights
  nameWithType: IEffectLights
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog
  commentId: T:Microsoft.Xna.Framework.Graphics.IEffectFog
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: IEffectFog
  nameWithType: IEffectFog
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog
- uid: Microsoft.Xna.Framework.Graphics.Effect.Parameters
  commentId: P:Microsoft.Xna.Framework.Graphics.Effect.Parameters
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: Parameters
  nameWithType: Effect.Parameters
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Parameters
- uid: Microsoft.Xna.Framework.Graphics.Effect.Techniques
  commentId: P:Microsoft.Xna.Framework.Graphics.Effect.Techniques
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: Techniques
  nameWithType: Effect.Techniques
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Techniques
- uid: Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  commentId: P:Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: CurrentTechnique
  nameWithType: Effect.CurrentTechnique
  fullName: Microsoft.Xna.Framework.Graphics.Effect.CurrentTechnique
- uid: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Effect.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Effect.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.Effect.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Effect.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.Effect.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: GraphicsDeviceResetting()
  nameWithType: Effect.GraphicsDeviceResetting()
  fullName: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: Effect.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
    name: GraphicsDeviceResetting
    nameWithType: Effect.GraphicsDeviceResetting
    fullName: Microsoft.Xna.Framework.Graphics.Effect.GraphicsDeviceResetting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsResource.Dispose()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
    name: Dispose
    nameWithType: GraphicsResource.Dispose
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  commentId: E:Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Disposing
  nameWithType: GraphicsResource.Disposing
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Disposing
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsResource.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: IsDisposed
  nameWithType: GraphicsResource.IsDisposed
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.IsDisposed
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Name
  nameWithType: GraphicsResource.Name
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Name
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: Tag
  nameWithType: GraphicsResource.Tag
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.Tag
- uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  commentId: M:Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  parent: Microsoft.Xna.Framework.Graphics.GraphicsResource
  isExternal: false
  name: ToString()
  nameWithType: GraphicsResource.ToString()
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
    name: ToString
    nameWithType: GraphicsResource.ToString
    fullName: Microsoft.Xna.Framework.Graphics.GraphicsResource.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World
  isExternal: false
  name: World
  nameWithType: EnvironmentMapEffect.World
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World
- uid: Microsoft.Xna.Framework.Graphics.IEffectMatrices.World
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectMatrices.World
  parent: Microsoft.Xna.Framework.Graphics.IEffectMatrices
  isExternal: false
  name: World
  nameWithType: IEffectMatrices.World
  fullName: Microsoft.Xna.Framework.Graphics.IEffectMatrices.World
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: false
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View
  isExternal: false
  name: View
  nameWithType: EnvironmentMapEffect.View
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View
- uid: Microsoft.Xna.Framework.Graphics.IEffectMatrices.View
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectMatrices.View
  parent: Microsoft.Xna.Framework.Graphics.IEffectMatrices
  isExternal: false
  name: View
  nameWithType: IEffectMatrices.View
  fullName: Microsoft.Xna.Framework.Graphics.IEffectMatrices.View
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection
  isExternal: false
  name: Projection
  nameWithType: EnvironmentMapEffect.Projection
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection
- uid: Microsoft.Xna.Framework.Graphics.IEffectMatrices.Projection
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectMatrices.Projection
  parent: Microsoft.Xna.Framework.Graphics.IEffectMatrices
  isExternal: false
  name: Projection
  nameWithType: IEffectMatrices.Projection
  fullName: Microsoft.Xna.Framework.Graphics.IEffectMatrices.Projection
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor
  isExternal: false
  name: DiffuseColor
  nameWithType: EnvironmentMapEffect.DiffuseColor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor
- uid: Microsoft.Xna.Framework.Vector3
  commentId: T:Microsoft.Xna.Framework.Vector3
  parent: Microsoft.Xna.Framework
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: Microsoft.Xna.Framework.Vector3
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor
  isExternal: false
  name: EmissiveColor
  nameWithType: EnvironmentMapEffect.EmissiveColor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha
  isExternal: false
  name: Alpha
  nameWithType: EnvironmentMapEffect.Alpha
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor
  isExternal: false
  name: AmbientLightColor
  nameWithType: EnvironmentMapEffect.AmbientLightColor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.AmbientLightColor
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.AmbientLightColor
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: AmbientLightColor
  nameWithType: IEffectLights.AmbientLightColor
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.AmbientLightColor
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0
  isExternal: false
  name: DirectionalLight0
  nameWithType: EnvironmentMapEffect.DirectionalLight0
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight0
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight0
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: DirectionalLight0
  nameWithType: IEffectLights.DirectionalLight0
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight0
- uid: Microsoft.Xna.Framework.Graphics.DirectionalLight
  commentId: T:Microsoft.Xna.Framework.Graphics.DirectionalLight
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: DirectionalLight
  nameWithType: DirectionalLight
  fullName: Microsoft.Xna.Framework.Graphics.DirectionalLight
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1
  isExternal: false
  name: DirectionalLight1
  nameWithType: EnvironmentMapEffect.DirectionalLight1
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight1
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight1
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: DirectionalLight1
  nameWithType: IEffectLights.DirectionalLight1
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight1
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2
  isExternal: false
  name: DirectionalLight2
  nameWithType: EnvironmentMapEffect.DirectionalLight2
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight2
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight2
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: DirectionalLight2
  nameWithType: IEffectLights.DirectionalLight2
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight2
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled
  isExternal: false
  name: FogEnabled
  nameWithType: EnvironmentMapEffect.FogEnabled
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnabled
  parent: Microsoft.Xna.Framework.Graphics.IEffectFog
  isExternal: false
  name: FogEnabled
  nameWithType: IEffectFog.FogEnabled
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart
  isExternal: false
  name: FogStart
  nameWithType: EnvironmentMapEffect.FogStart
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog.FogStart
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogStart
  parent: Microsoft.Xna.Framework.Graphics.IEffectFog
  isExternal: false
  name: FogStart
  nameWithType: IEffectFog.FogStart
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog.FogStart
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd
  isExternal: false
  name: FogEnd
  nameWithType: EnvironmentMapEffect.FogEnd
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnd
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnd
  parent: Microsoft.Xna.Framework.Graphics.IEffectFog
  isExternal: false
  name: FogEnd
  nameWithType: IEffectFog.FogEnd
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnd
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor
  isExternal: false
  name: FogColor
  nameWithType: EnvironmentMapEffect.FogColor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor
- uid: Microsoft.Xna.Framework.Graphics.IEffectFog.FogColor
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogColor
  parent: Microsoft.Xna.Framework.Graphics.IEffectFog
  isExternal: false
  name: FogColor
  nameWithType: IEffectFog.FogColor
  fullName: Microsoft.Xna.Framework.Graphics.IEffectFog.FogColor
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture
  isExternal: false
  name: Texture
  nameWithType: EnvironmentMapEffect.Texture
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap
  isExternal: false
  name: EnvironmentMap
  nameWithType: EnvironmentMapEffect.EnvironmentMap
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap
- uid: Microsoft.Xna.Framework.Graphics.TextureCube
  commentId: T:Microsoft.Xna.Framework.Graphics.TextureCube
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: TextureCube
  nameWithType: TextureCube
  fullName: Microsoft.Xna.Framework.Graphics.TextureCube
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount
  isExternal: false
  name: EnvironmentMapAmount
  nameWithType: EnvironmentMapEffect.EnvironmentMapAmount
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular
  isExternal: false
  name: EnvironmentMapSpecular
  nameWithType: EnvironmentMapEffect.EnvironmentMapSpecular
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor
  isExternal: false
  name: FresnelFactor
  nameWithType: EnvironmentMapEffect.FresnelFactor
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled
  isExternal: false
  name: IEffectLights.LightingEnabled
  nameWithType: EnvironmentMapEffect.IEffectLights.LightingEnabled
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  nameWithType.vb: EnvironmentMapEffect.Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  name.vb: Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  commentId: P:Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: LightingEnabled
  nameWithType: IEffectLights.LightingEnabled
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor
  isExternal: false
  name: EnvironmentMapEffect
  nameWithType: EnvironmentMapEffect.EnvironmentMapEffect
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapEffect
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  commentId: T:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: EnvironmentMapEffect
  nameWithType: EnvironmentMapEffect
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect
- uid: Microsoft.Xna.Framework.Graphics.Effect.Clone
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.Clone
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: Clone()
  nameWithType: Effect.Clone()
  fullName: Microsoft.Xna.Framework.Graphics.Effect.Clone()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.Clone
    name: Clone
    nameWithType: Effect.Clone
    fullName: Microsoft.Xna.Framework.Graphics.Effect.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.Clone
    name: Clone
    nameWithType: Effect.Clone
    fullName: Microsoft.Xna.Framework.Graphics.Effect.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone
  isExternal: false
  name: Clone
  nameWithType: EnvironmentMapEffect.Clone
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting
  isExternal: false
  name: EnableDefaultLighting
  nameWithType: EnvironmentMapEffect.EnableDefaultLighting
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting
- uid: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  commentId: M:Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  parent: Microsoft.Xna.Framework.Graphics.IEffectLights
  isExternal: false
  name: EnableDefaultLighting()
  nameWithType: IEffectLights.EnableDefaultLighting()
  fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
    name: EnableDefaultLighting
    nameWithType: IEffectLights.EnableDefaultLighting
    fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
    name: EnableDefaultLighting
    nameWithType: IEffectLights.EnableDefaultLighting
    fullName: Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.Effect.OnApply
  commentId: M:Microsoft.Xna.Framework.Graphics.Effect.OnApply
  parent: Microsoft.Xna.Framework.Graphics.Effect
  isExternal: false
  name: OnApply()
  nameWithType: Effect.OnApply()
  fullName: Microsoft.Xna.Framework.Graphics.Effect.OnApply()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.OnApply
    name: OnApply
    nameWithType: Effect.OnApply
    fullName: Microsoft.Xna.Framework.Graphics.Effect.OnApply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Effect.OnApply
    name: OnApply
    nameWithType: Effect.OnApply
    fullName: Microsoft.Xna.Framework.Graphics.Effect.OnApply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply
  isExternal: false
  name: OnApply
  nameWithType: EnvironmentMapEffect.OnApply
  fullName: Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply
