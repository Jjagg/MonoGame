### YamlMime:ManagedReference
items:
- uid: NVorbis.NewStreamEventArgs
  commentId: T:NVorbis.NewStreamEventArgs
  id: NewStreamEventArgs
  parent: NVorbis
  children:
  - NVorbis.NewStreamEventArgs.#ctor(NVorbis.IPacketProvider)
  - NVorbis.NewStreamEventArgs.IgnoreStream
  - NVorbis.NewStreamEventArgs.PacketProvider
  langs:
  - csharp
  - vb
  name: NewStreamEventArgs
  nameWithType: NewStreamEventArgs
  fullName: NVorbis.NewStreamEventArgs
  type: Class
  source:
    remote:
      path: NVorbis/NewStreamEventArgs.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: NewStreamEventArgs
    path: ../ThirdParty/NVorbis/NVorbis/NewStreamEventArgs.cs
    startLine: 14
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nEvent data for when a new logical stream is found in a container.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class NewStreamEventArgs : EventArgs
    content.vb: >-
      <Serializable>

      Public Class NewStreamEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NVorbis.NewStreamEventArgs.#ctor(NVorbis.IPacketProvider)
  commentId: M:NVorbis.NewStreamEventArgs.#ctor(NVorbis.IPacketProvider)
  id: '#ctor(NVorbis.IPacketProvider)'
  parent: NVorbis.NewStreamEventArgs
  langs:
  - csharp
  - vb
  name: NewStreamEventArgs(IPacketProvider)
  nameWithType: NewStreamEventArgs.NewStreamEventArgs(IPacketProvider)
  fullName: NVorbis.NewStreamEventArgs.NewStreamEventArgs(NVorbis.IPacketProvider)
  type: Constructor
  source:
    remote:
      path: NVorbis/NewStreamEventArgs.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: .ctor
    path: ../ThirdParty/NVorbis/NVorbis/NewStreamEventArgs.cs
    startLine: 21
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nCreates a new instance of <xref href=\"NVorbis.NewStreamEventArgs\" data-throw-if-not-resolved=\"false\"></xref> with the specified <xref href=\"NVorbis.IPacketProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public NewStreamEventArgs(IPacketProvider packetProvider)
    parameters:
    - id: packetProvider
      type: NVorbis.IPacketProvider
      description: An <xref href="NVorbis.IPacketProvider" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Sub New(packetProvider As IPacketProvider)
  overload: NVorbis.NewStreamEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NVorbis.NewStreamEventArgs.PacketProvider
  commentId: P:NVorbis.NewStreamEventArgs.PacketProvider
  id: PacketProvider
  parent: NVorbis.NewStreamEventArgs
  langs:
  - csharp
  - vb
  name: PacketProvider
  nameWithType: NewStreamEventArgs.PacketProvider
  fullName: NVorbis.NewStreamEventArgs.PacketProvider
  type: Property
  source:
    remote:
      path: NVorbis/NewStreamEventArgs.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: PacketProvider
    path: ../ThirdParty/NVorbis/NVorbis/NewStreamEventArgs.cs
    startLine: 31
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nGets new the <xref href=\"NVorbis.IPacketProvider\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public IPacketProvider PacketProvider { get; }
    parameters: []
    return:
      type: NVorbis.IPacketProvider
    content.vb: Public ReadOnly Property PacketProvider As IPacketProvider
  overload: NVorbis.NewStreamEventArgs.PacketProvider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NVorbis.NewStreamEventArgs.IgnoreStream
  commentId: P:NVorbis.NewStreamEventArgs.IgnoreStream
  id: IgnoreStream
  parent: NVorbis.NewStreamEventArgs
  langs:
  - csharp
  - vb
  name: IgnoreStream
  nameWithType: NewStreamEventArgs.IgnoreStream
  fullName: NVorbis.NewStreamEventArgs.IgnoreStream
  type: Property
  source:
    remote:
      path: NVorbis/NewStreamEventArgs.cs
      branch: c84c6aced83e3fd801bdac237268a51e098ace2a
      repo: https://github.com/ioctlLR/NVorbis.git
    id: IgnoreStream
    path: ../ThirdParty/NVorbis/NVorbis/NewStreamEventArgs.cs
    startLine: 36
  assemblies:
  - MonoGame.Framework
  namespace: NVorbis
  summary: "\nGets or sets whether to ignore the logical stream associated with the packet provider.\n"
  example: []
  syntax:
    content: public bool IgnoreStream { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreStream As Boolean
  overload: NVorbis.NewStreamEventArgs.IgnoreStream*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NVorbis
  commentId: N:NVorbis
  isExternal: false
  name: NVorbis
  nameWithType: NVorbis
  fullName: NVorbis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: NVorbis.NewStreamEventArgs
  commentId: T:NVorbis.NewStreamEventArgs
  isExternal: false
  name: NewStreamEventArgs
  nameWithType: NewStreamEventArgs
  fullName: NVorbis.NewStreamEventArgs
- uid: NVorbis.IPacketProvider
  commentId: T:NVorbis.IPacketProvider
  parent: NVorbis
  isExternal: false
  name: IPacketProvider
  nameWithType: IPacketProvider
  fullName: NVorbis.IPacketProvider
- uid: NVorbis.NewStreamEventArgs.#ctor*
  commentId: Overload:NVorbis.NewStreamEventArgs.#ctor
  isExternal: false
  name: NewStreamEventArgs
  nameWithType: NewStreamEventArgs.NewStreamEventArgs
  fullName: NVorbis.NewStreamEventArgs.NewStreamEventArgs
- uid: NVorbis.NewStreamEventArgs.PacketProvider*
  commentId: Overload:NVorbis.NewStreamEventArgs.PacketProvider
  isExternal: false
  name: PacketProvider
  nameWithType: NewStreamEventArgs.PacketProvider
  fullName: NVorbis.NewStreamEventArgs.PacketProvider
- uid: NVorbis.NewStreamEventArgs.IgnoreStream*
  commentId: Overload:NVorbis.NewStreamEventArgs.IgnoreStream
  isExternal: false
  name: IgnoreStream
  nameWithType: NewStreamEventArgs.IgnoreStream
  fullName: NVorbis.NewStreamEventArgs.IgnoreStream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
