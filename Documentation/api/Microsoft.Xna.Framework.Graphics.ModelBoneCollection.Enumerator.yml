### YamlMime:ManagedReference
items:
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator
  commentId: T:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator
  id: ModelBoneCollection.Enumerator
  parent: Microsoft.Xna.Framework.Graphics
  children:
  - Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current
  - Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose
  - Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext
  - Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Reset
  - Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  - vb
  name: ModelBoneCollection.Enumerator
  nameWithType: ModelBoneCollection.Enumerator
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator
  type: Struct
  source:
    remote:
      path: MonoGame.Framework/Graphics/ModelBoneCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Enumerator
    path: ../MonoGame.Framework/Graphics/ModelBoneCollection.cs
    startLine: 73
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nProvides the ability to iterate through the bones in an ModelMeshCollection.\n"
  example: []
  syntax:
    content: 'public struct Enumerator : IEnumerator<ModelBone>, IDisposable, IEnumerator'
    content.vb: >-
      Public Structure Enumerator
          Implements IEnumerator(Of ModelBone), IDisposable, IEnumerator
  implements:
  - System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.ModelBone}
  - System.IDisposable
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current
  commentId: P:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current
  id: Current
  parent: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: ModelBoneCollection.Enumerator.Current
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/ModelBoneCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Current
    path: ../MonoGame.Framework/Graphics/ModelBoneCollection.cs
    startLine: 88
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nGets the current element in the ModelMeshCollection.\n"
  example: []
  syntax:
    content: public ModelBone Current { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.ModelBone
    content.vb: Public ReadOnly Property Current As ModelBone
  overload: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current*
  implements:
  - System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.ModelBone}.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext
  commentId: M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext
  id: MoveNext
  parent: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: ModelBoneCollection.Enumerator.MoveNext()
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/ModelBoneCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: MoveNext
    path: ../MonoGame.Framework/Graphics/ModelBoneCollection.cs
    startLine: 93
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nAdvances the enumerator to the next element of the ModelMeshCollection.\n"
  example: []
  syntax:
    content: public bool MoveNext()
    return:
      type: System.Boolean
    content.vb: Public Function MoveNext As Boolean
  overload: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext*
  implements:
  - System.Collections.IEnumerator.MoveNext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose
  commentId: M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose
  id: Dispose
  parent: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ModelBoneCollection.Enumerator.Dispose()
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/ModelBoneCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Dispose
    path: ../MonoGame.Framework/Graphics/ModelBoneCollection.cs
    startLine: 104
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  summary: "\nImmediately releases the unmanaged resources used by this object.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.System#Collections#IEnumerator#Current
  commentId: P:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Current
  nameWithType: ModelBoneCollection.Enumerator.IEnumerator.Current
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.System.Collections.IEnumerator.Current
  type: Property
  source:
    remote:
      path: MonoGame.Framework/Graphics/ModelBoneCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: System.Collections.IEnumerator.Current
    path: ../MonoGame.Framework/Graphics/ModelBoneCollection.cs
    startLine: 112
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: object IEnumerator.Current { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current
  overload: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.System#Collections#IEnumerator#Current*
  implements:
  - System.Collections.IEnumerator.Current
  nameWithType.vb: ModelBoneCollection.Enumerator.System.Collections.IEnumerator.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IEnumerator.Current
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Reset
  commentId: M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Reset
  id: Reset
  parent: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ModelBoneCollection.Enumerator.Reset()
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Reset()
  type: Method
  source:
    remote:
      path: MonoGame.Framework/Graphics/ModelBoneCollection.cs
      branch: docfx
      repo: https://github.com/Jjagg/MonoGame
    id: Reset
    path: ../MonoGame.Framework/Graphics/ModelBoneCollection.cs
    startLine: 117
  assemblies:
  - MonoGame.Framework
  namespace: Microsoft.Xna.Framework.Graphics
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Reset*
  implements:
  - System.Collections.IEnumerator.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.ModelBone}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.ModelBone}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ModelBone>
  nameWithType: IEnumerator<ModelBone>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.Xna.Framework.Graphics.ModelBone>
  nameWithType.vb: IEnumerator(Of ModelBone)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Microsoft.Xna.Framework.Graphics.ModelBone)
  name.vb: IEnumerator(Of ModelBone)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Graphics.ModelBone
    name: ModelBone
    nameWithType: ModelBone
    fullName: Microsoft.Xna.Framework.Graphics.ModelBone
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Graphics.ModelBone
    name: ModelBone
    nameWithType: ModelBone
    fullName: Microsoft.Xna.Framework.Graphics.ModelBone
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current
  isExternal: false
  name: Current
  nameWithType: ModelBoneCollection.Enumerator.Current
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current
- uid: System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.ModelBone}.Current
  commentId: P:System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.ModelBone}.Current
  parent: System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Graphics.ModelBone}
  definition: System.Collections.Generic.IEnumerator`1.Current
  name: Current
  nameWithType: IEnumerator<ModelBone>.Current
  fullName: System.Collections.Generic.IEnumerator<Microsoft.Xna.Framework.Graphics.ModelBone>.Current
  nameWithType.vb: IEnumerator(Of ModelBone).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of Microsoft.Xna.Framework.Graphics.ModelBone).Current
- uid: Microsoft.Xna.Framework.Graphics.ModelBone
  commentId: T:Microsoft.Xna.Framework.Graphics.ModelBone
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: false
  name: ModelBone
  nameWithType: ModelBone
  fullName: Microsoft.Xna.Framework.Graphics.ModelBone
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  isExternal: true
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  nameWithType.vb: IEnumerator(Of T).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext
  isExternal: false
  name: MoveNext
  nameWithType: ModelBoneCollection.Enumerator.MoveNext
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext
- uid: System.Collections.IEnumerator.MoveNext
  commentId: M:System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: true
  name: MoveNext()
  nameWithType: IEnumerator.MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose
  isExternal: false
  name: Dispose
  nameWithType: ModelBoneCollection.Enumerator.Dispose
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.System#Collections#IEnumerator#Current*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.System#Collections#IEnumerator#Current
  isExternal: false
  name: IEnumerator.Current
  nameWithType: ModelBoneCollection.Enumerator.IEnumerator.Current
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.System.Collections.IEnumerator.Current
  nameWithType.vb: ModelBoneCollection.Enumerator.System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: System.Collections.IEnumerator.Current
  commentId: P:System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Current
  nameWithType: IEnumerator.Current
  fullName: System.Collections.IEnumerator.Current
- uid: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Reset*
  commentId: Overload:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Reset
  isExternal: false
  name: Reset
  nameWithType: ModelBoneCollection.Enumerator.Reset
  fullName: Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Reset
- uid: System.Collections.IEnumerator.Reset
  commentId: M:System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Reset()
  nameWithType: IEnumerator.Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
