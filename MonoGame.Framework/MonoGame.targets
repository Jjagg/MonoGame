<Project>

  <!-- SHARED -->

  <PropertyGroup>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>

    <IntermediateOutputPath>bin\$(MonoGamePlatform)\$(Configuration)\$(TargetFramework)</IntermediateOutputPath>
    <OutputPath>bin\$(MonoGamePlatform)\$(Configuration)\$(TargetFramework)</OutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>

    <!-- Append and prepend a semicolon so we can check for ';service;' instead of 'service'
         and prevent including files where one service is a substring of another -->
    <Services>;$(Services);</Services>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="*.cs" />
    <Compile Include="Audio/**/*.cs" />
    <Compile Include="Content/**/*.cs" />
    <Compile Include="Design/**/*.cs" />
    <Compile Include="Graphics/**/*.cs" />
    <Compile Include="Input/**/*.cs" />
    <Compile Include="Media/**/*.cs" />
    <Compile Include="Utilities/**/*.cs" />

    <!-- Remove files with a dot in the file name apart from the extension. -->
    <Compile Remove="**/*.?*.cs" />
    <Compile Include="Utilities/Imaging/Stb.Image.cs" />
    <Compile Include="Utilities/Imaging/Stb.Image.Generated.cs" />
    <Compile Include="Utilities/Imaging/Stb.ImageWrite.cs" />
    <Compile Include="Utilities/Imaging/Stb.ImageWrite.Generated.cs" />

    <Compile Remove="Android/**/*.cs" />
    <Compile Remove="DesktopGL/**/*.cs" />
    <Compile Remove="iOS/**/*.cs" />
    <Compile Remove="MacOS/**/*.cs" />
    <Compile Remove="Microsoft/*.cs" />
    <Compile Remove="SDL/**/*.cs" />
    <Compile Remove="Web/**/*.cs" />
    <Compile Remove="Windows/**/*.cs" />
    <Compile Remove="WindowsUniversal/**/*.cs" />

    <Compile Remove="GamerServices/**/*.cs" />
    <Compile Remove="Net/**/*.cs" />
  </ItemGroup>

  <!-- SERVICES -->

  <PropertyGroup Condition="$(Services.Contains(';WinForms;'))">
    <DefineConstants>$(DefineConstants);WINFORMS</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(Services.Contains(';WinForms;'))">
    <Compile Include="WinForms/**/*.cs" />
    <Compile Include="**/*.WinForms.cs" />

    <Reference Include="System.Windows.Forms" Condition="!$(TargetFramework.StartsWith('netcoreapp'))"/>
    <FrameworkReference Include="Microsoft.DesktopUI" Condition="$(TargetFramework.StartsWith('netcoreapp'))"/>
  </ItemGroup>

  <PropertyGroup Condition="$(Services.Contains(';SDL;'))">
    <DefineConstants>$(DefineConstants);SDL</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(Services.Contains(';SDL;'))">
    <Compile Include="SDL/**/*.cs" />
    <Compile Include="**/*.SDL.cs" />

    <Compile Remove="Input\KeyboardInput.cs" />
    <Compile Remove="Input\MessageBox.cs" />

    <EmbeddedResource Include="..\ThirdParty\SDL_GameControllerDB\gamecontrollerdb.txt">
      <LogicalName>gamecontrollerdb.txt</LogicalName>
    </EmbeddedResource>
    <None Include="..\ThirdParty\Dependencies\SDL\Windows\x86\SDL2.dll">
      <Link>x86\SDL2.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\ThirdParty\Dependencies\SDL\Windows\x64\SDL2.dll">
      <Link>x64\SDL2.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\ThirdParty\Dependencies\SDL\Linux\x86\libSDL2-2.0.so.0">
      <Link>x86\libSDL2-2.0.so.0</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\ThirdParty\Dependencies\SDL\Linux\x64\libSDL2-2.0.so.0">
      <Link>x64\libSDL2-2.0.so.0</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\ThirdParty\Dependencies\SDL\MacOS\Universal\libSDL2-2.0.0.dylib">
      <Link>libSDL2-2.0.0.dylib</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <PropertyGroup Condition="$(Services.Contains(';XAudio;'))">
    <DefineConstants>$(DefineConstants);XAUDIO</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(Services.Contains(';XAudio;'))">
    <Compile Include="**/*.XAudio.cs" />

    <Compile Include="Audio/Microphone.Default.cs" />

    <Reference Include="..\ThirdParty\Dependencies\SharpDX\net40\SharpDX.XAudio2.dll"/>
  </ItemGroup>

  <PropertyGroup Condition="$(Services.Contains(';OpenAL;'))">
    <DefineConstants>$(DefineConstants);OPENAL</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(Services.Contains(';OpenAL;'))">
    <Compile Include="OpenAL\**\*.cs" />
    <Compile Include="**/*.OpenAL.cs" />

    <Compile Include="Audio\Xact\WaveBank.Default.cs" />

    <None Include="..\ThirdParty\Dependencies\openal-soft\Windows\x86\soft_oal.dll">
      <Link>x86\soft_oal.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\ThirdParty\Dependencies\openal-soft\Windows\x64\soft_oal.dll">
      <Link>x64\soft_oal.dll</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\ThirdParty\Dependencies\openal-soft\Linux\x86\libopenal.so.1">
      <Link>x86\libopenal.so.1</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\ThirdParty\Dependencies\openal-soft\Linux\x64\libopenal.so.1">
      <Link>x64\libopenal.so.1</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\ThirdParty\Dependencies\openal-soft\MacOS\Universal\libopenal.1.dylib">
      <Link>libopenal.1.dylib</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <PropertyGroup Condition="$(Services.Contains(';DirectX;'))">
    <DefineConstants>$(DefineConstants);DIRECTX</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(Services.Contains(';DirectX;'))">
    <Compile Include="DirectX\**\*.cs" />
    <Compile Include="**\*.DirectX.cs" />

    <Reference Include="..\ThirdParty\Dependencies\SharpDX\SharpDX.Direct2D1.dll"/>
    <Reference Include="..\ThirdParty\Dependencies\SharpDX\SharpDX.Direct3D11.dll"/>
    <Reference Include="..\ThirdParty\Dependencies\SharpDX\SharpDX.DXGI.dll"/>

    <EmbeddedResource Include="Graphics\Effect\Resources\AlphaTestEffect.dx11.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\BasicEffect.dx11.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\DualTextureEffect.dx11.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\EnvironmentMapEffect.dx11.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\SkinnedEffect.dx11.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\SpriteEffect.dx11.mgfxo" />
  </ItemGroup>

  <PropertyGroup Condition="$(Services.Contains(';OpenGL;'))">
    <DefineConstants>$(DefineConstants);OPENGL</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(Services.Contains(';OpenGL;'))">
    <Compile Include="OpenGL\**\*.cs" />
    <Compile Include="**\*.OpenGL.cs" />

    <Compile Include="Graphics\GraphicsDebug.Default.cs" />
    <Compile Remove="Graphics\GraphicsAdapter.cs" />
    <Compile Remove="Graphics\RenderTarget3D.cs" />

    <EmbeddedResource Include="Graphics\Effect\Resources\AlphaTestEffect.ogl.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\BasicEffect.ogl.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\DualTextureEffect.ogl.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\EnvironmentMapEffect.ogl.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\SkinnedEffect.ogl.mgfxo" />
    <EmbeddedResource Include="Graphics\Effect\Resources\SpriteEffect.ogl.mgfxo" />
  </ItemGroup>

  <PropertyGroup Condition="$(Services.Contains(';XInput;'))">
    <DefineConstants>$(DefineConstants);XINPUT</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(Services.Contains(';XInput;'))">
    <Compile Include="**\*.XInput.cs" />

    <Reference Include="..\ThirdParty\Dependencies\SharpDX\net40\SharpDX.XInput.dll"/>
  </ItemGroup>

  <PropertyGroup Condition="$(Services.Contains(';MMF;'))">
    <DefineConstants>$(DefineConstants);MEDIAFOUNDATION</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(Services.Contains(';MMF;'))">
    <Compile Include="**\*.MMF.cs" />

    <Reference Include="..\ThirdParty\Dependencies\SharpDX\net40\SharpDX.MediaFoundation.dll"/>
  </ItemGroup>

  <PropertyGroup Condition="$(Services.Contains(';NVorbis;'))">
    <DefineConstants>$(DefineConstants);NVORBIS</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="$(Services.Contains(';NVorbis;'))">
    <Compile Include="**\*.NVorbis.cs" />

    <Compile Include="..\ThirdParty\NVorbis\NVorbis\*.cs">
      <Link>NVorbis\%(Filename)%(Extension)</Link>
    </Compile>
    <Compile Include="..\ThirdParty\NVorbis\NVorbis\Ogg\*.cs">
      <Link>NVorbis\Ogg\%(Filename)%(Extension)</Link>
    </Compile>
  </ItemGroup>

  <!-- Shared Dependencies -->
  <ItemGroup Condition="$(Services.Contains(';DirectX;')) Or
                        $(Services.Contains(';MMF;'))">
    <Reference Include="..\ThirdParty\Dependencies\SharpDX\net40\SharpDX.dll"/>
  </ItemGroup>
</Project>

